import{_ as e,c as t,o as n,ag as s}from"./chunks/framework.Ds6Eueu6.js";const u=JSON.parse('{"title":"Examples Using the Classic Partitioning Syntax","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/admin_guide/ddl/classic-partition.md","filePath":"docs/7x/admin_guide/ddl/classic-partition.md"}'),i={name:"docs/7x/admin_guide/ddl/classic-partition.md"};function p(o,a,l,c,r,d){return n(),t("div",null,a[0]||(a[0]=[s(`<h1 id="examples-using-the-classic-partitioning-syntax" tabindex="-1">Examples Using the Classic Partitioning Syntax <a class="header-anchor" href="#examples-using-the-classic-partitioning-syntax" aria-label="Permalink to &quot;Examples Using the Classic Partitioning Syntax&quot;">​</a></h1><hr><p>The classic partitioning syntax reflects the partitioning syntax of prior versions of WarehousePG. It is most appropriate for a homogenous partitioned table, where all partitions are at the same leaf level and have the same partition rule.</p><p>If you are already familiar with the <em>classic</em> partitioning syntax, refer to <a href="./about-part-changes.html">About Changes to Table Partitioning in WarehousePG 7</a> for information about syntax and behavior changes introduced in version 7.</p><h2 id="creating-partitioned-tables-with-the-classic-syntax" tabindex="-1"><a id="classic"></a>Creating Partitioned Tables with the Classic Syntax <a class="header-anchor" href="#creating-partitioned-tables-with-the-classic-syntax" aria-label="Permalink to &quot;&lt;a id=&quot;classic&quot;&gt;&lt;/a&gt;Creating Partitioned Tables with the Classic Syntax&quot;">​</a></h2><p>This section includes several examples that use the classic syntax for creating a partitioned table.</p><h3 id="creating-a-date-range-partitioned-table" tabindex="-1"><a id="topic67c"></a>Creating a Date-Range Partitioned Table <a class="header-anchor" href="#creating-a-date-range-partitioned-table" aria-label="Permalink to &quot;&lt;a id=&quot;topic67c&quot;&gt;&lt;/a&gt;Creating a Date-Range Partitioned Table&quot;">​</a></h3><p>A date-range partitioned table uses a single date type column as the partition key column.</p><p>With the classic syntax, you can instruct WarehousePG to automatically generate partitions by providing a <code>START</code> value, an <code>END</code> value, and an <code>EVERY</code> clause that defines the partition increment value. By default, <code>START</code> values are always inclusive and <code>END</code> values are always exclusive. For example, to create a daily-partitioned table named \`sales:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE TABLE sales (id int, date date, amt decimal(10,2))</span></span>
<span class="line"><span>DISTRIBUTED BY (id)</span></span>
<span class="line"><span>PARTITION BY RANGE (date)</span></span>
<span class="line"><span>( START (date &#39;2022-01-01&#39;) INCLUSIVE</span></span>
<span class="line"><span>   END (date &#39;2023-01-01&#39;) EXCLUSIVE</span></span>
<span class="line"><span>   EVERY (INTERVAL &#39;1 day&#39;) );</span></span></code></pre></div><p>You can also declare and name each partition individually. For example:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE TABLE sales (id int, date date, amt decimal(10,2))</span></span>
<span class="line"><span>DISTRIBUTED BY (id)</span></span>
<span class="line"><span>PARTITION BY RANGE (date)</span></span>
<span class="line"><span>( PARTITION Jan22 START (date &#39;2022-01-01&#39;) INCLUSIVE , </span></span>
<span class="line"><span>  PARTITION Feb22 START (date &#39;2022-02-01&#39;) INCLUSIVE ,</span></span>
<span class="line"><span>  PARTITION Mar22 START (date &#39;2022-03-01&#39;) INCLUSIVE ,</span></span>
<span class="line"><span>  PARTITION Apr22 START (date &#39;2022-04-01&#39;) INCLUSIVE ,</span></span>
<span class="line"><span>  PARTITION May22 START (date &#39;2022-05-01&#39;) INCLUSIVE ,</span></span>
<span class="line"><span>  PARTITION Jun22 START (date &#39;2022-06-01&#39;) INCLUSIVE ,</span></span>
<span class="line"><span>  PARTITION Jul22 START (date &#39;2022-07-01&#39;) INCLUSIVE ,</span></span>
<span class="line"><span>  PARTITION Aug22 START (date &#39;2022-08-01&#39;) INCLUSIVE ,</span></span>
<span class="line"><span>  PARTITION Sep22 START (date &#39;2022-09-01&#39;) INCLUSIVE ,</span></span>
<span class="line"><span>  PARTITION Oct22 START (date &#39;2022-10-01&#39;) INCLUSIVE ,</span></span>
<span class="line"><span>  PARTITION Nov22 START (date &#39;2022-11-01&#39;) INCLUSIVE ,</span></span>
<span class="line"><span>  PARTITION Dec22 START (date &#39;2022-12-01&#39;) INCLUSIVE </span></span>
<span class="line"><span>                  END (date &#39;2023-01-01&#39;) EXCLUSIVE );</span></span></code></pre></div><p>You need not declare an <code>END</code> value for each partition, only the last one. In this example, <code>Jan22</code> ends where <code>Feb22</code> starts.</p><h4 id="creating-a-numeric-range-partitioned-table" tabindex="-1"><a id="topic68c"></a>Creating a Numeric-Range Partitioned Table <a class="header-anchor" href="#creating-a-numeric-range-partitioned-table" aria-label="Permalink to &quot;&lt;a id=&quot;topic68c&quot;&gt;&lt;/a&gt;Creating a Numeric-Range Partitioned Table&quot;">​</a></h4><p>A numeric-range partitioned table uses a single numeric type column as the partition key column.</p><p>For example, create a table named <code>nrank</code> that is numeric-range partitioned on the <code>int</code> column <code>year</code>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE TABLE nrank (id int, rank int, year int, color char(1), count int)</span></span>
<span class="line"><span>DISTRIBUTED BY (id)</span></span>
<span class="line"><span>PARTITION BY RANGE (year)</span></span>
<span class="line"><span>( START (2012) END (2022) EVERY (1), </span></span>
<span class="line"><span>  DEFAULT PARTITION extra );</span></span></code></pre></div><h3 id="creating-a-list-partitioned-table" tabindex="-1"><a id="topic69c"></a>Creating a List Partitioned Table <a class="header-anchor" href="#creating-a-list-partitioned-table" aria-label="Permalink to &quot;&lt;a id=&quot;topic69c&quot;&gt;&lt;/a&gt;Creating a List Partitioned Table&quot;">​</a></h3><p>A list partitioned table can use any data type column that allows equality comparisons as its partition key column. With the classic syntax, a list partition can have a multi-column (composite) partition key. For list partitions, you must declare a partition for every list value. For example:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE TABLE rank (id int, rank int, year int, color char(1), count int ) </span></span>
<span class="line"><span>DISTRIBUTED BY (id)</span></span>
<span class="line"><span>PARTITION BY LIST (color)</span></span>
<span class="line"><span>( PARTITION red VALUES (&#39;r&#39;), </span></span>
<span class="line"><span>  PARTITION blue VALUES (&#39;b&#39;), </span></span>
<span class="line"><span>  PARTITION green VALUES (&#39;g&#39;), </span></span>
<span class="line"><span>  DEFAULT PARTITION other );</span></span></code></pre></div><blockquote><p><strong>Note</strong> While the Postgres-based planner allows list partitions with multi-column (composite) partition keys, the WarehousePG query optimizer (GPORCA) does not support this.</p></blockquote><h3 id="defining-multi-level-partitions" tabindex="-1"><a id="topic70c"></a>Defining Multi-level Partitions <a class="header-anchor" href="#defining-multi-level-partitions" aria-label="Permalink to &quot;&lt;a id=&quot;topic70c&quot;&gt;&lt;/a&gt;Defining Multi-level Partitions&quot;">​</a></h3><p>You can create a multi-level partition design with sub-partitions of partitions. Using a <em>sub-partition template</em> ensures that every partition has the same sub-partition design, including partitions that you add later. For example, the following SQL creates the two-level partition design shown in <a href="./ddl-partition.html#im207241">Example Multi-Level Partition Design</a>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE TABLE sales (trans_id int, date date, amount decimal(9,2), region text) </span></span>
<span class="line"><span>DISTRIBUTED BY (trans_id)</span></span>
<span class="line"><span>PARTITION BY RANGE (date)</span></span>
<span class="line"><span>SUBPARTITION BY LIST (region)</span></span>
<span class="line"><span>SUBPARTITION TEMPLATE</span></span>
<span class="line"><span>( SUBPARTITION usa VALUES (&#39;usa&#39;), </span></span>
<span class="line"><span>  SUBPARTITION asia VALUES (&#39;asia&#39;), </span></span>
<span class="line"><span>  SUBPARTITION europe VALUES (&#39;europe&#39;), </span></span>
<span class="line"><span>  DEFAULT SUBPARTITION other_regions)</span></span>
<span class="line"><span>  (START (date &#39;2011-01-01&#39;) INCLUSIVE</span></span>
<span class="line"><span>   END (date &#39;2012-01-01&#39;) EXCLUSIVE</span></span>
<span class="line"><span>   EVERY (INTERVAL &#39;1 month&#39;), </span></span>
<span class="line"><span>   DEFAULT PARTITION outlying_dates );</span></span></code></pre></div><p>The following example shows a three-level partition design where the <code>sales</code> table is partitioned by <code>year</code>, then <code>month</code>, then <code>region</code>. The <code>SUBPARTITION TEMPLATE</code> clauses ensure that each yearly partition has the same sub-partition structure. The example declares a <code>DEFAULT</code> partition at each level of the hierarchy.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE TABLE p3_sales (id int, year int, month int, day int, </span></span>
<span class="line"><span>region text)</span></span>
<span class="line"><span>DISTRIBUTED BY (id)</span></span>
<span class="line"><span>PARTITION BY RANGE (year)</span></span>
<span class="line"><span>    SUBPARTITION BY RANGE (month)</span></span>
<span class="line"><span>       SUBPARTITION TEMPLATE (</span></span>
<span class="line"><span>        START (1) END (13) EVERY (1), </span></span>
<span class="line"><span>        DEFAULT SUBPARTITION other_months )</span></span>
<span class="line"><span>           SUBPARTITION BY LIST (region)</span></span>
<span class="line"><span>             SUBPARTITION TEMPLATE (</span></span>
<span class="line"><span>               SUBPARTITION usa VALUES (&#39;usa&#39;),</span></span>
<span class="line"><span>               SUBPARTITION europe VALUES (&#39;europe&#39;),</span></span>
<span class="line"><span>               SUBPARTITION asia VALUES (&#39;asia&#39;),</span></span>
<span class="line"><span>               DEFAULT SUBPARTITION other_regions )</span></span>
<span class="line"><span>( START (2002) END (2012) EVERY (1), </span></span>
<span class="line"><span>  DEFAULT PARTITION outlying_years );</span></span></code></pre></div><p><strong>CAUTION:</strong> When you create multi-level partitions on ranges, it is easy to create a large number of sub-partitions, some containing little or no data. This can add many entries to the system tables, which increases the time and memory required to optimize and run queries. Increase the range interval or choose a different partitioning strategy to reduce the number of sub-partitions created.</p><h3 id="partitioning-an-existing-table" tabindex="-1"><a id="topic71c"></a>Partitioning an Existing Table <a class="header-anchor" href="#partitioning-an-existing-table" aria-label="Permalink to &quot;&lt;a id=&quot;topic71c&quot;&gt;&lt;/a&gt;Partitioning an Existing Table&quot;">​</a></h3><p>With classic syntax, tables can be partitioned only at creation. If you have a table that you want to partition, you must create a partitioned table, load the data from the original table into the new table, drop the original table, and rename the partitioned table with the original table&#39;s name. You must also re-grant any table permissions. For example:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE TABLE sales2 (LIKE sales) </span></span>
<span class="line"><span>PARTITION BY RANGE (date)</span></span>
<span class="line"><span>( START (date 2016-01-01&#39;) INCLUSIVE</span></span>
<span class="line"><span>   END (date &#39;2017-01-01&#39;) EXCLUSIVE</span></span>
<span class="line"><span>   EVERY (INTERVAL &#39;1 month&#39;) );</span></span>
<span class="line"><span>INSERT INTO sales2 SELECT * FROM sales;</span></span>
<span class="line"><span>DROP TABLE sales;</span></span>
<span class="line"><span>ALTER TABLE sales2 RENAME TO sales;</span></span>
<span class="line"><span>GRANT ALL PRIVILEGES ON sales TO admin;</span></span>
<span class="line"><span>GRANT SELECT ON sales TO guest;</span></span></code></pre></div><blockquote><p><strong>Note</strong> The <code>LIKE</code> clause does not copy over partition structures when creating a new table.</p></blockquote><h2 id="partition-maintenance-with-the-classic-syntax" tabindex="-1"><a id="topic77c"></a>Partition Maintenance with the Classic Syntax <a class="header-anchor" href="#partition-maintenance-with-the-classic-syntax" aria-label="Permalink to &quot;&lt;a id=&quot;topic77c&quot;&gt;&lt;/a&gt;Partition Maintenance with the Classic Syntax&quot;">​</a></h2><p>To maintain a partitioned table that you created with the classic syntax, use the <code>ALTER TABLE</code> command against the top-level root partitioned table. The most common scenario is to drop old partitions and add new ones to maintain a rolling window of data in a range partition design. You can convert (<em>exchange</em>) older partitions to the append-optimized compressed storage format to save space. If you have a default partition in your partition design, you add a partition by <em>splitting</em> the default partition.</p><ul><li><a href="#topic78c">Adding a Partition</a></li><li><a href="#topic79c">Renaming a Partition</a></li><li><a href="#topic80c">Adding a Default Partition</a></li><li><a href="#topic81c">Dropping a Partition</a></li><li><a href="#topic82c">Truncating a Partition</a></li><li><a href="#topic83c">Exchanging a Partition</a></li><li><a href="#topic84c">Splitting a Partition</a></li><li><a href="#topic85c">Modifying a Sub-Partition Template</a></li><li><a href="#topic_yhz_gpn_qs">Exchanging a Leaf Partition with an External Table</a></li></ul><blockquote><p><strong>Important</strong> When defining and altering partition designs, use the given partition name, not the table object name. The given partition name is the <code>relid</code> column returned by the <code>pg_partition_tree()</code> function. Although you can query and load any table (including partitioned tables) directly using SQL commands, you can only modify the structure of a partitioned table that you create with classic partitioning syntax using the <code>ALTER TABLE ... PARTITION</code> clauses.</p></blockquote><p>Partitions are not required to have names. If a partition does not have a name, use the following expression to identify a partition: <code>PARTITION FOR (value)</code>.</p><p>For a multi-level partitioned table, you identify a specific partition to change with <code>ALTER PARTITION</code> clauses. For each partition level in the table hierarchy that is above the target partition, specify the partition that is related to the target partition in an <code>ALTER PARTITION</code> clause. For example, if you have a partitioned table that consists of three levels, year, quarter, and region, this <code>ALTER TABLE</code> command exchanges a leaf partition <code>region</code> with the table <code>region_new</code>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER TABLE sales ALTER PARTITION year_1 ALTER PARTITION quarter_4 EXCHANGE PARTITION region WITH TABLE region_new ;</span></span></code></pre></div><p>The two <code>ALTER PARTITION</code> clauses identify which <code>region</code> partition to exchange. Both clauses are required to identify the specific leaf partition to exchange.</p><h3 id="adding-a-partition" tabindex="-1"><a id="topic78c"></a>Adding a Partition <a class="header-anchor" href="#adding-a-partition" aria-label="Permalink to &quot;&lt;a id=&quot;topic78c&quot;&gt;&lt;/a&gt;Adding a Partition&quot;">​</a></h3><p>You can add a partition to a partition design with the <code>ALTER TABLE</code> command. If the original partition design included sub-partitions defined by a <em>sub-partition template</em>, the newly added partition is sub-partitioned according to that template. For example:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER TABLE sales ADD PARTITION</span></span>
<span class="line"><span>            START (date &#39;2017-02-01&#39;) INCLUSIVE</span></span>
<span class="line"><span>            END (date &#39;2017-03-01&#39;) EXCLUSIVE;</span></span></code></pre></div><p>If you did not use a sub-partition template when you created the table, you define sub-partitions when adding a partition:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER TABLE sales ADD PARTITION</span></span>
<span class="line"><span>            START (date &#39;2017-02-01&#39;) INCLUSIVE</span></span>
<span class="line"><span>            END (date &#39;2017-03-01&#39;) EXCLUSIVE</span></span>
<span class="line"><span>      ( SUBPARTITION usa VALUES (&#39;usa&#39;), </span></span>
<span class="line"><span>        SUBPARTITION asia VALUES (&#39;asia&#39;), </span></span>
<span class="line"><span>        SUBPARTITION europe VALUES (&#39;europe&#39;) );</span></span></code></pre></div><p>When you add a sub-partition to an existing partition, you can specify the partition to alter. For example:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER TABLE sales ALTER PARTITION FOR (&#39;2017-02-07&#39;::date)</span></span>
<span class="line"><span>      ADD PARTITION africa VALUES (&#39;africa&#39;);</span></span></code></pre></div><blockquote><p><strong>Note</strong> You cannot add a partition to a partition design that has a default partition. You must split the default partition to add a partition. See <a href="#topic84">Splitting a Partition</a>.</p></blockquote><h3 id="renaming-a-partition" tabindex="-1"><a id="topic79c"></a>Renaming a Partition <a class="header-anchor" href="#renaming-a-partition" aria-label="Permalink to &quot;&lt;a id=&quot;topic79c&quot;&gt;&lt;/a&gt;Renaming a Partition&quot;">​</a></h3><p>Sub-partition tables created with the classic syntax use the following naming convention. Partitioned subtable names are subject to uniqueness requirements and length limitations.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;parentname&gt;_&lt;level&gt;_prt_&lt;partition_name&gt;</span></span></code></pre></div><p>For example:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sales_1_prt_jan16</span></span></code></pre></div><p>For auto-generated range partitions, where a number is assigned when no name is given:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sales_1_prt_1</span></span></code></pre></div><p>To rename a partitioned child table, rename the top-level parent table. The <code>&lt;parentname&gt;</code> changes in the table names of all associated child tables. For example, the following command:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER TABLE sales RENAME TO globalsales;</span></span></code></pre></div><p>Changes the associated table names:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>globalsales_1_prt_1</span></span></code></pre></div><p>You can change the name of a partition to make it easier to identify. For example:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER TABLE sales RENAME PARTITION FOR (&#39;2016-01-01&#39;) TO jan16;</span></span></code></pre></div><p>Changes the associated table name as follows:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sales_1_prt_jan16</span></span></code></pre></div><p>When altering partitioned tables with the <code>ALTER TABLE</code> command, always refer to the tables by their partition name (<code>jan16</code>) and not their full table name (<code>sales_1_prt_jan16</code>).</p><blockquote><p><strong>Note</strong> The table name cannot be a partition name in an <code>ALTER TABLE</code> statement. For example, <code>ALTER TABLE sales...</code> is correct, <code>ALTER TABLE sales_1_part_jan16...</code> is not allowed.</p></blockquote><h3 id="adding-a-default-partition" tabindex="-1"><a id="topic80c"></a>Adding a Default Partition <a class="header-anchor" href="#adding-a-default-partition" aria-label="Permalink to &quot;&lt;a id=&quot;topic80c&quot;&gt;&lt;/a&gt;Adding a Default Partition&quot;">​</a></h3><p>You can add a default partition to a partition design with the <code>ALTER TABLE</code> command.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER TABLE sales ADD DEFAULT PARTITION other;</span></span></code></pre></div><p>If your partition design is multi-level, each level in the hierarchy must have a default partition. For example:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER TABLE sales ALTER PARTITION FOR (&#39;2017-03-01&#39;::date) ADD DEFAULT PARTITION other;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ALTER TABLE sales ALTER PARTITION FOR (&#39;2017-05-01&#39;::date) ADD DEFAULT PARTITION other;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ALTER TABLE sales ALTER PARTITION FOR (2017-07-01::date) ADD DEFAULT PARTITION other;</span></span></code></pre></div><p>If incoming data does not match a partition&#39;s constraint and there is no default partition, the data is rejected. Default partitions ensure that incoming data that does not match a partition is inserted into the default partition.</p><h3 id="dropping-a-partition" tabindex="-1"><a id="topic81c"></a>Dropping a Partition <a class="header-anchor" href="#dropping-a-partition" aria-label="Permalink to &quot;&lt;a id=&quot;topic81c&quot;&gt;&lt;/a&gt;Dropping a Partition&quot;">​</a></h3><p>You can drop a partition from your partition design using the <code>ALTER TABLE</code> command. When you drop a partition that has sub-partitions, the sub-partitions (and all data in them) are automatically dropped as well. For range partitions, it is common to drop the older partitions from the range as old data is rolled out of the data warehouse. For example:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER TABLE sales DROP PARTITION FOR (&#39;2017-03-01&#39;::date);</span></span></code></pre></div><h3 id="truncating-a-partition" tabindex="-1"><a id="topic82c"></a>Truncating a Partition <a class="header-anchor" href="#truncating-a-partition" aria-label="Permalink to &quot;&lt;a id=&quot;topic82c&quot;&gt;&lt;/a&gt;Truncating a Partition&quot;">​</a></h3><p>You can truncate a partition using the <code>ALTER TABLE</code> command. When you truncate a partition that has sub-partitions, the sub-partitions are automatically truncated as well.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER TABLE sales TRUNCATE PARTITION FOR (&#39;2017-02-01&#39;::date);</span></span></code></pre></div><h3 id="exchanging-a-partition" tabindex="-1"><a id="topic83c"></a>Exchanging a Partition <a class="header-anchor" href="#exchanging-a-partition" aria-label="Permalink to &quot;&lt;a id=&quot;topic83c&quot;&gt;&lt;/a&gt;Exchanging a Partition&quot;">​</a></h3><p>You can exchange a partition using the <code>ALTER TABLE</code> command. Exchanging a partition swaps one table in place of an existing partition. You can exchange partitions only at the lowest level of your partition hierarchy (only partitions that contain data can be exchanged).</p><p>Internally, WarehousePG converts an <code>ALTER TABLE ... EXCHANGE PARTITION</code> command into modern syntax <code>DETACH PARTITION</code> and <code>ATTACH PARTITION</code> commands (with some name swapping).</p><p>You cannot exchange a partition with a replicated table. Exchanging a partition with a partitioned table or a child partition of a partitioned table is not supported.</p><blockquote><p><strong>Note</strong> WarehousePG always validates the data against the partition constraint. You must ensure that the data in the table that you are attaching is valid against the constraints on the partition.</p></blockquote><h3 id="splitting-a-partition" tabindex="-1"><a id="topic84c"></a>Splitting a Partition <a class="header-anchor" href="#splitting-a-partition" aria-label="Permalink to &quot;&lt;a id=&quot;topic84c&quot;&gt;&lt;/a&gt;Splitting a Partition&quot;">​</a></h3><p>Splitting a partition divides a partition into two partitions. You can split a partition using the <code>ALTER TABLE</code> command. You can split partitions only at the lowest level of your partition hierarchy (partitions that contain data). For a multi-level partition, only range partitions can be split, not list partitions. The split value you specify goes into the <em>latter</em> partition.</p><p>For example, to split a monthly partition into two with the first partition containing dates January 1-15 and the second partition containing dates January 16-31:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER TABLE sales SPLIT PARTITION FOR (&#39;2017-01-01&#39;)</span></span>
<span class="line"><span>AT (&#39;2017-01-16&#39;)</span></span>
<span class="line"><span>INTO (PARTITION jan171to15, PARTITION jan1716to31);</span></span></code></pre></div><p>If your partition design has a default partition, you must split the default partition to add a partition.</p><p>When using the <code>INTO</code> clause, specify the current default partition as the second partition name. For example, to split a default range partition to add a new monthly partition for January 2017:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER TABLE sales SPLIT DEFAULT PARTITION</span></span>
<span class="line"><span>START (&#39;2017-01-01&#39;) INCLUSIVE</span></span>
<span class="line"><span>END (&#39;2017-02-01&#39;) EXCLUSIVE</span></span>
<span class="line"><span>INTO (PARTITION jan17, default partition);</span></span></code></pre></div><h3 id="modifying-a-sub-partition-template" tabindex="-1"><a id="topic85c"></a>Modifying a Sub-Partition Template <a class="header-anchor" href="#modifying-a-sub-partition-template" aria-label="Permalink to &quot;&lt;a id=&quot;topic85c&quot;&gt;&lt;/a&gt;Modifying a Sub-Partition Template&quot;">​</a></h3><p>Use <code>ALTER TABLE ... SET SUBPARTITION TEMPLATE</code> to modify the sub-partition template of a partitioned table. Partitions added after you set a new sub-partition template have the new partition design. Existing partitions are not modified.</p><p>The following example alters the sub-partition template of this partitioned table:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE TABLE sales (trans_id int, date date, amount decimal(9,2), region text)</span></span>
<span class="line"><span>  DISTRIBUTED BY (trans_id)</span></span>
<span class="line"><span>  PARTITION BY RANGE (date)</span></span>
<span class="line"><span>  SUBPARTITION BY LIST (region)</span></span>
<span class="line"><span>  SUBPARTITION TEMPLATE</span></span>
<span class="line"><span>    ( SUBPARTITION usa VALUES (&#39;usa&#39;),</span></span>
<span class="line"><span>      SUBPARTITION asia VALUES (&#39;asia&#39;),</span></span>
<span class="line"><span>      SUBPARTITION europe VALUES (&#39;europe&#39;),</span></span>
<span class="line"><span>      DEFAULT SUBPARTITION other_regions )</span></span>
<span class="line"><span>  ( START (date &#39;2014-01-01&#39;) INCLUSIVE</span></span>
<span class="line"><span>    END (date &#39;2014-04-01&#39;) EXCLUSIVE</span></span>
<span class="line"><span>    EVERY (INTERVAL &#39;1 month&#39;) );</span></span></code></pre></div><p>This <code>ALTER TABLE</code> command, modifies the sub-partition template.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER TABLE sales SET SUBPARTITION TEMPLATE</span></span>
<span class="line"><span>( SUBPARTITION usa VALUES (&#39;usa&#39;),</span></span>
<span class="line"><span>  SUBPARTITION asia VALUES (&#39;asia&#39;),</span></span>
<span class="line"><span>  SUBPARTITION europe VALUES (&#39;europe&#39;),</span></span>
<span class="line"><span>  SUBPARTITION africa VALUES (&#39;africa&#39;), </span></span>
<span class="line"><span>  DEFAULT SUBPARTITION regions );</span></span></code></pre></div><p>When you add a date-range partition of the table sales, it includes the new regional list sub-partition for Africa. For example, the following command creates the sub-partitions <code>usa</code>, <code>asia</code>, <code>europe</code>, <code>africa</code>, and a default partition named <code>other</code>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER TABLE sales ADD PARTITION &quot;4&quot;</span></span>
<span class="line"><span>  START (&#39;2014-04-01&#39;) INCLUSIVE</span></span>
<span class="line"><span>  END (&#39;2014-05-01&#39;) EXCLUSIVE;</span></span></code></pre></div><p>To view the tables created for the partitioned table <code>sales</code>, you can use the command <code>\\dt sales*</code> from the psql command line.</p><p>To remove a sub-partition template, use <code>SET SUBPARTITION TEMPLATE</code> with empty parentheses. For example, to clear the sales table sub-partition template:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER TABLE sales SET SUBPARTITION TEMPLATE ();</span></span></code></pre></div><h3 id="exchanging-a-leaf-partition-with-an-external-table" tabindex="-1"><a id="topic_yhz_gpn_qs"></a>Exchanging a Leaf Partition with an External Table <a class="header-anchor" href="#exchanging-a-leaf-partition-with-an-external-table" aria-label="Permalink to &quot;&lt;a id=&quot;topic_yhz_gpn_qs&quot;&gt;&lt;/a&gt;Exchanging a Leaf Partition with an External Table&quot;">​</a></h3><p>You can exchange a leaf partition of a partitioned table with a readable external table. The external table data can reside on a host file system, an NFS mount, or a Hadoop file system (HDFS).</p><p>For example, if you have a partitioned table that is created with monthly partitions and most of the queries against the table only access the newer data, you can copy the older, less accessed data to external tables and exchange older partitions with the external tables. For queries that only access the newer data, you could create queries that use partition elimination to prevent scanning the older, unneeded partitions.</p><p>Exchanging a leaf partition with an external table is not supported if the partitioned table contains a column with a check constraint or a <code>NOT NULL</code> constraint.</p><p>For information about exchanging and altering a leaf partition, see the <a href="./../../ref_guide/sql_commands/ALTER_TABLE.html">ALTER TABLE</a> command reference.</p><p>For information about limitations of partitioned tables that contain a external table partition, see <a href="#topic72">Limitations of Partitioned Tables</a>.</p><h4 id="example-exchanging-a-partition-with-an-external-table" tabindex="-1"><a id="topic_y3y_1xd_bt"></a>Example Exchanging a Partition with an External Table <a class="header-anchor" href="#example-exchanging-a-partition-with-an-external-table" aria-label="Permalink to &quot;&lt;a id=&quot;topic_y3y_1xd_bt&quot;&gt;&lt;/a&gt;Example Exchanging a Partition with an External Table&quot;">​</a></h4><p>This is a simple example that exchanges a leaf partition of this partitioned table for an external table. The partitioned table contains data for the years 2010 through 2013.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE TABLE sales (id int, year int, qtr int, day int, region text)</span></span>
<span class="line"><span>  DISTRIBUTED BY (id)</span></span>
<span class="line"><span>  PARTITION BY RANGE (year)</span></span>
<span class="line"><span>  ( PARTITION yr START (2010) END (2014) EVERY (1) ) ;</span></span></code></pre></div><p>There are four leaf partitions for the partitioned table. Each leaf partition contains the data for a single year. The leaf partition <code>sales_1_prt_yr_1</code> contains the data for the year 2010. These steps exchange the table <code>sales_1_prt_yr_1</code> with an external table the uses the <code>gpfdist</code> protocol:</p><ol><li><p>Ensure that the external table protocol is enabled for the WarehousePG cluster.</p><p>This example uses the <code>gpfdist</code> protocol. This command starts the <code>gpfdist</code> protocol.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ gpfdist</span></span></code></pre></div></li><li><p>Create a writable external table.</p><p>This <code>CREATE WRITABLE EXTERNAL TABLE</code> command creates a writable external table with the same columns as the partitioned table.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE WRITABLE EXTERNAL TABLE my_sales_ext ( LIKE sales_1_prt_yr_1 )</span></span>
<span class="line"><span>  LOCATION ( &#39;gpfdist://gpdb_test/sales_2010&#39; )</span></span>
<span class="line"><span>  FORMAT &#39;csv&#39;</span></span>
<span class="line"><span>  DISTRIBUTED BY (id) ;</span></span></code></pre></div></li><li><p>Create a readable external table that reads the data from that destination of the writable external table created in the previous step.</p><p>This <code>CREATE EXTERNAL TABLE</code> create a readable external that uses the same external data as the writable external data.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE EXTERNAL TABLE sales_2010_ext (LIKE sales_1_prt_yr_1)</span></span>
<span class="line"><span>  LOCATION ( &#39;gpfdist://gpdb_test/sales_2010&#39; )</span></span>
<span class="line"><span>  FORMAT &#39;csv&#39; ;</span></span></code></pre></div></li><li><p>Copy the data from the leaf partition into the writable external table.</p><p>This <code>INSERT</code> command copies the data from the leaf partition into the external table.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>INSERT INTO my_sales_ext SELECT * FROM sales_1_prt_yr_1;</span></span></code></pre></div></li><li><p>Exchange the existing leaf partition with the external table.</p><p>This <code>ALTER TABLE</code> command specifies the <code>EXCHANGE PARTITION</code> clause to switch the readable external table and the leaf partition.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER TABLE sales ALTER PARTITION yr_1</span></span>
<span class="line"><span>   EXCHANGE PARTITION yr_1</span></span>
<span class="line"><span>   WITH TABLE sales_2010_ext WITHOUT VALIDATION;</span></span></code></pre></div><p>The external table becomes the leaf partition with the table name <code>sales_1_prt_yr_1</code> and the old leaf partition becomes the table <code>sales_2010_ext</code>.</p><blockquote><p><strong>Caution</strong> In order to ensure queries against the partitioned table return the correct results, the external table data must be valid against the constraints on the leaf partition.</p></blockquote></li><li><p>Drop the table that was rolled out of the partitioned table.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>DROP TABLE sales_2010_ext ;</span></span></code></pre></div></li></ol><p>You can rename the name of the leaf partition to indicate that <code>sales_1_prt_yr_1</code> is an external table.</p><p>This example command changes the <code>partitionname</code> to <code>yr_1_ext</code> and the name of the leaf partition to <code>sales_1_prt_yr_1_ext</code>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER TABLE sales RENAME PARTITION yr_1 TO  yr_1_ext ;</span></span></code></pre></div>`,113)]))}const g=e(i,[["render",p]]);export{u as __pageData,g as default};
