import{_ as e,c as d,o,ag as r}from"./chunks/framework.Ds6Eueu6.js";const u=JSON.parse('{"title":"pg_roles","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/ref_guide/system_catalogs/pg_roles.md","filePath":"docs/7x/ref_guide/system_catalogs/pg_roles.md"}'),a={name:"docs/7x/ref_guide/system_catalogs/pg_roles.md"};function s(l,t,i,c,n,p){return o(),d("div",null,t[0]||(t[0]=[r('<h1 id="pg-roles" tabindex="-1">pg_roles <a class="header-anchor" href="#pg-roles" aria-label="Permalink to &quot;pg_roles&quot;">â€‹</a></h1><p>The view <code>pg_roles</code> provides access to information about database roles. This is simply a publicly readable view of <a href="./pg_authid.html">pg_authid</a> that blanks out the password field. This view explicitly exposes the OID column of the underlying table, since that is needed to do joins to other catalogs.</p><table tabindex="0"><thead><tr><th>column</th><th>type</th><th>references</th><th>description</th></tr></thead><tbody><tr><td><code>rolname</code></td><td>name</td><td></td><td>Role name</td></tr><tr><td><code>rolsuper</code></td><td>bool</td><td></td><td>Role has superuser privileges</td></tr><tr><td><code>rolinherit</code></td><td>bool</td><td></td><td>Role automatically inherits privileges of roles it is a member of</td></tr><tr><td><code>rolcreaterole</code></td><td>bool</td><td></td><td>Role may create more roles</td></tr><tr><td><code>rolcreatedb</code></td><td>bool</td><td></td><td>Role may create databases</td></tr><tr><td><code>rolcatupdate</code></td><td>bool</td><td></td><td>Role may update system catalogs directly. (Even a superuser may not do this unless this column is true.)</td></tr><tr><td><code>rolcanlogin</code></td><td>bool</td><td></td><td>Role may log in. That is, this role can be given as the initial session authorization identifier</td></tr><tr><td><code>rolconnlimit</code></td><td>int4</td><td></td><td>For roles that can log in, this sets maximum number of concurrent connections this role can make. -1 means no limit</td></tr><tr><td><code>rolpassword</code></td><td>text</td><td></td><td>Not the password (always reads as ********)</td></tr><tr><td><code>rolvaliduntil</code></td><td>timestamptz</td><td></td><td>Password expiry time (only used for password authentication); NULL if no expiration</td></tr><tr><td><code>rolconfig</code></td><td>text[]</td><td></td><td>Role-specific defaults for run-time configuration variables</td></tr><tr><td><code>rolresqueue</code></td><td>oid</td><td>pg_resqueue.oid</td><td>Object ID of the resource queue this role is assigned to.</td></tr><tr><td><code>oid</code></td><td>oid</td><td>pg_authid.oid</td><td>Object ID of role</td></tr><tr><td><code>rolcreaterextgpfd</code></td><td>bool</td><td></td><td>Role may create readable external tables that use the gpfdist protocol.</td></tr><tr><td><code>rolcreaterexthttp</code></td><td>bool</td><td></td><td>Role may create readable external tables that use the http protocol.</td></tr><tr><td><code>rolcreatewextgpfd</code></td><td>bool</td><td></td><td>Role may create writable external tables that use the gpfdist protocol.</td></tr><tr><td><code>rolresgroup</code></td><td>oid</td><td>pg_resgroup.oid</td><td>Object ID of the resource group to which this role is assigned.</td></tr></tbody></table><p><strong>Parent topic:</strong> <a href="./../system_catalogs/catalog_ref-html.html">System Catalogs Definitions</a></p>',4)]))}const m=e(a,[["render",s]]);export{u as __pageData,m as default};
