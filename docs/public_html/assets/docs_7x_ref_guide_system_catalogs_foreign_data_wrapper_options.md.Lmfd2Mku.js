import{_ as e,c as a,o,ag as r}from"./chunks/framework.Ds6Eueu6.js";const h=JSON.parse('{"title":"foreign_data_wrapper_options","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/ref_guide/system_catalogs/foreign_data_wrapper_options.md","filePath":"docs/7x/ref_guide/system_catalogs/foreign_data_wrapper_options.md"}'),d={name:"docs/7x/ref_guide/system_catalogs/foreign_data_wrapper_options.md"};function i(n,t,s,p,_,c){return o(),a("div",null,t[0]||(t[0]=[r('<h1 id="foreign-data-wrapper-options" tabindex="-1">foreign_data_wrapper_options <a class="header-anchor" href="#foreign-data-wrapper-options" aria-label="Permalink to &quot;foreign_data_wrapper_options&quot;">â€‹</a></h1><p>The <code>foreign_data_wrapper_options</code> view contains all of the otpions defined for foreign-data wrappers in the current database. WarehousePG displays only those foreign-data wrappers to which the current user has access (by way of being the owner or having some privilege).</p><table tabindex="0"><thead><tr><th>column</th><th>type</th><th>references</th><th>description</th></tr></thead><tbody><tr><td><code>foreign_data_wrapper_catalog</code></td><td>sql_identifier</td><td></td><td>Name of the database in which the foreign-data wrapper is defined (always the current database).</td></tr><tr><td><code>foreign_data_wrapper_name</code></td><td>sql_identifier</td><td></td><td>Name of the foreign-data wrapper.</td></tr><tr><td><code>option_name</code></td><td>sql_identifier</td><td></td><td>Name of an option.</td></tr><tr><td><code>option_value</code></td><td>character_data</td><td></td><td>Value of the option.</td></tr></tbody></table><p><strong>Parent topic:</strong> <a href="./../system_catalogs/catalog_ref-html.html">System Catalogs Definitions</a></p>',4)]))}const l=e(d,[["render",i]]);export{h as __pageData,l as default};
