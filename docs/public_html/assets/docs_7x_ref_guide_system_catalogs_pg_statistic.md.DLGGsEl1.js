import{_ as e,c as a,o,ag as s}from"./chunks/framework.Ds6Eueu6.js";const p=JSON.parse('{"title":"pg_statistic","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/ref_guide/system_catalogs/pg_statistic.md","filePath":"docs/7x/ref_guide/system_catalogs/pg_statistic.md"}'),d={name:"docs/7x/ref_guide/system_catalogs/pg_statistic.md"};function i(r,t,n,c,l,h){return o(),a("div",null,t[0]||(t[0]=[s('<h1 id="pg-statistic" tabindex="-1">pg_statistic <a class="header-anchor" href="#pg-statistic" aria-label="Permalink to &quot;pg_statistic&quot;">â€‹</a></h1><p>The <code>pg_statistic</code> system catalog table stores statistical data about the contents of the database. Entries are created by <a href="./../sql_commands/ANALYZE.html">ANALYZE</a> and subsequently used by the query planner. Note that all the statistical data is inherently approximate, even assuming that it is up-to-date.</p><p>Normally, there is one entry, with <code>stainherit = false</code>, for each table column that has been analyzed. If the table has inheritance children, WarehousePG creates a second entry with <code>stainherit = true</code>. This row represents the column&#39;s statistics over the inheritance tree, for example, statistics for the data you would see with <code>SELECT column FROM table*</code>, whereas the <code>stainherit = false</code> row represents the results of <code>SELECT column FROM ONLY table</code>.</p><p><code>pg_statistic</code> also stores statistical data about the values of index expressions. These are described as if they were actual data columns; in particular, <code>starelid</code> references the index. No entry is made for an ordinary non-expression index column, however, since it would be redundant with the entry for the underlying table column. Currently, entries for index expressions always have <code>stainherit = false</code>.</p><p>Since different kinds of statistics may be appropriate for different kinds of data, <code>pg_statistic</code> is designed not to assume very much about what sort of statistics it stores. Only extremely general statistics (such as nullness) are given dedicated columns in <code>pg_statistic</code>. Everything else is stored in slots, which are groups of associated columns whose content is identified by a code number in one of the slot&#39;s columns.</p><p><code>pg_statistic</code> should not be readable by the public, since even statistical information about a table&#39;s contents should be considered sensitive. (Example: minimum and maximum values of a salary column). <a href="./catalog_ref-views.html#pg_stats">pg_stats</a> is a publicly readable view on <code>pg_statistic</code> that only exposes information about those tables that are readable by the current user.</p><blockquote><p><strong>Caution</strong> Diagnostic tools such as <code>gpsd</code> and <code>minirepro</code> collect sensitive information from <code>pg_statistic</code>, such as histogram boundaries, in a clear, readable form. Always review the output files of these utilities to ensure that the contents are acceptable for transport outside of the database in your organization.</p></blockquote><table tabindex="0"><thead><tr><th>column</th><th>type</th><th>references</th><th>description</th></tr></thead><tbody><tr><td><code>starelid</code></td><td>oid</td><td><a href="./pg_class.html">pg_class</a>.oid</td><td>The table or index that the described column belongs to</td></tr><tr><td><code>staattnum</code></td><td>smallint</td><td><a href="./pg_attribute.html">pg_attribute</a>.attnum</td><td>The number of the described column</td></tr><tr><td><code>stainherit</code></td><td>boolean</td><td></td><td>If true, the statistics include inheritance child columns, not just the values in the specified relations.</td></tr><tr><td><code>stanullfrac</code></td><td>float4</td><td></td><td>The fraction of the column&#39;s entries that are null</td></tr><tr><td><code>stawidth</code></td><td>integer</td><td></td><td>The average stored width, in bytes, of nonnull entries</td></tr><tr><td><code>stadistinct</code></td><td>float4</td><td></td><td>The number of distinct nonnull data values in the column. A value greater than zero is the actual number of distinct values. A value less than zero is the negative of a multiplier for the number rows in the table (for example, a column in which about 80% of the values are nonnull and each nonnull value appears about twice on the average could be represented by <code>stadistinct</code> = -0.4). A zero value means the number of distinct values is unknown.</td></tr><tr><td><code>stakind*N*</code></td><td>integer</td><td></td><td>A code number indicating the kind of statistics stored in the <code>N</code>th slot of the <code>pg_statistic</code> row</td></tr><tr><td><code>staop*N*</code></td><td>oid</td><td><a href="./pg_operator.html">pg_operator</a>.oid</td><td>An operator used to derive the statistics stored in the <code>N</code>th slot. For example, a histogram slot would show the <code>&lt;</code> operator that defines the sort order of the data.</td></tr><tr><td><code>stacoll*N*</code></td><td>oid</td><td>pg_collation.oid</td><td>The collation used to derive the statistics stored in the <code>N</code>th slot. For example, a histogram slot for a collatable column would show the collation that defines the sort order of the data. Zero for noncollatable data.</td></tr><tr><td><code>stanumbers*N*</code></td><td>float4[]</td><td></td><td>Numerical statistics of the appropriate kind for the <code>N</code>th slot, or NULL if the slot kind does not involve numerical values.</td></tr><tr><td><code>stavalues*N*</code></td><td>anyarray</td><td></td><td>Column data values of the appropriate kind for the <code>N</code>th slot, or NULL if the slot kind does not store any data values. Each array&#39;s element values are actually of the specific column&#39;s data type, or a related type such as an array&#39;s element type, so there is no way to define these columns&#39; type more specifically than <code>anyarray</code>.</td></tr></tbody></table><p><strong>Parent topic:</strong> <a href="./../system_catalogs/catalog_ref-html.html">System Catalogs Definitions</a></p>',9)]))}const f=e(d,[["render",i]]);export{p as __pageData,f as default};
