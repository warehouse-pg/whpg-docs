import{_ as a,c as s,o as n,ag as t}from"./chunks/framework.Ds6Eueu6.js";const u=JSON.parse('{"title":"Using Kerberos Authentication","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/admin_guide/kerberos.md","filePath":"docs/7x/admin_guide/kerberos.md"}'),i={name:"docs/7x/admin_guide/kerberos.md"};function o(r,e,p,l,c,d){return n(),s("div",null,e[0]||(e[0]=[t(`<h1 id="using-kerberos-authentication" tabindex="-1">Using Kerberos Authentication <a class="header-anchor" href="#using-kerberos-authentication" aria-label="Permalink to &quot;Using Kerberos Authentication&quot;">​</a></h1><hr><p>You can control access to WarehousePG with a Kerberos authentication server.</p><p>WarehousePG supports the Generic Security Service Application Program Interface (GSSAPI) with Kerberos authentication. GSSAPI provides automatic authentication (single sign-on) for systems that support it. You specify the WarehousePG users (roles) that require Kerberos authentication in the WarehousePG configuration file pg_hba.conf. The login fails if Kerberos authentication is not available when a role attempts to log in to WarehousePG.</p><p>Kerberos provides a secure, encrypted authentication service. It does not encrypt data exchanged between the client and database and provides no authorization services. To encrypt data exchanged over the network, you must use an SSL connection. To manage authorization for access to WarehousePGs and objects such as schemas and tables, you use settings in the pg_hba.conf file and privileges given to WarehousePG users and roles within the database. For information about managing authorization privileges, see <a href="./roles_privs.html">Managing Roles and Privileges</a>.</p><p>For more information about Kerberos, see <a href="http://web.mit.edu/kerberos/" target="_blank" rel="noreferrer">http://web.mit.edu/kerberos/</a>.</p><h2 id="prerequisites" tabindex="-1"><a id="kerberos_prereq"></a>Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;&lt;a id=&quot;kerberos_prereq&quot;&gt;&lt;/a&gt;Prerequisites&quot;">​</a></h2><p>Before configuring Kerberos authentication for WarehousePG, ensure that:</p><ul><li>You can identify the KDC server you use for Kerberos authentication and the Kerberos realm for your WarehousePG cluster. If you have not yet configured your MIT Kerberos KDC server, see <a href="#task_setup_kdc">Installing and Configuring a Kerberos KDC Server</a> for example instructions.</li><li>System time on the Kerberos Key Distribution Center (KDC) server and WarehousePG coordinator is synchronized. (For example, install the <code>ntp</code> package on both servers.)</li><li>Network connectivity exists between the KDC server and the WarehousePG coordinator host.</li><li>Java 1.7.0_17 or later is installed on all WarehousePG hosts. Java 1.7.0_17 is required to use Kerberos-authenticated JDBC on Red Hat Enterprise Linux 6.x or 7.x.</li></ul><h2 id="procedure" tabindex="-1"><a id="nr166539"></a>Procedure <a class="header-anchor" href="#procedure" aria-label="Permalink to &quot;&lt;a id=&quot;nr166539&quot;&gt;&lt;/a&gt;Procedure&quot;">​</a></h2><p>Following are the tasks to complete to set up Kerberos authentication for WarehousePG.</p><ul><li><a href="#task_m43_vwl_2p">Creating WarehousePG Principals in the KDC Database</a></li><li><a href="#topic6">Installing the Kerberos Client on the Coordinator Host</a></li><li><a href="#topic7">Configuring WarehousePG to use Kerberos Authentication</a></li><li><a href="#topic_kmr_gws_d2b">Mapping Kerberos Principals to WarehousePG Roles</a></li><li><a href="#topic9">Configuring JDBC Kerberos Authentication for WarehousePG</a></li><li><a href="./kerberos-lin-client.html">Configuring Kerberos for Linux Clients</a></li><li><a href="./kerberos-win-client.html">Configuring Kerberos For Windows Clients</a></li></ul><p><strong>Parent topic:</strong> <a href="./client_auth.html">Configuring Client Authentication</a></p><h2 id="creating-warehousepg-principals-in-the-kdc-database" tabindex="-1"><a id="task_m43_vwl_2p"></a>Creating WarehousePG Principals in the KDC Database <a class="header-anchor" href="#creating-warehousepg-principals-in-the-kdc-database" aria-label="Permalink to &quot;&lt;a id=&quot;task_m43_vwl_2p&quot;&gt;&lt;/a&gt;Creating WarehousePG Principals in the KDC Database&quot;">​</a></h2><p>Create a service principal for the WarehousePG service and a Kerberos admin principal that allows managing the KDC database as the gpadmin user.</p><ol><li><p>Log in to the Kerberos KDC server as the root user.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ ssh root@&lt;kdc-server&gt;</span></span></code></pre></div></li><li><p>Create a principal for the WarehousePG service.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># kadmin.local -q &quot;addprinc -randkey servicename/hostname@realm&quot;</span></span></code></pre></div><p>The <code>-randkey</code> option prevents the command from prompting for a password.</p><p>The <code>servicename</code> part of the principal is ordinarily <code>postgres</code>, but you may specify a different value via the <code>libpq</code>&#39;s configuration parameter <code>krbsrvname</code>.</p><p>The <code>hostname</code> part of the principal name must match the output of the <code>hostname</code> command on the WarehousePG coordinator host. If the <code>hostname</code> command shows the fully qualified domain name (FQDN), use it in the principal name, for example <code>postgres/cdw.example.com@GPDB.KRB</code>.</p><p>The <code>realm</code> part of the principal name is the Kerberos realm name. For example, <code>GPDB.KRB</code>.</p></li><li><p>Create a principal for the gpadmin/admin role.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># kadmin.local -q &quot;addprinc gpadmin/admin@realm&quot;</span></span></code></pre></div><p>This principal allows you to manage the KDC database when you are logged in as gpadmin. Make sure that the Kerberos <code>kadm.acl</code> configuration file contains an ACL to grant permissions to this principal. For example, this ACL grants all permissions to any admin user in the <code>GPDB.KRB</code> realm.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>*/admin@GPDB.KRB *</span></span></code></pre></div></li><li><p>Create a keytab file with <code>kadmin.local</code>. The following example creates a keytab file <code>gpdb-kerberos.keytab</code> in the current directory with authentication information for the WarehousePG service principal and the gpadmin/admin principal.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># kadmin.local -q &quot;ktadd -k gpdb-kerberos.keytab postgres/cdw@GPDB.KRB gpadmin/admin@GPDB.KRB&quot;</span></span></code></pre></div></li><li><p>Copy the keytab file to the coordinator host.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># scp gpdb-kerberos.keytab gpadmin@cdw:~</span></span></code></pre></div></li></ol><h2 id="installing-the-kerberos-client-on-the-coordinator-host" tabindex="-1"><a id="topic6"></a>Installing the Kerberos Client on the Coordinator Host <a class="header-anchor" href="#installing-the-kerberos-client-on-the-coordinator-host" aria-label="Permalink to &quot;&lt;a id=&quot;topic6&quot;&gt;&lt;/a&gt;Installing the Kerberos Client on the Coordinator Host&quot;">​</a></h2><p>Install the Kerberos client utilities and libraries on the WarehousePG coordinator.</p><ol><li><p>Install the Kerberos packages on the WarehousePG coordinator.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ sudo yum install krb5-libs krb5-workstation</span></span></code></pre></div></li><li><p>Copy the <code>/etc/krb5.conf</code> file from the KDC server to <code>/etc/krb5.conf</code> on the WarehousePG Coordinator host.</p></li></ol><h2 id="configuring-warehousepg-to-use-kerberos-authentication" tabindex="-1"><a id="topic7"></a>Configuring WarehousePG to use Kerberos Authentication <a class="header-anchor" href="#configuring-warehousepg-to-use-kerberos-authentication" aria-label="Permalink to &quot;&lt;a id=&quot;topic7&quot;&gt;&lt;/a&gt;Configuring WarehousePG to use Kerberos Authentication&quot;">​</a></h2><p>Configure WarehousePG to use Kerberos.</p><ol><li><p>Log in to the WarehousePG coordinator host as the gpadmin user.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ ssh gpadmin@&lt;coordinator&gt;</span></span>
<span class="line"><span>$ source /usr/local/greenplum-db/greenplum_path.sh</span></span></code></pre></div></li><li><p>Set the ownership and permissions of the keytab file you copied from the KDC server.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ chown gpadmin:gpadmin /home/gpadmin/gpdb-kerberos.keytab</span></span>
<span class="line"><span>$ chmod 400 /home/gpadmin/gpdb-kerberos.keytab</span></span></code></pre></div></li><li><p>Configure the location of the keytab file by setting the WarehousePG <code>krb_server_keyfile</code> server configuration parameter. This <code>gpconfig</code> command specifies the folder /home/gpadmin as the location of the keytab file gpdb-kerberos.keytab.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ gpconfig -c krb_server_keyfile -v  &#39;/home/gpadmin/gpdb-kerberos.keytab&#39;</span></span></code></pre></div></li><li><p>Modify the WarehousePG file <code>pg_hba.conf</code> to enable Kerberos support. For example, adding the following line to <code>pg_hba.conf</code> adds GSSAPI and Kerberos authentication support for connection requests from all users and hosts on the same network to all WarehousePG databases.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>host all all 0.0.0.0/0 gss include_realm=0 krb_realm=GPDB.KRB</span></span></code></pre></div><p>Setting the <code>krb_realm</code> option to a realm name ensures that only users from that realm can successfully authenticate with Kerberos. Setting the <code>include_realm</code> option to <code>0</code> excludes the realm name from the authenticated user name. For information about the <code>pg_hba.conf</code> file, see <a href="https://www.postgresql.org/docs/12/auth-pg-hba-conf.html" target="_blank" rel="noreferrer">The pg_hba.conf file</a> in the PostgreSQL documentation.</p></li><li><p>Restart WarehousePG after updating the <code>krb_server_keyfile</code> parameter and the <code>pg_hba.conf</code> file.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ gpstop -ar</span></span></code></pre></div></li><li><p>Create the gpadmin/admin WarehousePG superuser role.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ createuser gpadmin/admin --superuser</span></span></code></pre></div><p>The Kerberos keys for this database role are in the keyfile you copied from the KDC server.</p></li><li><p>Create a ticket using <code>kinit</code> and show the tickets in the Kerberos ticket cache with <code>klist</code>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ LD_LIBRARY_PATH= kinit -k -t /home/gpadmin/gpdb-kerberos.keytab gpadmin/admin@GPDB.KRB</span></span>
<span class="line"><span>$ LD_LIBRARY_PATH= klist</span></span>
<span class="line"><span>Ticket cache: FILE:/tmp/krb5cc_1000</span></span>
<span class="line"><span>Default principal: gpadmin/admin@GPDB.KRB</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Valid starting       Expires              Service principal</span></span>
<span class="line"><span>06/13/2018 17:37:35  06/14/2018 17:37:35  krbtgt/GPDB.KRB@GPDB.KRB</span></span></code></pre></div><blockquote><p><strong>Note</strong> When you set up the WarehousePG environment by sourcing the <code>greenplum-db_path.sh</code> script, the <code>LD_LIBRARY_PATH</code> environment variable is set to include the WarehousePG <code>lib</code> directory, which includes Kerberos libraries. This may cause Kerberos utility commands such as <code>kinit</code> and <code>klist</code> to fail due to version conflicts. The solution is to run Kerberos utilities before you source the <code>greenplum-db_path.sh</code> file or temporarily unset the <code>LD_LIBRARY_PATH</code> variable when you run Kerberos utilities, as shown in the example.</p></blockquote></li><li><p>As a test, log in to the postgres database with the <code>gpadmin/admin</code> role:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ psql -U &quot;gpadmin/admin&quot; -h cdw postgres</span></span>
<span class="line"><span>psql (9.4.20)</span></span>
<span class="line"><span>Type &quot;help&quot; for help.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>postgres=# select current_user;</span></span>
<span class="line"><span> current_user</span></span>
<span class="line"><span>---------------</span></span>
<span class="line"><span> gpadmin/admin</span></span>
<span class="line"><span>(1 row)</span></span></code></pre></div><blockquote><p><strong>Note</strong> When you start <code>psql</code> on the coordinator host, you must include the <code>-h &lt;coordinator-hostname&gt;</code> option to force a TCP connection because Kerberos authentication does not work with local connections.</p></blockquote></li></ol><p>If a Kerberos principal is not a WarehousePG user, a message similar to the following is displayed from the <code>psql</code> command line when the user attempts to log in to the database:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>psql: krb5_sendauth: Bad response</span></span></code></pre></div><p>The principal must be added as a WarehousePG user.</p><h2 id="mapping-kerberos-principals-to-warehousepg-roles" tabindex="-1"><a id="topic_kmr_gws_d2b"></a>Mapping Kerberos Principals to WarehousePG Roles <a class="header-anchor" href="#mapping-kerberos-principals-to-warehousepg-roles" aria-label="Permalink to &quot;&lt;a id=&quot;topic_kmr_gws_d2b&quot;&gt;&lt;/a&gt;Mapping Kerberos Principals to WarehousePG Roles&quot;">​</a></h2><p>To connect to a WarehousePG cluster with Kerberos authentication enabled, a user first requests a ticket-granting ticket from the KDC server using the <code>kinit</code> utility with a password or a keytab file provided by the Kerberos admin. When the user then connects to the Kerberos-enabled WarehousePG cluster, the user&#39;s Kerberos principle name will be the WarehousePG role name, subject to transformations specified in the options field of the <code>gss</code> entry in the WarehousePG <code>pg_hba.conf</code> file:</p><ul><li>If the <code>krb_realm=&lt;realm&gt;</code> option is present, WarehousePG only accepts Kerberos principals who are members pf the specified realm.</li><li>If the <code>include_realm=0</code> option is specified, the WarehousePG role name is the Kerberos principal name without the Kerberos realm. If the <code>include_realm=1</code> option is instead specified, the Kerberos realm is not stripped from the WarehousePG rolename. The role must have been created with the WarehousePG <code>CREATE ROLE</code> command.</li><li>If the <code>map=&lt;map-name&gt;</code> option is specified, the Kerberos principal name is compared to entries labeled with the specified <code>&lt;map-name&gt;</code> in the <code>$COORDINATOR_DATA_DIRECTORY/pg_ident.conf</code> file and replaced with the WarehousePG role name specified in the first matching entry.</li></ul><p>A user name map is defined in the <code>$COORDINATOR_DATA_DIRECTORY/pg_ident.conf</code> configuration file. This example defines a map named <code>mymap</code> with two entries.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span># MAPNAME   SYSTEM-USERNAME        GP-USERNAME</span></span>
<span class="line"><span>mymap       /^admin@GPDB.KRB$      gpadmin</span></span>
<span class="line"><span>mymap       /^(.*)_gp)@GPDB.KRB$   \\1</span></span></code></pre></div><p>The map name is specified in the <code>pg_hba.conf</code> Kerberos entry in the options field:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>host all all 0.0.0.0/0 gss include_realm=0 krb_realm=GPDB.KRB map=mymap</span></span></code></pre></div><p>The first map entry matches the Kerberos principal admin@GPDB.KRB and replaces it with the WarehousePG gpadmin role name. The second entry uses a wildcard to match any Kerberos principal in the GPDB-KRB realm with a name ending with the characters <code>_gp</code> and replaces it with the initial portion of the principal name. WarehousePG applies the first matching map entry in the <code>pg_ident.conf</code> file, so the order of entries is significant.</p><p>For more information about using username maps see <a href="https://www.postgresql.org/docs/12/auth-username-maps.html" target="_blank" rel="noreferrer">Username maps</a> in the PostgreSQL documentation.</p><h2 id="configuring-jdbc-kerberos-authentication-for-warehousepg" tabindex="-1"><a id="topic9"></a>Configuring JDBC Kerberos Authentication for WarehousePG <a class="header-anchor" href="#configuring-jdbc-kerberos-authentication-for-warehousepg" aria-label="Permalink to &quot;&lt;a id=&quot;topic9&quot;&gt;&lt;/a&gt;Configuring JDBC Kerberos Authentication for WarehousePG&quot;">​</a></h2><p>Enable Kerberos-authenticated JDBC access to WarehousePG.</p><p>You can configure WarehousePG to use Kerberos to run user-defined Java functions.</p><ol><li><p>Ensure that Kerberos is installed and configured on the WarehousePG coordinator. See <a href="#topic6">Installing the Kerberos Client on the Coordinator Host</a>.</p></li><li><p>Create the file .java.login.config in the folder <code>/home/gpadmin</code> and add the following text to the file:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pgjdbc {</span></span>
<span class="line"><span>  com.sun.security.auth.module.Krb5LoginModule required</span></span>
<span class="line"><span>  doNotPrompt=true</span></span>
<span class="line"><span>  useTicketCache=true</span></span>
<span class="line"><span>  debug=true</span></span>
<span class="line"><span>  client=true;</span></span>
<span class="line"><span>};</span></span></code></pre></div></li><li><p>Create a Java application that connects to WarehousePG using Kerberos authentication. The following example database connection URL uses a PostgreSQL JDBC driver and specifies parameters for Kerberos authentication:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>jdbc:postgresql://cdw:5432/mytest?kerberosServerName=postgres</span></span>
<span class="line"><span>&amp;jaasApplicationName=pgjdbc&amp;user=gpadmin/gpdb-kdc</span></span></code></pre></div><p>The parameter names and values specified depend on how the Java application performs Kerberos authentication.</p></li><li><p>Test the Kerberos login by running a sample Java application from WarehousePG.</p></li></ol><h2 id="installing-and-configuring-a-kerberos-kdc-server" tabindex="-1"><a id="task_setup_kdc"></a>Installing and Configuring a Kerberos KDC Server <a class="header-anchor" href="#installing-and-configuring-a-kerberos-kdc-server" aria-label="Permalink to &quot;&lt;a id=&quot;task_setup_kdc&quot;&gt;&lt;/a&gt;Installing and Configuring a Kerberos KDC Server&quot;">​</a></h2><p>Steps to set up a Kerberos Key Distribution Center (KDC) server on a Red Hat Enterprise Linux host for use with WarehousePG.</p><p>If you do not already have a KDC, follow these steps to install and configure a KDC server on a Red Hat Enterprise Linux host with a <code>GPDB.KRB</code> realm. The host name of the KDC server in this example is gpdb-kdc.</p><ol><li><p>Install the Kerberos server and client packages:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ sudo yum install krb5-libs krb5-server krb5-workstation</span></span></code></pre></div></li><li><p>Edit the /etc/krb5.conf configuration file. The following example shows a Kerberos server configured with a default <code>GPDB.KRB</code> realm.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[logging]</span></span>
<span class="line"><span> default = FILE:/var/log/krb5libs.log</span></span>
<span class="line"><span> kdc = FILE:/var/log/krb5kdc.log</span></span>
<span class="line"><span> admin_server = FILE:/var/log/kadmind.log</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[libdefaults]</span></span>
<span class="line"><span> default_realm = GPDB.KRB</span></span>
<span class="line"><span> dns_lookup_realm = false</span></span>
<span class="line"><span> dns_lookup_kdc = false</span></span>
<span class="line"><span> ticket_lifetime = 24h</span></span>
<span class="line"><span> renew_lifetime = 7d</span></span>
<span class="line"><span> forwardable = true</span></span>
<span class="line"><span> default_tgs_enctypes = aes128-cts des3-hmac-sha1 des-cbc-crc des-cbc-md5</span></span>
<span class="line"><span> default_tkt_enctypes = aes128-cts des3-hmac-sha1 des-cbc-crc des-cbc-md5</span></span>
<span class="line"><span> permitted_enctypes = aes128-cts des3-hmac-sha1 des-cbc-crc des-cbc-md5</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[realms]</span></span>
<span class="line"><span> GPDB.KRB = {</span></span>
<span class="line"><span>  kdc = gpdb-kdc:88</span></span>
<span class="line"><span>  admin_server = gpdb-kdc:749</span></span>
<span class="line"><span>  default_domain = gpdb.krb</span></span>
<span class="line"><span> }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[domain_realm]</span></span>
<span class="line"><span> .gpdb.krb = GPDB.KRB</span></span>
<span class="line"><span> gpdb.krb = GPDB.KRB</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[appdefaults]</span></span>
<span class="line"><span> pam = {</span></span>
<span class="line"><span>    debug = false</span></span>
<span class="line"><span>    ticket_lifetime = 36000</span></span>
<span class="line"><span>    renew_lifetime = 36000</span></span>
<span class="line"><span>    forwardable = true</span></span>
<span class="line"><span>    krb4_convert = false</span></span>
<span class="line"><span> }</span></span></code></pre></div><p>The <code>kdc</code> and <code>admin_server</code> keys in the <code>[realms]</code> section specify the host (<code>gpdb-kdc</code>) and port where the Kerberos server is running. IP numbers can be used in place of host names.</p><p>If your Kerberos server manages authentication for other realms, you would instead add the <code>GPDB.KRB</code> realm in the <code>[realms]</code> and <code>[domain_realm]</code> section of the <code>kdc.conf</code> file. See the <a href="http://web.mit.edu/kerberos/krb5-latest/doc/" target="_blank" rel="noreferrer">Kerberos documentation</a> for information about the <code>kdc.conf</code> file.</p></li><li><p>To create the Kerberos database, run the <code>kdb5_util</code>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># kdb5_util create -s</span></span></code></pre></div><p>The <code>kdb5_util</code> create command creates the database to store keys for the Kerberos realms that are managed by this KDC server. The -s option creates a stash file. Without the stash file, every time the KDC server starts it requests a password.</p></li><li><p>Add an administrative user to the KDC database with the <code>kadmin.local</code> utility. Because it does not itself depend on Kerberos authentication, the <code>kadmin.local</code> utility allows you to add an initial administrative user to the local Kerberos server. To add the user <code>gpadmin</code> as an administrative user to the KDC database, run the following command:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># kadmin.local -q &quot;addprinc gpadmin/admin&quot;</span></span></code></pre></div><p>Most users do not need administrative access to the Kerberos server. They can use <code>kadmin</code> to manage their own principals (for example, to change their own password). For information about <code>kadmin</code>, see the <a href="http://web.mit.edu/kerberos/krb5-latest/doc/" target="_blank" rel="noreferrer">Kerberos documentation</a>.</p></li><li><p>If needed, edit the /var/kerberos/krb5kdc/kadm5.acl file to grant the appropriate permissions to <code>gpadmin</code>.</p></li><li><p>Start the Kerberos daemons:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># /sbin/service krb5kdc start#</span></span>
<span class="line"><span>/sbin/service kadmin start</span></span></code></pre></div></li><li><p>To start Kerberos automatically upon restart:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># /sbin/chkconfig krb5kdc on</span></span>
<span class="line"><span># /sbin/chkconfig kadmin on</span></span></code></pre></div></li></ol>`,42)]))}const g=a(i,[["render",o]]);export{u as __pageData,g as default};
