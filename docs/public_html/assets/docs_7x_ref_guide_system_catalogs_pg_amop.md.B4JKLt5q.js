import{_ as o,c as e,o as d,ag as a}from"./chunks/framework.Ds6Eueu6.js";const f=JSON.parse('{"title":"pg_amop","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/ref_guide/system_catalogs/pg_amop.md","filePath":"docs/7x/ref_guide/system_catalogs/pg_amop.md"}'),r={name:"docs/7x/ref_guide/system_catalogs/pg_amop.md"};function p(c,t,i,s,m,n){return d(),e("div",null,t[0]||(t[0]=[a('<h1 id="pg-amop" tabindex="-1">pg_amop <a class="header-anchor" href="#pg-amop" aria-label="Permalink to &quot;pg_amop&quot;">â€‹</a></h1><p>The <code>pg_amop</code> table stores information about operators associated with index access method operator classes. There is one row for each operator that is a member of an operator class.</p><p>An entry&#39;s <code>amopmethod</code> must match the <code>opfmethod</code> of its containing operator family (including <code>amopmethod</code> here is an intentional denormalization of the catalog structure for performance reasons). Also, <code>amoplefttype</code> and <code>amoprighttype</code> must match the <code>oprleft</code> and <code>oprright</code> fields of the referenced <code>pg_operator</code> entry.</p><table tabindex="0"><thead><tr><th>column</th><th>type</th><th>references</th><th>description</th></tr></thead><tbody><tr><td><code>oid</code></td><td>oid</td><td></td><td>Row identifier (hidden attribute; must be explicitly selected)</td></tr><tr><td><code>amopfamily</code></td><td>oid</td><td>pg_opfamily.oid</td><td>The operator family that this entry is for</td></tr><tr><td><code>amoplefttype</code></td><td>oid</td><td>pg_type.oid</td><td>Left-hand input data type of operator</td></tr><tr><td><code>amoprighttype</code></td><td>oid</td><td>pg_type.oid</td><td>Right-hand input data type of operator</td></tr><tr><td><code>amopstrategy</code></td><td>smallint</td><td></td><td>Operator strategy number</td></tr><tr><td><code>amoppurpose</code></td><td>char</td><td></td><td>Operator purpose, either <code>s</code> for search or <code>o</code> for ordering</td></tr><tr><td><code>amopopr</code></td><td>oid</td><td>pg_operator.oid</td><td>OID of the operator</td></tr><tr><td><code>amopmethod</code></td><td>oid</td><td>pg_am.oid</td><td>Index access method for the operator family</td></tr><tr><td><code>amopsortfamily</code></td><td>oid</td><td>pg_opfamily.oid</td><td>If an ordering operator, the B-tree operator family that this entry sorts according to; zero if a search operator</td></tr></tbody></table><p><strong>Parent topic:</strong> <a href="./../system_catalogs/catalog_ref-html.html">System Catalogs Definitions</a></p>',5)]))}const l=o(r,[["render",p]]);export{f as __pageData,l as default};
