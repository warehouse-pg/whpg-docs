import{_ as d,c as o,o as e,ag as r}from"./chunks/framework.Ds6Eueu6.js";const g=JSON.parse('{"title":"pg_operator","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/ref_guide/system_catalogs/pg_operator.md","filePath":"docs/7x/ref_guide/system_catalogs/pg_operator.md"}'),a={name:"docs/7x/ref_guide/system_catalogs/pg_operator.md"};function p(i,t,c,s,n,h){return e(),o("div",null,t[0]||(t[0]=[r('<h1 id="pg-operator" tabindex="-1">pg_operator <a class="header-anchor" href="#pg-operator" aria-label="Permalink to &quot;pg_operator&quot;">â€‹</a></h1><p>The <code>pg_operator</code> system catalog table stores information about operators, both built-in and those defined by <code>CREATE OPERATOR</code>. Unused column contain zeroes. For example, <code>oprleft</code> is zero for a prefix operator.</p><table tabindex="0"><thead><tr><th>column</th><th>type</th><th>references</th><th>description</th></tr></thead><tbody><tr><td><code>oid</code></td><td>oid</td><td></td><td>Row identifier (hidden attribute, must be explicityly selected)</td></tr><tr><td><code>oprname</code></td><td>name</td><td></td><td>Name of the operator</td></tr><tr><td><code>oprnamespace</code></td><td>oid</td><td>pg_namespace.oid</td><td>The OID of the namespace that contains this operator</td></tr><tr><td><code>oprowner</code></td><td>oid</td><td>pg_authid.oid</td><td>Owner of the operator</td></tr><tr><td><code>oprkind</code></td><td>char</td><td></td><td><code>b</code> = infix (both), <code>l</code> = prefix (left), <code>r</code> = postfix (right)</td></tr><tr><td><code>oprcanmerge</code></td><td>boolean</td><td></td><td>This operator supports merge joins</td></tr><tr><td><code>oprcanhash</code></td><td>boolean</td><td></td><td>This operator supports hash joins</td></tr><tr><td><code>oprleft</code></td><td>oid</td><td>pg_type.oid</td><td>Type of the left operand</td></tr><tr><td><code>oprright</code></td><td>oid</td><td>pg_type.oid</td><td>Type of the right operand</td></tr><tr><td><code>oprresult</code></td><td>oid</td><td>pg_type.oid</td><td>Type of the result</td></tr><tr><td><code>oprcom</code></td><td>oid</td><td>pg_operator.oid</td><td>Commutator of this operator, if any</td></tr><tr><td><code>oprnegate</code></td><td>oid</td><td>pg_operator.oid</td><td>Negator of this operator, if any</td></tr><tr><td><code>oprcode</code></td><td>regproc</td><td>pg_proc.oid</td><td>Function that implements this operator</td></tr><tr><td><code>oprrest</code></td><td>regproc</td><td>pg_proc.oid</td><td>Restriction selectivity estimation function for this operator</td></tr><tr><td><code>oprjoin</code></td><td>regproc</td><td>pg_proc.oid</td><td>Join selectivity estimation function for this operator</td></tr></tbody></table><p><strong>Parent topic:</strong> <a href="./../system_catalogs/catalog_ref-html.html">System Catalogs Definitions</a></p>',4)]))}const l=d(a,[["render",p]]);export{g as __pageData,l as default};
