import{_ as e,c as s,o as n,ag as t}from"./chunks/framework.Ds6Eueu6.js";const h=JSON.parse('{"title":"ALTER DEFAULT PRIVILEGES","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/ref_guide/sql_commands/ALTER_DEFAULT_PRIVILEGES.md","filePath":"docs/7x/ref_guide/sql_commands/ALTER_DEFAULT_PRIVILEGES.md"}'),p={name:"docs/7x/ref_guide/sql_commands/ALTER_DEFAULT_PRIVILEGES.md"};function l(i,a,o,r,c,d){return n(),s("div",null,a[0]||(a[0]=[t(`<h1 id="alter-default-privileges" tabindex="-1">ALTER DEFAULT PRIVILEGES <a class="header-anchor" href="#alter-default-privileges" aria-label="Permalink to &quot;ALTER DEFAULT PRIVILEGES&quot;">​</a></h1><p>Changes default access privileges.</p><h2 id="synopsis" tabindex="-1"><a id="section2"></a>Synopsis <a class="header-anchor" href="#synopsis" aria-label="Permalink to &quot;&lt;a id=&quot;section2&quot;&gt;&lt;/a&gt;Synopsis&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>ALTER DEFAULT PRIVILEGES</span></span>
<span class="line"><span>    [ FOR { ROLE | USER } &lt;target_role&gt; [, ...] ]</span></span>
<span class="line"><span>    [ IN SCHEMA &lt;schema_name&gt; [, ...] ]</span></span>
<span class="line"><span>    &lt;abbreviated_grant_or_revoke&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>where &lt;abbreviated_grant_or_revoke&gt; is one of:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>GRANT { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }</span></span>
<span class="line"><span>    [, ...] | ALL [ PRIVILEGES ] }</span></span>
<span class="line"><span>    ON TABLES</span></span>
<span class="line"><span>    TO { [ GROUP ] &lt;role_name&gt; | PUBLIC } [, ...] [ WITH GRANT OPTION ]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>GRANT { { USAGE | SELECT | UPDATE }</span></span>
<span class="line"><span>    [, ...] | ALL [ PRIVILEGES ] }</span></span>
<span class="line"><span>    ON SEQUENCES</span></span>
<span class="line"><span>    TO { [ GROUP ] &lt;role_name&gt; | PUBLIC } [, ...] [ WITH GRANT OPTION ]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>GRANT { EXECUTE | ALL [ PRIVILEGES ] }</span></span>
<span class="line"><span>    ON { FUNCTIONS | ROUTINES }</span></span>
<span class="line"><span>    TO { [ GROUP ] &lt;role_name&gt; | PUBLIC } [, ...] [ WITH GRANT OPTION ]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>GRANT { USAGE | ALL [ PRIVILEGES ] }</span></span>
<span class="line"><span>    ON TYPES</span></span>
<span class="line"><span>    TO { [ GROUP ] &lt;role_name&gt; | PUBLIC } [, ...] [ WITH GRANT OPTION ]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>GRANT { USAGE | CREATE | ALL [ PRIVILEGES ] }</span></span>
<span class="line"><span>    ON SCHEMAS</span></span>
<span class="line"><span>    TO { [ GROUP ] &lt;role_name&gt; | PUBLIC } [, ...] [ WITH GRANT OPTION ]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>REVOKE [ GRANT OPTION FOR ]</span></span>
<span class="line"><span>    { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }</span></span>
<span class="line"><span>    [, ...] | ALL [ PRIVILEGES ] }</span></span>
<span class="line"><span>    ON TABLES</span></span>
<span class="line"><span>    FROM { [ GROUP ] &lt;role_name&gt; | PUBLIC } [, ...]</span></span>
<span class="line"><span>    [ CASCADE | RESTRICT ]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>REVOKE [ GRANT OPTION FOR ]</span></span>
<span class="line"><span>    { { USAGE | SELECT | UPDATE }</span></span>
<span class="line"><span>    [, ...] | ALL [ PRIVILEGES ] }</span></span>
<span class="line"><span>    ON SEQUENCES</span></span>
<span class="line"><span>    FROM { [ GROUP ] &lt;role_name&gt; | PUBLIC } [, ...]</span></span>
<span class="line"><span>    [ CASCADE | RESTRICT ]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>REVOKE [ GRANT OPTION FOR ]</span></span>
<span class="line"><span>    { EXECUTE | ALL [ PRIVILEGES ] }</span></span>
<span class="line"><span>    ON { FUNCTIONS | ROUTINES }</span></span>
<span class="line"><span>    FROM { [ GROUP ] &lt;role_name&gt; | PUBLIC } [, ...]</span></span>
<span class="line"><span>    [ CASCADE | RESTRICT ]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>REVOKE [ GRANT OPTION FOR ]</span></span>
<span class="line"><span>    { USAGE | ALL [ PRIVILEGES ] }</span></span>
<span class="line"><span>    ON TYPES</span></span>
<span class="line"><span>    FROM { [ GROUP ] &lt;role_name&gt; | PUBLIC } [, ...]</span></span>
<span class="line"><span>    [ CASCADE | RESTRICT ]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>REVOKE [ GRANT OPTION FOR ]</span></span>
<span class="line"><span>    { USAGE | CREATE | ALL [ PRIVILEGES ] }</span></span>
<span class="line"><span>    ON SCHEMAS</span></span>
<span class="line"><span>    FROM { [ GROUP ] &lt;role_name&gt; | PUBLIC } [, ...]</span></span>
<span class="line"><span>    [ CASCADE | RESTRICT ]</span></span></code></pre></div><h2 id="description" tabindex="-1"><a id="section3"></a>Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;&lt;a id=&quot;section3&quot;&gt;&lt;/a&gt;Description&quot;">​</a></h2><p><code>ALTER DEFAULT PRIVILEGES</code> allows you to set the privileges that will be applied to objects created in the future. (It does not affect privileges assigned to already-existing objects.) Currently, only the privileges for schemas, tables (including views and foreign tables), sequences, functions, and types (including domains) can be altered. For this command, functions include aggregates and procedures. The words <code>FUNCTIONS</code> and <code>ROUTINES</code> are equivalent in this command. (<code>ROUTINES</code> is preferred going forward as the standard term for functions and procedures taken together. In earlier WarehousePG releases, only the word <code>FUNCTIONS</code> was allowed. It is not possible to set default privileges for functions and procedures separately.)</p><p>You can change default privileges only for objects that will be created by yourself or by roles that you are a member of. The privileges can be set globally (i.e., for all objects created in the current database), or just for objects created in specified schemas.</p><p>As explained under <a href="./GRANT.html">GRANT</a>, the default privileges for any object type normally grant all grantable permissions to the object owner, and may grant some privileges to <code>PUBLIC</code> as well. However, this behavior can be changed by altering the global default privileges with <code>ALTER DEFAULT PRIVILEGES</code>.</p><p>Default privileges that are specified per-schema are added to whatever the global default privileges are for the particular object type. This means you cannot revoke privileges per-schema if they are granted globally (either by default, or according to a previous <code>ALTER DEFAULT PRIVILEGES</code> command that did not specify a schema). Per-schema <code>REVOKE</code> is only useful to reverse the effects of a previous per-schema <code>GRANT</code>.</p><h2 id="parameters" tabindex="-1"><a id="parms"></a>Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;&lt;a id=&quot;parms&quot;&gt;&lt;/a&gt;Parameters&quot;">​</a></h2><p>target_role : The name of an existing role of which the current role is a member. If <code>FOR ROLE</code> is omitted, the current role is assumed.</p><p>schema_name : The name of an existing schema. If specified, the default privileges are altered for objects later created in that schema. If <code>IN SCHEMA</code> is omitted, the global default privileges are altered. <code>IN SCHEMA</code> is not allowed when setting privileges for schemas, since schemas can&#39;t be nested.</p><p>role_name : The name of an existing role to grant or revoke privileges for. This parameter, and all the other parameters in abbreviated_grant_or_revoke, act as described under <a href="./GRANT.html">GRANT</a> or <a href="./REVOKE.html">REVOKE</a>, except that one is setting permissions for a whole class of objects rather than specific named objects.</p><h2 id="notes" tabindex="-1"><a id="sql-alterdefaultprivileges-notes"></a>Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;&lt;a id=&quot;sql-alterdefaultprivileges-notes&quot;&gt;&lt;/a&gt;Notes&quot;">​</a></h2><p>Use <a href="./../../utility_guide/ref/psql.html">psql</a>&#39;s <code>\\ddp</code> command to obtain information about existing assignments of default privileges. The meaning of the privilege values is the same as explained for <code>\\dp</code> under <a href="./GRANT.html">GRANT</a>.</p><p>If you wish to drop a role for which the default privileges have been altered, it is necessary to reverse the changes in its default privileges or use <code>DROP OWNED BY</code> to get rid of the default privileges entry for the role.</p><h2 id="examples" tabindex="-1"><a id="sql-alterdefaultprivileges-examples"></a>Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;&lt;a id=&quot;sql-alterdefaultprivileges-examples&quot;&gt;&lt;/a&gt;Examples&quot;">​</a></h2><p>Grant SELECT privilege to everyone for all tables (and views) you subsequently create in schema <code>myschema</code>, and allow role <code>webuser</code> to INSERT into them too:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER DEFAULT PRIVILEGES IN SCHEMA myschema GRANT SELECT ON TABLES TO PUBLIC;</span></span>
<span class="line"><span>ALTER DEFAULT PRIVILEGES IN SCHEMA myschema GRANT INSERT ON TABLES TO webuser;</span></span></code></pre></div><p>Undo the above, so that subsequently-created tables won&#39;t have any more permissions than normal:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER DEFAULT PRIVILEGES IN SCHEMA myschema REVOKE SELECT ON TABLES FROM PUBLIC;</span></span>
<span class="line"><span>ALTER DEFAULT PRIVILEGES IN SCHEMA myschema REVOKE INSERT ON TABLES FROM webuser;</span></span></code></pre></div><p>Remove the public EXECUTE permission that is normally granted on functions, for all functions subsequently created by role <code>admin</code>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER DEFAULT PRIVILEGES FOR ROLE admin REVOKE EXECUTE ON FUNCTIONS FROM PUBLIC;</span></span></code></pre></div><p>Note however that you <em>cannot</em> accomplish that effect with a command limited to a single schema. The following command has no effect, unless it is undoing a matching <code>GRANT</code>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER DEFAULT PRIVILEGES IN SCHEMA public REVOKE EXECUTE ON FUNCTIONS FROM PUBLIC;</span></span></code></pre></div><p>That&#39;s because per-schema default privileges can only add privileges to the global setting, not remove privileges granted by it.</p><h2 id="compatibility" tabindex="-1"><a id="compat"></a>Compatibility <a class="header-anchor" href="#compatibility" aria-label="Permalink to &quot;&lt;a id=&quot;compat&quot;&gt;&lt;/a&gt;Compatibility&quot;">​</a></h2><p>There is no <code>ALTER DEFAULT PRIVILEGES</code> statement in the SQL standard.</p><h2 id="see-also" tabindex="-1"><a id="see-also"></a>See Also <a class="header-anchor" href="#see-also" aria-label="Permalink to &quot;&lt;a id=&quot;see-also&quot;&gt;&lt;/a&gt;See Also&quot;">​</a></h2><p><a href="./GRANT.html">GRANT</a>, <a href="./REVOKE.html">REVOKE</a></p><p><strong>Parent topic:</strong> <a href="./../sql_commands/sql_ref.html">SQL Commands</a></p>`,31)]))}const T=e(p,[["render",l]]);export{h as __pageData,T as default};
