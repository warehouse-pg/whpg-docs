import{_ as a,c as t,o,ag as s}from"./chunks/framework.Ds6Eueu6.js";const m=JSON.parse('{"title":"DROP SCHEMA","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/ref_guide/sql_commands/DROP_SCHEMA.md","filePath":"docs/7x/ref_guide/sql_commands/DROP_SCHEMA.md"}'),i={name:"docs/7x/ref_guide/sql_commands/DROP_SCHEMA.md"};function n(c,e,d,r,l,h){return o(),t("div",null,e[0]||(e[0]=[s('<h1 id="drop-schema" tabindex="-1">DROP SCHEMA <a class="header-anchor" href="#drop-schema" aria-label="Permalink to &quot;DROP SCHEMA&quot;">​</a></h1><p>Removes a schema.</p><h2 id="synopsis" tabindex="-1"><a id="section2"></a>Synopsis <a class="header-anchor" href="#synopsis" aria-label="Permalink to &quot;&lt;a id=&quot;section2&quot;&gt;&lt;/a&gt;Synopsis&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>DROP SCHEMA [IF EXISTS] &lt;name&gt; [, ...] [CASCADE | RESTRICT]</span></span></code></pre></div><h2 id="description" tabindex="-1"><a id="section3"></a>Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;&lt;a id=&quot;section3&quot;&gt;&lt;/a&gt;Description&quot;">​</a></h2><p><code>DROP SCHEMA</code> removes schemas from the database.</p><p>A schema can be dropped only by its owner or a superuser. Note that the owner can drop the schema (and thereby all contained objects) even if they do not own some of the objects within the schema.</p><h2 id="parameters" tabindex="-1"><a id="section4"></a>Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;&lt;a id=&quot;section4&quot;&gt;&lt;/a&gt;Parameters&quot;">​</a></h2><p>IF EXISTS : Do not throw an error if the schema does not exist. A notice is issued in this case.</p><p>name : The name of the schema to remove.</p><p>CASCADE : Automatically drop objects (tables, functions, etc.) that are contained in the schema, and in turn all objects that depend on those objects.</p><p>RESTRICT : Refuse to drop the schema if it contains any objects. This is the default.</p><h2 id="notes" tabindex="-1"><a id="section4a"></a>Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;&lt;a id=&quot;section4a&quot;&gt;&lt;/a&gt;Notes&quot;">​</a></h2><p>Using the <code>CASCADE</code> option may result in the command removing objects in other schemas besides the one(s) named.</p><h2 id="examples" tabindex="-1"><a id="section5"></a>Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;&lt;a id=&quot;section5&quot;&gt;&lt;/a&gt;Examples&quot;">​</a></h2><p>Remove the schema <code>mystuff</code> from the database, along with everything it contains:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>DROP SCHEMA mystuff CASCADE;</span></span></code></pre></div><h2 id="compatibility" tabindex="-1"><a id="section6"></a>Compatibility <a class="header-anchor" href="#compatibility" aria-label="Permalink to &quot;&lt;a id=&quot;section6&quot;&gt;&lt;/a&gt;Compatibility&quot;">​</a></h2><p><code>DROP SCHEMA</code> is fully conforming with the SQL standard, except that the standard only allows one schema to be dropped per command. Also, the <code>IF EXISTS</code> option is a WarehousePG extension.</p><h2 id="see-also" tabindex="-1"><a id="section7"></a>See Also <a class="header-anchor" href="#see-also" aria-label="Permalink to &quot;&lt;a id=&quot;section7&quot;&gt;&lt;/a&gt;See Also&quot;">​</a></h2><p><a href="./CREATE_SCHEMA.html">CREATE SCHEMA</a>, <a href="./ALTER_SCHEMA.html">ALTER SCHEMA</a></p><p><strong>Parent topic:</strong> <a href="./../sql_commands/sql_ref.html">SQL Commands</a></p>',22)]))}const u=a(i,[["render",n]]);export{m as __pageData,u as default};
