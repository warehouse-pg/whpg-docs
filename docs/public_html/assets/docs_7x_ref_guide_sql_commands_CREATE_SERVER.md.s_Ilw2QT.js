import{_ as a,c as t,o as s,ag as o}from"./chunks/framework.Ds6Eueu6.js";const u=JSON.parse('{"title":"CREATE SERVER","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/ref_guide/sql_commands/CREATE_SERVER.md","filePath":"docs/7x/ref_guide/sql_commands/CREATE_SERVER.md"}'),n={name:"docs/7x/ref_guide/sql_commands/CREATE_SERVER.md"};function r(i,e,p,d,l,c){return s(),t("div",null,e[0]||(e[0]=[o('<h1 id="create-server" tabindex="-1">CREATE SERVER <a class="header-anchor" href="#create-server" aria-label="Permalink to &quot;CREATE SERVER&quot;">​</a></h1><p>Defines a new foreign server.</p><h2 id="synopsis" tabindex="-1"><a id="section2"></a>Synopsis <a class="header-anchor" href="#synopsis" aria-label="Permalink to &quot;&lt;a id=&quot;section2&quot;&gt;&lt;/a&gt;Synopsis&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE SERVER [ IF NOT EXISTS ] &lt;server_name&gt; [ TYPE &#39;&lt;server_type&gt;&#39; ] [ VERSION &#39;&lt;server_version&gt;&#39; ]</span></span>\n<span class="line"><span>    FOREIGN DATA WRAPPER &lt;fdw_name&gt;</span></span>\n<span class="line"><span>    [ OPTIONS ( [ mpp_execute { &#39;coordinator&#39; | &#39;any&#39; | &#39;all segments&#39; } [, ] ]</span></span>\n<span class="line"><span>                [ num_segments &#39;&lt;num&gt;&#39; [, ] ]</span></span>\n<span class="line"><span>                [ &lt;option&gt; &#39;&lt;value&gt;&#39; [, ... ]] ) ]</span></span></code></pre></div><h2 id="description" tabindex="-1"><a id="section3"></a>Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;&lt;a id=&quot;section3&quot;&gt;&lt;/a&gt;Description&quot;">​</a></h2><p><code>CREATE SERVER</code> defines a new foreign server. The user who defines the server becomes its owner.</p><p>A foreign server typically encapsulates connection information that a foreign-data wrapper uses to access an external data source. Additional user-specific connection information may be specified by means of user mappings.</p><p>Creating a server requires the <code>USAGE</code> privilege on the foreign-data wrapper specified.</p><h2 id="parameters" tabindex="-1"><a id="section4"></a>Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;&lt;a id=&quot;section4&quot;&gt;&lt;/a&gt;Parameters&quot;">​</a></h2><p>IF NOT EXISTS</p><p>: Do not throw an error if a server with the same name already exists. WarehousePG issues a notice in this case. Note that there is no guarantee that the existing server is anything like the one that would have been created.</p><p>server_name : The name of the foreign server to create. The server name must be unique within the database.</p><p>server_type : Optional server type, potentially useful to foreign-data wrappers.</p><p>server_version : Optional server version, potentially useful to foreign-data wrappers.</p><p>fdw_name : Name of the foreign-data wrapper that manages the server.</p><p>OPTIONS ( option &#39;value&#39; [, ... ] ) : The options for the new foreign server. The options typically define the connection details of the server, but the actual names and values are dependent upon the server&#39;s foreign-data wrapper.</p><p>mpp_execute { &#39;coordinator&#39; | &#39;any&#39; | &#39;all segments&#39; } : A WarehousePG-specific option that identifies the host from which the foreign-data wrapper reads or writes data:</p><pre><code>-   `coordinator` \\(the default\\)—Read or write data from the coordinator host.\n-   `any`—Read data from either the coordinator host or any one segment, depending on which path costs less.\n-   `all segments`—Read or write data from all segments. To support this option value, the foreign-data wrapper should have a policy that matches the segments to data.\n\n&gt; **Note** WarehousePG supports parallel writes to foreign tables only when you set `mpp_execute &#39;all segments&#39;`.\n\nSupport for the foreign server `mpp_execute` option, and the specific modes, is foreign-data wrapper-specific.\n\nThe `mpp_execute` option can be specified in multiple commands: `CREATE FOREIGN TABLE`, `CREATE SERVER`, and `CREATE FOREIGN DATA WRAPPER`. The foreign table setting takes precedence over the foreign server setting, followed by the foreign-data wrapper setting.\n</code></pre><p>num_segments &#39;num&#39; : When <code>mpp_execute</code> is set to <code>&#39;all segments&#39;</code>, the WarehousePG-specific <code>num_segments</code> option identifies the number of query executors that WarehousePG spawns on the source WarehousePG cluster. If you do not provide a value, num defaults to the number of segments in the source cluster.</p><pre><code>Support for the foreign server `num_segments` option is foreign-data wrapper-specific.\n</code></pre><h2 id="notes" tabindex="-1"><a id="section5"></a>Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;&lt;a id=&quot;section5&quot;&gt;&lt;/a&gt;Notes&quot;">​</a></h2><p>When using the dblink module (see <a href="./../modules/dblink.html">dblink</a>), you can use the foreign server name as an argument of the <code>dblink_connect()</code> function to provide the connection parameters. You must have the <code>USAGE</code> privilege on the foreign server to use it in this manner.</p><h2 id="examples" tabindex="-1"><a id="section6"></a>Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;&lt;a id=&quot;section6&quot;&gt;&lt;/a&gt;Examples&quot;">​</a></h2><p>Create a foreign server named <code>myserver</code> that uses a foreign-data wrapper named <code>gpfdw1</code> and includes connection options:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE SERVER myserver FOREIGN DATA WRAPPER gpfdw1 </span></span>\n<span class="line"><span>    OPTIONS (host &#39;foo&#39;, dbname &#39;foodb&#39;, port &#39;5432&#39;);</span></span></code></pre></div><h2 id="compatibility" tabindex="-1"><a id="section7"></a>Compatibility <a class="header-anchor" href="#compatibility" aria-label="Permalink to &quot;&lt;a id=&quot;section7&quot;&gt;&lt;/a&gt;Compatibility&quot;">​</a></h2><p><code>CREATE SERVER</code> conforms to ISO/IEC 9075-9 (SQL/MED).</p><h2 id="see-also" tabindex="-1"><a id="section8"></a>See Also <a class="header-anchor" href="#see-also" aria-label="Permalink to &quot;&lt;a id=&quot;section8&quot;&gt;&lt;/a&gt;See Also&quot;">​</a></h2><p><a href="./ALTER_SERVER.html">ALTER SERVER</a>, <a href="./DROP_SERVER.html">DROP SERVER</a>, <a href="./CREATE_FOREIGN_DATA_WRAPPER.html">CREATE FOREIGN DATA WRAPPER</a>, <a href="./CREATE_FOREIGN_TABLE.html">CREATE FOREIGN TABLE</a>, <a href="./CREATE_USER_MAPPING.html">CREATE USER MAPPING</a></p><p><strong>Parent topic:</strong> <a href="./../sql_commands/sql_ref.html">SQL Commands</a></p>',30)]))}const m=a(n,[["render",r]]);export{u as __pageData,m as default};
