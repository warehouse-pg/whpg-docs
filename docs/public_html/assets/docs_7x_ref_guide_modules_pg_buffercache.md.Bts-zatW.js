import{_ as a,c as t,o,ag as r}from"./chunks/framework.Ds6Eueu6.js";const h=JSON.parse('{"title":"pg_buffercache","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/ref_guide/modules/pg_buffercache.md","filePath":"docs/7x/ref_guide/modules/pg_buffercache.md"}'),c={name:"docs/7x/ref_guide/modules/pg_buffercache.md"};function i(s,e,d,n,u,f){return o(),t("div",null,e[0]||(e[0]=[r('<h1 id="pg-buffercache" tabindex="-1">pg_buffercache <a class="header-anchor" href="#pg-buffercache" aria-label="Permalink to &quot;pg_buffercache&quot;">​</a></h1><p>The <code>pg_buffercache</code> module provides five views for obtaining cluster-wide shared buffer metrics:</p><ul><li><code>gp_buffercache</code></li><li><code>gp_buffercache_summary</code></li><li><code>gp_buffercache_usage_counts</code></li><li><code>gp_buffercache_summary_aggregated</code></li><li><code>gp_buffercache_usage_counts_aggregated</code></li></ul><p>The <code>gp_buffercache</code> view is a cluster-wide view that displays the <a href="https://www.postgresql.org/docs/current/pgbuffercache.html" target="_blank" rel="noreferrer"><code>pg_buffercache</code></a> information from the coordinator and every primary segment for each buffer in the shared cache.</p><p>The <code>gp_buffercache_summary</code> view is a cluster-wide view that displays the <a href="https://www.postgresql.org/docs/16/pgbuffercache.html#PGBUFFERCACHE-SUMMARY" target="_blank" rel="noreferrer"><code>pg_buffercache_summary</code></a> information from the coordinator and each primary segment, summarized as one row per segment. Similar and more detailed information is provided by <code>gp_buffercache</code>, but <code>gp_buffercache_summary</code> is significantly better performance-wise.</p><p>The <code>gp_buffercache_usage_counts</code> view is a cluster-wide view that displays the <a href="https://www.postgresql.org/docs/16/pgbuffercache.html#PGBUFFERCACHE-USAGE-COUNTS" target="_blank" rel="noreferrer"><code>pg_puffercache_usage_counts</code></a> information from the coordinator and each primary segment returning summarized states of all shared buffers, aggregated over the possible usage count values. Similar and more detailed information is provided by <code>gp_buffercache</code>, but <code>gp_buffercache_usage_counts</code> is significantly better performance-wise.</p><p>The <code>gp_buffercache_summary_aggregated</code> view returns a single row with the aggregated output of <code>gp_buffercache_summary</code>.</p><p>The <code>gp_buffercache_usage_counts_aggregated</code> view returns a single row with the aggregated output of <code>gp_buffercache_usage_counts</code>.</p><h2 id="installing-and-registering-the-module" tabindex="-1"><a id="topic_reg"></a>Installing and Registering the Module <a class="header-anchor" href="#installing-and-registering-the-module" aria-label="Permalink to &quot;&lt;a id=&quot;topic_reg&quot;&gt;&lt;/a&gt;Installing and Registering the Module&quot;">​</a></h2><p>The <code>pg_buffercache</code> module is installed when you install WarehousePG. Before you can use any of the functions defined in the module, you must register the <code>pg_buffercache</code> extension in each database in which you want to use the functions:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE EXTENSION pg_buffercache;</span></span></code></pre></div><p>Refer to <a href="./../../install_guide/install_extensions.html">Installing Extensions</a> for more information.</p><h2 id="module-documentation" tabindex="-1"><a id="topic_info"></a>Module Documentation <a class="header-anchor" href="#module-documentation" aria-label="Permalink to &quot;&lt;a id=&quot;topic_info&quot;&gt;&lt;/a&gt;Module Documentation&quot;">​</a></h2><p>See <a href="https://www.postgresql.org/docs/12/pgbuffercache.html" target="_blank" rel="noreferrer">pg_buffercache</a> in the PostgreSQL documentation for detailed information about the individual functions in this module.</p>',14)]))}const l=a(c,[["render",i]]);export{h as __pageData,l as default};
