import{_ as a,c as t,o as n,ag as s}from"./chunks/framework.Ds6Eueu6.js";const u=JSON.parse('{"title":"About Changes to External Tables in WarehousePG 7","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/admin_guide/external/about_exttab_7.md","filePath":"docs/7x/admin_guide/external/about_exttab_7.md"}'),o={name:"docs/7x/admin_guide/external/about_exttab_7.md"};function l(i,e,r,d,p,c){return n(),t("div",null,e[0]||(e[0]=[s(`<h1 id="about-changes-to-external-tables-in-warehousepg-7" tabindex="-1">About Changes to External Tables in WarehousePG 7 <a class="header-anchor" href="#about-changes-to-external-tables-in-warehousepg-7" aria-label="Permalink to &quot;About Changes to External Tables in WarehousePG 7&quot;">​</a></h1><hr><p>This topic describes the external table implementation and changes in WarehousePG 7, and is geared towards existing users of WarehousePG 6. WarehousePG 7 converts an external table that you define with the <a href="./../../ref_guide/sql_commands/CREATE_EXTERNAL_TABLE.html">CREATE EXTERNAL TABLE</a> command into a foreign table, and internally operates on and represents the table using the foreign table data structures and catalog.</p><p>(See also <a href="./map_ext_to_foreign.html">Understanding the External Table to Foreign Table Mapping</a> for detailed information about the external table to foreign table conversion, and its runtime implications.)</p><p><strong>Parent topic:</strong> <a href="./../external/external-tables.html">Accessing External Data with External Tables</a></p><h2 id="what-s-the-same" tabindex="-1"><a id="not"></a>What&#39;s the Same? <a class="header-anchor" href="#what-s-the-same" aria-label="Permalink to &quot;&lt;a id=&quot;not&quot;&gt;&lt;/a&gt;What&#39;s the Same?&quot;">​</a></h2><p>If you used external tables in WarehousePG 6, the underlying functionality has not changed in WarehousePG 7. The following external table features and behaviors remain the same in WarehousePG 7:</p><ul><li>WarehousePG 7 fully supports the external table SQL command syntax of WarehousePG 6.</li><li>WarehousePG 7 fully supports external table access to remote data sources via all existing protocols (<code>file</code>, <code>gpdist</code>, <code>pxf</code>, and <code>s3</code>).</li><li>You must create separate tables to read from (<code>CREATE EXTERNAL TABLE</code>) and write to (<code>CREATE WRITABLE EXTERNAL TABLE</code>) the same external data location.</li><li>The <a href="./../../ref_guide/system_catalogs/catalog_ref-views.html#pg_exttable">pg_exttable</a> system catalog (now a view) provides the same information.</li></ul><h2 id="what-has-changed" tabindex="-1"><a id="changed"></a>What Has Changed? <a class="header-anchor" href="#what-has-changed" aria-label="Permalink to &quot;&lt;a id=&quot;changed&quot;&gt;&lt;/a&gt;What Has Changed?&quot;">​</a></h2><p>Note the following differences in the WarehousePG 7 external table implementation compared to WarehousePG 6:</p><ul><li><p>WarehousePG 7 uses foreign table data structures and catalogs to internally represent external tables. Use the <a href="./../../ref_guide/system_catalogs/pg_foreign_table.html">pg_foreign_table</a> system catalog table and the <code>ftoptions</code> column to view the table definition.</p></li><li><p>A <code>pg_tables</code> query no longer returns external tables in the query results.</p></li><li><p>The <code>pg_class.relkind</code> of an external table is now <code>f</code> (was previously <code>r</code>).</p></li><li><p>The <a href="./../../ref_guide/system_catalogs/catalog_ref-views.html#pg_exttable">pg_exttable</a> system catalog is now a view.</p></li><li><p>In addition to <code>pg_exttable</code>, you can use the following query to list all of the foreign tables that were created using the <code>CREATE [WRITABLE] EXTERNAL TABLE</code> command:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SELECT * FROM pg_foreign_table ft </span></span>
<span class="line"><span>  JOIN pg_foreign_server fs ON ft.ftserver = fs.oid</span></span>
<span class="line"><span>  WHERE srvname = &#39;gp_exttable_server&#39;;</span></span></code></pre></div></li><li><p>Because an external table is internally represented as a foreign table:</p><ul><li>Every external table is associated with the <code>gp_exttable_fdw</code> foreign-data wrapper.</li><li>Every external table is associated with the <code>gp_exttable_server</code> foreign server.</li><li>Certain command output and error, detail, and notice messages about external tables refer to the table as a foreign table.</li><li>External tables are included in the foreign table catalogs, for example <a href="./../../ref_guide/system_catalogs/pg_foreign_table.html">pg_foreign_table</a>.</li><li>External tables are included when you list or examine foreign tables (for example, the <code>\\det</code> <code>psql</code> meta-command).</li></ul></li><li><p>External table-specific information displayed in <code>psql</code> <code>\\dE+</code> output has changed; the relation <code>Type</code> of an external table is now <code>foreign table</code>. Example:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>\\dE</span></span>
<span class="line"><span>                List of relations</span></span>
<span class="line"><span> Schema |     Name     |     Type      |  Owner  </span></span>
<span class="line"><span>--------+--------------+---------------+---------</span></span>
<span class="line"><span> public | ext_expenses | foreign table | gpadmin</span></span></code></pre></div></li><li><p>External table-specific information displayed in <code>psql</code> <code>\\d+ &lt;external_table_name&gt;</code> output has changed; it now displays in foreign table format. For this example <code>CREATE EXTERNAL TABLE</code> call:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE EXTERNAL TABLE ext_expenses ( name text, date date, amount float4, category text, desc1 varchar )</span></span>
<span class="line"><span>  LOCATION (&#39;gpfdist://etlhost-1:8081/*.txt&#39;, &#39;gpfdist://etlhost-2:8082/*.txt&#39;)</span></span>
<span class="line"><span>FORMAT &#39;TEXT&#39; ( DELIMITER &#39;|&#39; NULL &#39; &#39; )</span></span>
<span class="line"><span>LOG ERRORS SEGMENT REJECT LIMIT 5;</span></span></code></pre></div><p>The example <code>\\d+</code> output follows:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>\\d+ ext_expenses</span></span>
<span class="line"><span>                                         Foreign table &quot;public.ext_expenses&quot;</span></span>
<span class="line"><span>  Column  |       Type        | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description </span></span>
<span class="line"><span>----------+-------------------+-----------+----------+---------+-------------+----------+--------------+-------------</span></span>
<span class="line"><span> name     | text              |           |          |         |             | extended |              | </span></span>
<span class="line"><span> date     | date              |           |          |         |             | plain    |              | </span></span>
<span class="line"><span> amount   | real              |           |          |         |             | plain    |              | </span></span>
<span class="line"><span> category | text              |           |          |         |             | extended |              | </span></span>
<span class="line"><span> desc1    | character varying |           |          |         |             | extended |              | </span></span>
<span class="line"><span>FDW options: (format &#39;text&#39;, delimiter &#39;|&#39;, &quot;null&quot; &#39; &#39;, escape E&#39;\\\\&#39;, location_uris &#39;gpfdist://etlhost-1:8081/\\*.txt|&#39;gpfdist://etlhost-2:8082/\\*.txt&#39;, execute_on &#39;ALL_SEGMENTS&#39;, reject_limit &#39;5&#39;, reject_limit_type &#39;rows&#39;, log_errors &#39;enable&#39;, encoding &#39;UTF8&#39;, is_writable &#39;false&#39;)</span></span></code></pre></div></li><li><p>The <code>EXPLAIN</code> output for a query including an external table previously returned the text <code>External Scan</code>. <code>EXPLAIN</code> now returns <code>Foreign Scan</code> in this scenario.</p></li></ul><h2 id="additional-considerations" tabindex="-1"><a id="other"></a>Additional Considerations <a class="header-anchor" href="#additional-considerations" aria-label="Permalink to &quot;&lt;a id=&quot;other&quot;&gt;&lt;/a&gt;Additional Considerations&quot;">​</a></h2><p>Additional factors to consider:</p><ul><li>Even though an external table is internally represented as a foreign table, you cannot both read from and write to the same external table.</li><li>You must change any scripts that you wrote that depend on external table DDL or <code>psql</code> <code>\\dE</code> or <code>\\d+</code> output.</li><li>WarehousePG 7 dumps and restores the DDL of external tables using foreign table syntax.</li></ul>`,14)]))}const g=a(o,[["render",l]]);export{u as __pageData,g as default};
