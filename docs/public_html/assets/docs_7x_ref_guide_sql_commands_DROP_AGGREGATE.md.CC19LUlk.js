import{_ as a,c as t,o as n,ag as s}from"./chunks/framework.Ds6Eueu6.js";const h=JSON.parse('{"title":"DROP AGGREGATE","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/ref_guide/sql_commands/DROP_AGGREGATE.md","filePath":"docs/7x/ref_guide/sql_commands/DROP_AGGREGATE.md"}'),o={name:"docs/7x/ref_guide/sql_commands/DROP_AGGREGATE.md"};function i(r,e,d,c,l,p){return n(),t("div",null,e[0]||(e[0]=[s(`<h1 id="drop-aggregate" tabindex="-1">DROP AGGREGATE <a class="header-anchor" href="#drop-aggregate" aria-label="Permalink to &quot;DROP AGGREGATE&quot;">​</a></h1><p>Removes an aggregate function.</p><h2 id="synopsis" tabindex="-1"><a id="section2"></a>Synopsis <a class="header-anchor" href="#synopsis" aria-label="Permalink to &quot;&lt;a id=&quot;section2&quot;&gt;&lt;/a&gt;Synopsis&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>DROP AGGREGATE [IF EXISTS] &lt;name&gt; ( &lt;aggregate_signature&gt; ) [, ...] [CASCADE | RESTRICT]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>where &lt;aggregate_signature&gt; is:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>* |</span></span>
<span class="line"><span>[ &lt;argmode&gt; ] [ &lt;argname&gt; ] &lt;argtype&gt; [ , ... ] |</span></span>
<span class="line"><span>[ [ &lt;argmode&gt; ] [ &lt;argname&gt; ] &lt;argtype&gt; [ , ... ] ] ORDER BY [ &lt;argmode&gt; ] [ &lt;argname&gt; ] &lt;argtype&gt; [ , ... ]</span></span></code></pre></div><h2 id="description" tabindex="-1"><a id="section3"></a>Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;&lt;a id=&quot;section3&quot;&gt;&lt;/a&gt;Description&quot;">​</a></h2><p><code>DROP AGGREGATE</code> removes an existing aggregate function. To run this command the current user must be the owner of the aggregate function.</p><h2 id="parameters" tabindex="-1"><a id="section4"></a>Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;&lt;a id=&quot;section4&quot;&gt;&lt;/a&gt;Parameters&quot;">​</a></h2><p>IF EXISTS : Do not throw an error if the aggregate does not exist. A notice is issued in this case.</p><p>name : The name (optionally schema-qualified) of an existing aggregate function.</p><p>argmode : The mode of an argument: <code>IN</code> or <code>VARIADIC</code>. If omitted, the default is <code>IN</code>.</p><p>argname : The name of an argument. Note that <code>DROP AGGREGATE</code> does not actually pay any attention to argument names, since only the argument data types are needed to determine the aggregate function&#39;s identity.</p><p>argtype : An input data type on which the aggregate function operates. To reference a zero-argument aggregate function, write <code>*</code> in place of the list of argument specifications. To reference an ordered-set aggregate function, write <code>ORDER BY</code> between the direct and aggregated argument specifications.</p><p>CASCADE : Automatically drop objects that depend on the aggregate function (such as views using it) and in turn all objects that depend on those objects.</p><p>RESTRICT : Refuse to drop the aggregate function if any objects depend on it. This is the default.</p><h2 id="notes" tabindex="-1"><a id="notes"></a>Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;&lt;a id=&quot;notes&quot;&gt;&lt;/a&gt;Notes&quot;">​</a></h2><p>Alternative syntaxes for referencing ordered-set aggregates are described under <a href="./ALTER_AGGREGATE.html">ALTER AGGREGATE</a>.</p><h2 id="examples" tabindex="-1"><a id="section5"></a>Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;&lt;a id=&quot;section5&quot;&gt;&lt;/a&gt;Examples&quot;">​</a></h2><p>To remove the aggregate function <code>myavg</code> for type <code>integer</code>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>DROP AGGREGATE myavg(integer);</span></span></code></pre></div><p>To remove the hypothetical-set aggregate function <code>myrank</code>, which takes an arbitrary list of ordering columns and a matching list of direct arguments:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>DROP AGGREGATE myrank(VARIADIC &quot;any&quot; ORDER BY VARIADIC &quot;any&quot;);</span></span></code></pre></div><p>To remove multiple aggregate functions in one command:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>DROP AGGREGATE myavg(integer), myavg(bigint);</span></span></code></pre></div><h2 id="compatibility" tabindex="-1"><a id="section6"></a>Compatibility <a class="header-anchor" href="#compatibility" aria-label="Permalink to &quot;&lt;a id=&quot;section6&quot;&gt;&lt;/a&gt;Compatibility&quot;">​</a></h2><p>There is no <code>DROP AGGREGATE</code> statement in the SQL standard.</p><h2 id="see-also" tabindex="-1"><a id="section7"></a>See Also <a class="header-anchor" href="#see-also" aria-label="Permalink to &quot;&lt;a id=&quot;section7&quot;&gt;&lt;/a&gt;See Also&quot;">​</a></h2><p><a href="./ALTER_AGGREGATE.html">ALTER AGGREGATE</a>, <a href="./CREATE_AGGREGATE.html">CREATE AGGREGATE</a></p><p><strong>Parent topic:</strong> <a href="./../sql_commands/sql_ref.html">SQL Commands</a></p>`,28)]))}const u=a(o,[["render",i]]);export{h as __pageData,u as default};
