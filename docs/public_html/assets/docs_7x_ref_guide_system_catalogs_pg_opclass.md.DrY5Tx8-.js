import{_ as e,c as o,o as a,ag as d}from"./chunks/framework.Ds6Eueu6.js";const m=JSON.parse('{"title":"pg_opclass","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/ref_guide/system_catalogs/pg_opclass.md","filePath":"docs/7x/ref_guide/system_catalogs/pg_opclass.md"}'),s={name:"docs/7x/ref_guide/system_catalogs/pg_opclass.md"};function c(r,t,p,i,l,n){return a(),o("div",null,t[0]||(t[0]=[d('<h1 id="pg-opclass" tabindex="-1">pg_opclass <a class="header-anchor" href="#pg-opclass" aria-label="Permalink to &quot;pg_opclass&quot;">â€‹</a></h1><p>The <code>pg_opclass</code> system catalog table defines index access method operator classes. Each operator class defines semantics for index columns of a particular data type and a particular index access method. An operator class essentially specifies that a particular operator family is applicable to a particular indexable column data type. The set of operators from the family that are actually usable with the indexed column are those that accept the column&#39;s data type as their left-hand input.</p><p>An operator class&#39;s <code>opcmethod</code> must match the <code>opfmethod</code> of its containing operator family. Also, there must be no more than one <code>pg_opclass</code> row having <code>opcdefault</code> true for any given combination of <code>opcmethod</code> and <code>opcintype</code>.</p><p>The PostgreSQL <a href="https://www.postgresql.org/docs/12/xindex.html" target="_blank" rel="noreferrer">Interfacing Extensions to Indexes</a> documentation describes operator classes at length.</p><table tabindex="0"><thead><tr><th>column</th><th>type</th><th>references</th><th>description</th></tr></thead><tbody><tr><td><code>oid</code></td><td>oid</td><td></td><td>Row identifier (hidden attribute; must be explicitly selected)</td></tr><tr><td><code>opcmethod</code></td><td>oid</td><td><a href="./pg_am.html">pg_am</a>.oid</td><td>Index access method operator class is for</td></tr><tr><td><code>opcname</code></td><td>name</td><td></td><td>Name of this operator class</td></tr><tr><td><code>opcnamespace</code></td><td>oid</td><td><a href="./pg_namespace.html">pg_namespace</a>.oid</td><td>Namespace of this operator class</td></tr><tr><td><code>opcowner</code></td><td>oid</td><td><a href="./pg_authid.html">pg_authid</a>.oid</td><td>Owner of the operator class</td></tr><tr><td><code>opcfamily</code></td><td>oid</td><td><a href="./pg_opfamily.html">pg_opfamily</a>.oid</td><td>Operator family containing the operator class</td></tr><tr><td><code>opcintype</code></td><td>oid</td><td><a href="./pg_type.html">pg_type</a>.oid</td><td>Data type that the operator class indexes</td></tr><tr><td><code>opcdefault</code></td><td>boolean</td><td></td><td>True if this operator class is the default for the data type <code>opcintype</code></td></tr><tr><td><code>opckeytype</code></td><td>oid</td><td><a href="./pg_type.html">pg_type</a>.oid</td><td>Type of data stored in index, or zero if same as <code>opcintype</code></td></tr></tbody></table><p><strong>Parent topic:</strong> <a href="./../system_catalogs/catalog_ref-html.html">System Catalogs Definitions</a></p>',6)]))}const f=e(s,[["render",c]]);export{m as __pageData,f as default};
