import{_ as n,c as s,o as e,ag as t}from"./chunks/framework.Ds6Eueu6.js";const T=JSON.parse('{"title":"ALTER ROUTINE","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/ref_guide/sql_commands/ALTER_ROUTINE.md","filePath":"docs/7x/ref_guide/sql_commands/ALTER_ROUTINE.md"}'),p={name:"docs/7x/ref_guide/sql_commands/ALTER_ROUTINE.md"};function l(o,a,i,r,c,E){return e(),s("div",null,a[0]||(a[0]=[t(`<h1 id="alter-routine" tabindex="-1">ALTER ROUTINE <a class="header-anchor" href="#alter-routine" aria-label="Permalink to &quot;ALTER ROUTINE&quot;">​</a></h1><p>Changes the definition of a routine.</p><h2 id="synopsis" tabindex="-1"><a id="section2"></a>Synopsis <a class="header-anchor" href="#synopsis" aria-label="Permalink to &quot;&lt;a id=&quot;section2&quot;&gt;&lt;/a&gt;Synopsis&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER ROUTINE &lt;name&gt; [ ( [ [&lt;argmode&gt;] [&lt;argname&gt;] &lt;argtype&gt; [, ...] ] ) ] </span></span>
<span class="line"><span>   &lt;action&gt; [, ... ] [RESTRICT]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ALTER ROUTINE &lt;name&gt; [ ( [ [&lt;argmode&gt;] [&lt;argname&gt;] &lt;argtype&gt; [, ...] ] ) ]</span></span>
<span class="line"><span>   RENAME TO &lt;new_name&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ALTER ROUTINE &lt;name&gt; [ ( [ [&lt;argmode&gt;] [&lt;argname&gt;] &lt;argtype&gt; [, ...] ] ) ]</span></span>
<span class="line"><span>   OWNER TO { &lt;new_owner&gt; | CURRENT_USER | SESSION_USER }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ALTER ROUTINE &lt;name&gt; [ ( [ [&lt;argmode&gt;] [&lt;argname&gt;] &lt;argtype&gt; [, ...] ] ) ]</span></span>
<span class="line"><span>   SET SCHEMA &lt;new_schema&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ALTER ROUTINE &lt;name&gt; [ ( [ [&lt;argmode&gt;] [&lt;argname&gt;] &lt;argtype&gt; [, ...] ] ) ]</span></span>
<span class="line"><span>   DEPENDS ON EXTENSION &lt;extension_name&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>where &lt;action&gt; is one of (depending on the type of routine):</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    { IMMUTABLE | STABLE | VOLATILE }</span></span>
<span class="line"><span>    [ NOT ] LEAKPROOF</span></span>
<span class="line"><span>    { [EXTERNAL] SECURITY INVOKER | [EXTERNAL] SECURITY DEFINER }</span></span>
<span class="line"><span>    PARALLEL { UNSAFE | RESTRICTED | SAFE }</span></span>
<span class="line"><span>    EXECUTE ON { ANY | COORDINATOR | ALL SEGMENTS | INITPLAN }</span></span>
<span class="line"><span>    COST &lt;execution_cost&gt;</span></span>
<span class="line"><span>    ROWS &lt;result_rows&gt;</span></span>
<span class="line"><span>    SET &lt;configuration_parameter&gt; { TO | = } { &lt;value&gt; | DEFAULT }</span></span>
<span class="line"><span>    SET &lt;configuration_parameter&gt; FROM CURRENT</span></span>
<span class="line"><span>    RESET &lt;configuration_parameter&gt;</span></span>
<span class="line"><span>    RESET ALL</span></span></code></pre></div><h2 id="description" tabindex="-1"><a id="section3"></a>Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;&lt;a id=&quot;section3&quot;&gt;&lt;/a&gt;Description&quot;">​</a></h2><p><code>ALTER ROUTINE</code> changes the definition of a routine, which can be an aggregate function, a normal function, or a procedure. Refer to <a href="./ALTER_AGGREGATE.html">ALTER AGGREGATE</a>, <a href="./ALTER_FUNCTION.html">ALTER FUNCTION</a>, and <a href="./ALTER_PROCEDURE.html">ALTER PROCEDURE</a> for the description of the parameters, more examples, and further details.</p><h2 id="examples" tabindex="-1"><a id="section6"></a>Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;&lt;a id=&quot;section6&quot;&gt;&lt;/a&gt;Examples&quot;">​</a></h2><p>To rename the routine <code>foo</code> for type <code>integer</code> to <code>foobar</code>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER ROUTINE foo(integer) RENAME TO foobar;</span></span></code></pre></div><p>This command will work independent of whether <code>foo</code> is an aggregate, function, or procedure.</p><h2 id="compatibility" tabindex="-1"><a id="section7"></a>Compatibility <a class="header-anchor" href="#compatibility" aria-label="Permalink to &quot;&lt;a id=&quot;section7&quot;&gt;&lt;/a&gt;Compatibility&quot;">​</a></h2><p>This statement is partially compatible with the <code>ALTER ROUTINE</code> statement in the SQL standard. Refer to <a href="./ALTER_FUNCTION.html">ALTER FUNCTION</a> and <a href="./ALTER_PROCEDURE.html">ALTER PROCEDURE</a> for more details. Allowing routine names to refer to aggregate functions is a WarehousePG extension.</p><h2 id="see-also" tabindex="-1"><a id="section8"></a>See Also <a class="header-anchor" href="#see-also" aria-label="Permalink to &quot;&lt;a id=&quot;section8&quot;&gt;&lt;/a&gt;See Also&quot;">​</a></h2><p><a href="./ALTER_AGGREGATE.html">ALTER AGGREGATE</a>, <a href="./ALTER_FUNCTION.html">ALTER FUNCTION</a>, <a href="./ALTER_PROCEDURE.html">ALTER PROCEDURE</a>, <a href="./DROP_ROUTINE.html">DROP ROUTINE</a></p><p><strong>Parent topic:</strong> <a href="./../sql_commands/sql_ref.html">SQL Commands</a></p>`,15)]))}const R=n(p,[["render",l]]);export{T as __pageData,R as default};
