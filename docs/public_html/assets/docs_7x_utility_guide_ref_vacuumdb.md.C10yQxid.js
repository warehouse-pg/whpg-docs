import{_ as a,c as s,o as t,ag as n}from"./chunks/framework.Ds6Eueu6.js";const h=JSON.parse('{"title":"vacuumdb","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/utility_guide/ref/vacuumdb.md","filePath":"docs/7x/utility_guide/ref/vacuumdb.md"}'),o={name:"docs/7x/utility_guide/ref/vacuumdb.md"};function i(c,e,d,l,p,r){return t(),s("div",null,e[0]||(e[0]=[n(`<h1 id="vacuumdb" tabindex="-1">vacuumdb <a class="header-anchor" href="#vacuumdb" aria-label="Permalink to &quot;vacuumdb&quot;">​</a></h1><p>Garbage-collects and analyzes a database.</p><h2 id="synopsis" tabindex="-1"><a id="section2"></a>Synopsis <a class="header-anchor" href="#synopsis" aria-label="Permalink to &quot;&lt;a id=&quot;section2&quot;&gt;&lt;/a&gt;Synopsis&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>vacuumdb [&lt;connection-option&gt;...] [--full | -f] [--freeze | -F] [--verbose | -v]</span></span>
<span class="line"><span>    [--analyze | -z] [--analyze-only | -Z] [--disable-page-skipping] [--skip-locked] [--table | -t &lt;table&gt; [( &lt;column&gt; [,...] )] ] [&lt;dbname&gt;]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>vacuumdb [&lt;connection-option&gt;...] [--all | -a] [--full | -f] [-F] </span></span>
<span class="line"><span>    [--verbose | -v] [--analyze | -z]</span></span>
<span class="line"><span>    [--analyze-only | -Z]</span></span>
<span class="line"><span>    [--disable-page-skipping]</span></span>
<span class="line"><span>    [--skip-locked]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>vacuumdb -? | --help</span></span>
<span class="line"><span></span></span>
<span class="line"><span>vacuumdb -V | --version</span></span></code></pre></div><h2 id="description" tabindex="-1"><a id="section3"></a>Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;&lt;a id=&quot;section3&quot;&gt;&lt;/a&gt;Description&quot;">​</a></h2><p><code>vacuumdb</code> is a utility for cleaning a WarehousePG database. <code>vacuumdb</code> will also generate internal statistics used by the WarehousePG query optimizer.</p><p><code>vacuumdb</code> is a wrapper around the SQL command <code>VACUUM</code>. There is no effective difference between vacuuming databases via this utility and via other methods for accessing the server.</p><h2 id="options" tabindex="-1"><a id="section4"></a>Options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;&lt;a id=&quot;section4&quot;&gt;&lt;/a&gt;Options&quot;">​</a></h2><p>-a | --all : Vacuums all databases.</p><p>[-d] dbname | [--dbname=]dbname : The name of the database to vacuum. If this is not specified and <code>-a</code> (or <code>--all</code>) is not used, the database name is read from the environment variable <code>PGDATABASE</code>. If that is not set, the user name specified for the connection is used.</p><p>-e | --echo : Echo the commands that <code>reindexdb</code> generates and sends to the server.</p><p>-f | --full : Selects a full vacuum, which may reclaim more space, but takes much longer and exclusively locks the table.</p><pre><code>&gt; **Caution** A \`VACUUM FULL\` is not recommended in WarehousePG.
</code></pre><p>-F | --freeze : Freeze row transaction information.</p><p>-q | --quiet : Do not display a response.</p><p>-t table [(column)] | --table= table [(column)] : Clean or analyze this table only. Column names may be specified only in conjunction with the <code>--analyze</code> or <code>--analyze-all</code> options. Multiple tables can be vacuumed by writing multiple <code>-t</code> switches. If you specify columns, you probably have to escape the parentheses from the shell.</p><p>-v | --verbose : Print detailed information during processing.</p><p>-z | --analyze : Collect statistics for use by the query planner.</p><p>-Z | --analyze-only : Only calculate statistics for use by the query planner (no vacuum).</p><p>--disable-page-skipping : Disable all page-skipping behavior.</p><p>--skip-locked : Skip relations that cannot be immediately locked.</p><p>-V | --version : Print the <code>vacuumdb</code> version and exit.</p><p>-? | --help : Show help about <code>vacuumdb</code> command line arguments, and exit.</p><p><strong>Connection Options</strong></p><p>-h host | --host=host : Specifies the host name of the machine on which the WarehousePG coordinator database server is running. If not specified, reads from the environment variable <code>PGHOST</code> or defaults to localhost.</p><p>-p port | --port=port : Specifies the TCP port on which the WarehousePG coordinator database server is listening for connections. If not specified, reads from the environment variable <code>PGPORT</code> or defaults to 5432.</p><p>-U username | --username=username : The database role name to connect as. If not specified, reads from the environment variable <code>PGUSER</code> or defaults to the current system user name.</p><p>-w | --no-password : Never issue a password prompt. If the server requires password authentication and a password is not available by other means such as a <code>.pgpass</code> file, the connection attempt will fail. This option can be useful in batch jobs and scripts where no user is present to enter a password.</p><p>-W | --password : Force a password prompt.</p><p>--maintenance-db=dbname : Specifies the name of the database to connect to discover what other databases should be vacuumed. If not specified, the <code>postgres</code> database will be used, and if that does not exist, <code>template1</code> will be used.</p><h2 id="notes" tabindex="-1"><a id="section6"></a>Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;&lt;a id=&quot;section6&quot;&gt;&lt;/a&gt;Notes&quot;">​</a></h2><p><code>vacuumdb</code> might need to connect several times to the coordinator server, asking for a password each time. It is convenient to have a <code>~/.pgpass</code> file in such cases.</p><h2 id="examples" tabindex="-1"><a id="section7"></a>Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;&lt;a id=&quot;section7&quot;&gt;&lt;/a&gt;Examples&quot;">​</a></h2><p>To clean the database <code>test</code>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>vacuumdb test</span></span></code></pre></div><p>To clean and analyze a database named <code>bigdb</code>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>vacuumdb --analyze bigdb</span></span></code></pre></div><p>To clean a single table <code>foo</code> in a database named <code>mydb</code>, and analyze a single column <code>bar</code> of the table. Note the quotes around the table and column names to escape the parentheses from the shell:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>vacuumdb --analyze --verbose --table &#39;foo(bar)&#39; mydb</span></span></code></pre></div><h2 id="see-also" tabindex="-1"><a id="section8"></a>See Also <a class="header-anchor" href="#see-also" aria-label="Permalink to &quot;&lt;a id=&quot;section8&quot;&gt;&lt;/a&gt;See Also&quot;">​</a></h2><p><a href="./../../ref_guide/sql_commands/VACUUM.html">VACUUM</a>, <a href="./../../ref_guide/sql_commands/ANALYZE.html">ANALYZE</a></p>`,41)]))}const m=a(o,[["render",i]]);export{h as __pageData,m as default};
