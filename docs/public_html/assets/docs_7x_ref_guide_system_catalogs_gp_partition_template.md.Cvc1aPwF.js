import{_ as e,c as a,o,ag as r}from"./chunks/framework.Ds6Eueu6.js";const _=JSON.parse('{"title":"gp_partition_template","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/ref_guide/system_catalogs/gp_partition_template.md","filePath":"docs/7x/ref_guide/system_catalogs/gp_partition_template.md"}'),i={name:"docs/7x/ref_guide/system_catalogs/gp_partition_template.md"};function d(l,t,p,s,n,h){return o(),a("div",null,t[0]||(t[0]=[r('<h1 id="gp-partition-template" tabindex="-1">gp_partition_template <a class="header-anchor" href="#gp-partition-template" aria-label="Permalink to &quot;gp_partition_template&quot;">â€‹</a></h1><p>The <code>gp_partition_template</code> system catalog table describes the relationship between a partitioned table and the sub-partition template defined at each level in the partition hierarchy.</p><blockquote><p><strong>Note</strong> WarehousePG Data supports sub-partition templates only for partitioned tables that you create with the classic syntax.</p></blockquote><p>Each sub-partition template has a dependency on the existence of a template at the next lower level of the hierarchy.</p><table tabindex="0"><thead><tr><th>column</th><th>type</th><th>references</th><th>description</th></tr></thead><tbody><tr><td><code>relid</code></td><td>oid</td><td><a href="./pg_class.html">pg_class</a>.oid</td><td>The object identifier of the root partitioned table.</td></tr><tr><td><code>level</code></td><td>smallint</td><td></td><td>The level of the partition in the hierarchy. The levels are numbered as follows: level <code>0</code> is the root partitioned table itself, level <code>1</code> represents the direct child/children of the root partitioned table, and so forth. The leaf partitions have the highest level number.</td></tr><tr><td><code>template</code></td><td>pg_node_tree</td><td></td><td>Expression representation of the sub-partition template defined for each partition at this level of the hierarchy.</td></tr></tbody></table><p><strong>Parent topic:</strong> <a href="./../system_catalogs/catalog_ref-html.html">System Catalogs Definitions</a></p>',6)]))}const m=e(i,[["render",d]]);export{_ as __pageData,m as default};
