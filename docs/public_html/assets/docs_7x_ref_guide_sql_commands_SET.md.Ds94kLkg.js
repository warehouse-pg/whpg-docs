import{_ as a,c as t,o,ag as s}from"./chunks/framework.Ds6Eueu6.js";const u=JSON.parse('{"title":"SET","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/ref_guide/sql_commands/SET.md","filePath":"docs/7x/ref_guide/sql_commands/SET.md"}'),n={name:"docs/7x/ref_guide/sql_commands/SET.md"};function i(c,e,r,d,l,p){return o(),t("div",null,e[0]||(e[0]=[s(`<h1 id="set" tabindex="-1">SET <a class="header-anchor" href="#set" aria-label="Permalink to &quot;SET&quot;">​</a></h1><p>Changes the value of a run-time WarehousePG configuration parameter.</p><h2 id="synopsis" tabindex="-1"><a id="section2"></a>Synopsis <a class="header-anchor" href="#synopsis" aria-label="Permalink to &quot;&lt;a id=&quot;section2&quot;&gt;&lt;/a&gt;Synopsis&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SET [ SESSION | LOCAL ] &lt;configuration_parameter&gt; { TO | = } { &lt;value&gt; | &#39;&lt;value&gt;&#39; | DEFAULT }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>SET [SESSION | LOCAL] TIME ZONE { &lt;value&gt; | &#39;&lt;value&gt;&#39; |  LOCAL | DEFAULT }</span></span></code></pre></div><h2 id="description" tabindex="-1"><a id="section3"></a>Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;&lt;a id=&quot;section3&quot;&gt;&lt;/a&gt;Description&quot;">​</a></h2><p>The <code>SET</code> command changes server configuration parameters. Any configuration parameter classified as a session parameter can be changed on-the-fly with <code>SET</code>. (Some require superuser privileges to change, and others cannot be changed after server or session start.) <code>SET</code> affects only the value used by the current session.</p><p>If <code>SET</code> or <code>SET SESSION</code> is issued within a transaction that is later cancelled, the effects of the <code>SET</code> command disappear when the transaction is rolled back. Once the surrounding transaction is committed, the effects will persist until the end of the session, unless overridden by another <code>SET</code>.</p><p>The effects of <code>SET LOCAL</code> last only till the end of the current transaction, whether committed or not. A special case is <code>SET</code> followed by <code>SET LOCAL</code> within a single transaction: the <code>SET LOCAL</code> value will be seen until the end of the transaction, but afterwards (if the transaction is committed) the <code>SET</code> value will take effect.</p><p>The effects of <code>SET</code> or <code>SET LOCAL</code> are also canceled by rolling back to a savepoint that is earlier than the command.</p><p>If <code>SET LOCAL</code> is used within a function that includes a <code>SET</code> option for the same configuration parameter (see <a href="./CREATE_FUNCTION.html">CREATE FUNCTION</a>), the effects of the <code>SET LOCAL</code> command disappear at function exit; the value in effect when the function was called is restored anyway. This allows <code>SET LOCAL</code> to be used for dynamic or repeated changes of a parameter within a function, while retaining the convenience of using the <code>SET</code> option to save and restore the caller&#39;s value. Note that a regular <code>SET</code> command overrides any surrounding function&#39;s <code>SET</code> option; its effects persist unless rolled back.</p><p>See <a href="./../config_params/guc_config.html">Server Configuration Parameters</a> for information about server parameters.</p><h2 id="parameters" tabindex="-1"><a id="section4"></a>Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;&lt;a id=&quot;section4&quot;&gt;&lt;/a&gt;Parameters&quot;">​</a></h2><p>SESSION : Specifies that the command takes effect for the current session. This is the default if neither <code>SESSION</code> nor <code>LOCAL</code> appears.</p><p>LOCAL : Specifies that the command takes effect for only the current transaction. After <code>COMMIT</code> or <code>ROLLBACK</code>, the session-level setting takes effect again. Issuing this outside of a transaction block emits a warning and otherwise has no effect.</p><p>configuration_parameter : The name of a settable WarehousePG run-time configuration parameter. Only parameters classified as <em>session</em> can be changed with <code>SET</code>. See <a href="./../config_params/guc_config.html">Server Configuration Parameters</a> for details.</p><p>value : New value of the parameter. Values can be specified as string constants, identifiers, numbers, or comma-separated lists of these, as appropriate for the particular parameter. <code>DEFAULT</code> can be used to specify resetting the parameter to its default value (that is, whatever value it would have had if no <code>SET</code> had been issued in the current session). If specifying memory sizing or time units, enclose the value in single quotes.</p><p>There are a few configuration parameters that can only be adjusted using the <code>SET</code> command or that have a special syntax:</p><p>SCHEMA : <code>SET SCHEMA &#39;&lt;value&gt;&#39;</code> is an alias for <code>SET &lt;search_path&gt; TO &lt;value&gt;</code>. Only one schema may be specified using this syntax.</p><p>NAMES : <code>SET NAMES &lt;value&gt;</code> is an alias for <code>SET client_encoding TO &lt;value&gt;</code>.</p><p>SEED : Sets the internal seed for the random number generator (the function <code>random()</code>). Allowed values are floating-point numbers between -1 and 1 inclusive.</p><p>: You can also set the seed by invoking the <code>setseed()</code> function:</p><pre><code>\`\`\`
SELECT setseed(value);
\`\`\`
</code></pre><p>TIME ZONE : <code>SET TIME ZONE &lt;value&gt;</code> is an alias for <code>SET timezone TO &lt;value&gt;</code>. The syntax <code>SET TIME ZONE</code> allows special syntax for the time zone specification. Examples of valid values follow:</p><pre><code>- \`&#39;PST8PDT&#39;\`
- \`&#39;Europe/Rome&#39;\`
- \`-7\` \\(time zone 7 hours west from UTC\\)
- \`INTERVAL &#39;-08:00&#39; HOUR TO MINUTE\` \\(time zone 8 hours west from UTC\\).

LOCAL
DEFAULT
:   Set the time zone to your local time zone \\(that is, server&#39;s default value of timezone\\).

See the [Time Zones](https://www.postgresql.org/docs/12/datatype-datetime.html#DATATYPE-TIMEZONES) section of the PostgreSQL documentation for more information about time zones in WarehousePG.
</code></pre><h2 id="examples" tabindex="-1"><a id="section5"></a>Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;&lt;a id=&quot;section5&quot;&gt;&lt;/a&gt;Examples&quot;">​</a></h2><p>Set the schema search path:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SET search_path TO my_schema, public;</span></span></code></pre></div><p>Increase the segment host memory per query to 200 MB:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SET statement_mem TO &#39;200MB&#39;;</span></span></code></pre></div><p>Set the style of date to traditional POSTGRES with &quot;day before month&quot; input convention:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SET datestyle TO postgres, dmy;</span></span></code></pre></div><p>Set the time zone for San Mateo, California (Pacific Time):</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SET TIME ZONE &#39;PST8PDT&#39;;</span></span></code></pre></div><p>Set the time zone for Italy:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SET TIME ZONE &#39;Europe/Rome&#39;;</span></span></code></pre></div><h2 id="compatibility" tabindex="-1"><a id="section6"></a>Compatibility <a class="header-anchor" href="#compatibility" aria-label="Permalink to &quot;&lt;a id=&quot;section6&quot;&gt;&lt;/a&gt;Compatibility&quot;">​</a></h2><p><code>SET TIME ZONE</code> extends syntax defined in the SQL standard. The standard allows only numeric time zone offsets while WarehousePG allows more flexible time-zone specifications. All other <code>SET</code> features are WarehousePG extensions.</p><h2 id="see-also" tabindex="-1"><a id="section7"></a>See Also <a class="header-anchor" href="#see-also" aria-label="Permalink to &quot;&lt;a id=&quot;section7&quot;&gt;&lt;/a&gt;See Also&quot;">​</a></h2><p><a href="./RESET.html">RESET</a>, <a href="./SHOW.html">SHOW</a></p><p><strong>Parent topic:</strong> <a href="./../sql_commands/sql_ref.html">SQL Commands</a></p>`,40)]))}const m=a(n,[["render",i]]);export{u as __pageData,m as default};
