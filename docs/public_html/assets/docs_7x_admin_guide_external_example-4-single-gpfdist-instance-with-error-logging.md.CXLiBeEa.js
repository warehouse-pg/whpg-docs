import{_ as a,c as t,o as s,ag as n}from"./chunks/framework.Ds6Eueu6.js";const h=JSON.parse('{"title":"Example 4—Single gpfdist instance with error logging","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/admin_guide/external/example-4-single-gpfdist-instance-with-error-logging.md","filePath":"docs/7x/admin_guide/external/example-4-single-gpfdist-instance-with-error-logging.md"}'),i={name:"docs/7x/admin_guide/external/example-4-single-gpfdist-instance-with-error-logging.md"};function r(o,e,p,l,d,g){return s(),t("div",null,e[0]||(e[0]=[n(`<h1 id="example-4—single-gpfdist-instance-with-error-logging" tabindex="-1">Example 4—Single gpfdist instance with error logging <a class="header-anchor" href="#example-4—single-gpfdist-instance-with-error-logging" aria-label="Permalink to &quot;Example 4—Single gpfdist instance with error logging&quot;">​</a></h1><hr><p>Uses the gpfdist protocol to create a readable external table, <code>ext_expenses,</code> from all files with the <em>txt</em> extension. The column delimiter is a pipe ( | ) and NULL (&#39; &#39;) is a space.</p><p>Access to the external table is single row error isolation mode. Input data formatting errors are captured internally in WarehousePG with a description of the error. See <a href="./../load/topics/g-viewing-bad-rows-in-the-error-table-or-error-log.html">Viewing Bad Rows in the Error Log</a> for information about investigating error rows. You can view the errors, fix the issues, and then reload the rejected data. If the error count on a segment is greater than five (the <code>SEGMENT REJECT LIMIT</code> value), the entire external table operation fails and no rows are processed.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>=# CREATE EXTERNAL TABLE ext_expenses ( name text, </span></span>
<span class="line"><span>   date date, amount float4, category text, desc1 text ) </span></span>
<span class="line"><span>   LOCATION (&#39;gpfdist://etlhost-1:8081/*.txt&#39;, </span></span>
<span class="line"><span>             &#39;gpfdist://etlhost-2:8082/*.txt&#39;)</span></span>
<span class="line"><span>   FORMAT &#39;TEXT&#39; ( DELIMITER &#39;|&#39; NULL &#39; &#39;)</span></span>
<span class="line"><span>   LOG ERRORS SEGMENT REJECT LIMIT 5;</span></span></code></pre></div><p>To create the readable ext_expenses table from CSV-formatted text files:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>=# CREATE EXTERNAL TABLE ext_expenses ( name text, </span></span>
<span class="line"><span>   date date,  amount float4, category text, desc1 text ) </span></span>
<span class="line"><span>   LOCATION (&#39;gpfdist://etlhost-1:8081/*.txt&#39;, </span></span>
<span class="line"><span>             &#39;gpfdist://etlhost-2:8082/*.txt&#39;)</span></span>
<span class="line"><span>   FORMAT &#39;CSV&#39; ( DELIMITER &#39;,&#39; )</span></span>
<span class="line"><span>   LOG ERRORS SEGMENT REJECT LIMIT 5;</span></span></code></pre></div><p><strong>Parent topic:</strong> <a href="./../external/creating-external-tables---examples.html">Examples for Creating External Tables</a></p>`,8)]))}const x=a(i,[["render",r]]);export{h as __pageData,x as default};
