import{_ as a,c as t,o as r,ag as n}from"./chunks/framework.Ds6Eueu6.js";const x=JSON.parse('{"title":"Handling Errors in External Table Data","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/admin_guide/external/handling-errors-ext-table-data.md","filePath":"docs/7x/admin_guide/external/handling-errors-ext-table-data.md"}'),o={name:"docs/7x/admin_guide/external/handling-errors-ext-table-data.md"};function d(l,e,s,i,c,h){return r(),t("div",null,e[0]||(e[0]=[n('<h1 id="handling-errors-in-external-table-data" tabindex="-1">Handling Errors in External Table Data <a class="header-anchor" href="#handling-errors-in-external-table-data" aria-label="Permalink to &quot;Handling Errors in External Table Data&quot;">​</a></h1><hr><p>By default, if external table data contains an error, the command fails and no data loads into the target database table.</p><p>Define the external table with single row error handling to enable loading correctly formatted rows and to isolate data errors in external table data. See <a href="./../load/topics/g-handling-load-errors.html">Handling Load Errors</a>.</p><p>The <code>gpfdist</code> file server uses the <code>HTTP</code> protocol. External table queries that use <code>LIMIT</code> end the connection after retrieving the rows, causing an HTTP socket error. If you use <code>LIMIT</code> in queries of external tables that use the <code>gpfdist://</code> or <code>http:// protocols</code>, ignore these errors – data is returned to the database as expected.</p><p><strong>Parent topic:</strong> <a href="./../external/external-tables.html">Defining External Tables</a></p>',6)]))}const p=a(o,[["render",d]]);export{x as __pageData,p as default};
