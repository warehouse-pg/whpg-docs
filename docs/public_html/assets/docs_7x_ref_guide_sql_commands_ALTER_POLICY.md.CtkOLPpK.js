import{_ as a,c as t,o,ag as s}from"./chunks/framework.Ds6Eueu6.js";const m=JSON.parse('{"title":"ALTER POLICY","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/ref_guide/sql_commands/ALTER_POLICY.md","filePath":"docs/7x/ref_guide/sql_commands/ALTER_POLICY.md"}'),i={name:"docs/7x/ref_guide/sql_commands/ALTER_POLICY.md"};function n(l,e,p,c,r,d){return o(),t("div",null,e[0]||(e[0]=[s(`<h1 id="alter-policy" tabindex="-1">ALTER POLICY <a class="header-anchor" href="#alter-policy" aria-label="Permalink to &quot;ALTER POLICY&quot;">​</a></h1><p>Changes the definition of a row-level security policy.</p><h2 id="synopsis" tabindex="-1"><a id="section2"></a>Synopsis <a class="header-anchor" href="#synopsis" aria-label="Permalink to &quot;&lt;a id=&quot;section2&quot;&gt;&lt;/a&gt;Synopsis&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER POLICY &lt;name&gt; ON &lt;table_name&gt; RENAME TO &lt;new_name&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ALTER POLICY &lt;name ON table_name&gt;</span></span>
<span class="line"><span>    [ TO { &lt;role_name&gt; | PUBLIC | CURRENT_USER | SESSION_USER } [, ...] ]</span></span>
<span class="line"><span>    [ USING ( &lt;using_expression&gt; ) ]</span></span>
<span class="line"><span>    [ WITH CHECK ( &lt;check_expression&gt; ) ]</span></span></code></pre></div><h2 id="description" tabindex="-1"><a id="section3"></a>Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;&lt;a id=&quot;section3&quot;&gt;&lt;/a&gt;Description&quot;">​</a></h2><p><code>ALTER POLICY</code> changes the definition of an existing row-level security policy. Note that <code>ALTER POLICY</code> only allows the set of roles to which the policy applies and the <code>USING</code> and <code>WITH CHECK</code> expressions to be modified. To change other properties of a policy, such as the command to which it applies or whether it is permissive or restrictive, the policy must be dropped and recreated.</p><p>To use <code>ALTER POLICY</code>, you must own the table to which the policy applies.</p><p>In the second form of <code>ALTER POLICY</code>, the role list, using_expression, and check_expression are replaced independently if specified. When one of those clauses is omitted, the corresponding part of the policy is unchanged.</p><h2 id="parameters" tabindex="-1"><a id="section4"></a>Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;&lt;a id=&quot;section4&quot;&gt;&lt;/a&gt;Parameters&quot;">​</a></h2><p>name : The name of an existing policy to alter.</p><p>table_name : The name (optionally schema-qualified) of the table that the policy is on.</p><p>new_name : The new name for the policy.</p><p>role_name : The role(s) to which the policy applies. Multiple roles can be specified at one time. To apply the policy to all roles, use <code>PUBLIC</code>.</p><p>using_expression : The <code>USING</code> expression for the policy. See <a href="./CREATE_POLICY.html">CREATE POLICY</a> for details.</p><p>check_expression : The <code>WITH CHECK</code> expression for the policy. See <a href="./CREATE_POLICY.html">CREATE POLICY</a> for details.</p><h2 id="compatibility" tabindex="-1"><a id="section6"></a>Compatibility <a class="header-anchor" href="#compatibility" aria-label="Permalink to &quot;&lt;a id=&quot;section6&quot;&gt;&lt;/a&gt;Compatibility&quot;">​</a></h2><p><code>ALTER POLICY</code> is a WarehousePG extension to the SQL standard.</p><h2 id="see-also" tabindex="-1"><a id="section7"></a>See Also <a class="header-anchor" href="#see-also" aria-label="Permalink to &quot;&lt;a id=&quot;section7&quot;&gt;&lt;/a&gt;See Also&quot;">​</a></h2><p><a href="./CREATE_POLICY.html">CREATE POLICY</a>, <a href="./DROP_POLICY.html">DROP POLICY</a></p><p><strong>Parent topic:</strong> <a href="./../sql_commands/sql_ref.html">SQL Commands</a></p>`,20)]))}const _=a(i,[["render",n]]);export{m as __pageData,_ as default};
