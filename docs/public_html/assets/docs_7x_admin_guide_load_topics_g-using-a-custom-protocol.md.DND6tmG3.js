import{_ as s,c as e,o as t,ag as o}from"./chunks/framework.Ds6Eueu6.js";const h=JSON.parse('{"title":"Using a Custom Protocol","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/admin_guide/load/topics/g-using-a-custom-protocol.md","filePath":"docs/7x/admin_guide/load/topics/g-using-a-custom-protocol.md"}'),n={name:"docs/7x/admin_guide/load/topics/g-using-a-custom-protocol.md"};function p(i,a,l,c,r,d){return t(),e("div",null,a[0]||(a[0]=[o(`<h1 id="using-a-custom-protocol" tabindex="-1">Using a Custom Protocol <a class="header-anchor" href="#using-a-custom-protocol" aria-label="Permalink to &quot;Using a Custom Protocol&quot;">​</a></h1><hr><p>WarehousePG provides protocols such as gpfdist, <code>http</code>, and <code>file</code> for accessing data over a network, or you can author a custom protocol. You can use the standard data formats, <code>TEXT</code> and <code>CSV</code>, or a custom data format with custom protocols.</p><p>You can create a custom protocol whenever the available built-in protocols do not suffice for a particular need. For example, you could connect WarehousePG in parallel to another system directly, and stream data from one to the other without the need to materialize the data on disk or use an intermediate process such as gpfdist. You must be a superuser to create and register a custom protocol.</p><ol><li><p>Author the send, receive, and (optionally) validator functions in C, with a predefined API. These functions are compiled and registered with the WarehousePG. For an example custom protocol, see <a href="./g-example-custom-data-access-protocol.html">Example Custom Data Access Protocol</a>.</p></li><li><p>After writing and compiling the read and write functions into a shared object (.so), declare a database function that points to the .so file and function names.</p><p>The following examples use the compiled import and export code.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE FUNCTION myread() RETURNS integer</span></span>
<span class="line"><span>as &#39;$libdir/gpextprotocol.so&#39;, &#39;myprot_import&#39;</span></span>
<span class="line"><span>LANGUAGE C STABLE;</span></span>
<span class="line"><span>CREATE FUNCTION mywrite() RETURNS integer</span></span>
<span class="line"><span>as &#39;$libdir/gpextprotocol.so&#39;, &#39;myprot_export&#39;</span></span>
<span class="line"><span>LANGUAGE C STABLE;</span></span></code></pre></div><p>The format of the optional validator function is:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE OR REPLACE FUNCTION myvalidate() RETURNS void </span></span>
<span class="line"><span>AS &#39;$libdir/gpextprotocol.so&#39;, &#39;myprot_validate&#39; </span></span>
<span class="line"><span>LANGUAGE C STABLE;</span></span></code></pre></div></li><li><p>Create a protocol that accesses these functions. <code>Validatorfunc</code> is optional.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE TRUSTED PROTOCOL myprot(</span></span>
<span class="line"><span>writefunc=&#39;mywrite&#39;,</span></span>
<span class="line"><span>readfunc=&#39;myread&#39;, </span></span>
<span class="line"><span>validatorfunc=&#39;myvalidate&#39;);</span></span></code></pre></div></li><li><p>Grant access to any other users, as necessary.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>GRANT ALL ON PROTOCOL myprot TO otheruser;</span></span></code></pre></div></li><li><p>Use the protocol in readable or writable external tables.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE WRITABLE EXTERNAL TABLE ext_sales(LIKE sales)</span></span>
<span class="line"><span>LOCATION (&#39;myprot://&lt;meta&gt;/&lt;meta&gt;/…&#39;)</span></span>
<span class="line"><span>FORMAT &#39;TEXT&#39;;</span></span>
<span class="line"><span>CREATE READABLE EXTERNAL TABLE ext_sales(LIKE sales)</span></span>
<span class="line"><span>LOCATION(&#39;myprot://&lt;meta&gt;/&lt;meta&gt;/…&#39;)</span></span>
<span class="line"><span>FORMAT &#39;TEXT&#39;;</span></span></code></pre></div></li></ol><p>Declare custom protocols with the SQL command <code>CREATE TRUSTED PROTOCOL</code>, then use the <code>GRANT</code> command to grant access to your users. For example:</p><ul><li><p>Allow a user to create a readable external table with a trusted protocol</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>GRANT SELECT ON PROTOCOL &lt;protocol name&gt; TO &lt;user name&gt;;</span></span></code></pre></div></li><li><p>Allow a user to create a writable external table with a trusted protocol</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>GRANT INSERT ON PROTOCOL &lt;protocol name&gt; TO &lt;user name&gt;;</span></span></code></pre></div></li><li><p>Allow a user to create readable and writable external tables with a trusted protocol</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>GRANT ALL ON PROTOCOL &lt;protocol name&gt; TO &lt;user name&gt;;</span></span></code></pre></div></li></ul><p><strong>Parent topic:</strong> <a href="./../../load/topics/g-loading-and-writing-non-hdfs-custom-data.html">Loading and Writing Non-HDFS Custom Data</a></p>`,8)]))}const m=s(n,[["render",p]]);export{h as __pageData,m as default};
