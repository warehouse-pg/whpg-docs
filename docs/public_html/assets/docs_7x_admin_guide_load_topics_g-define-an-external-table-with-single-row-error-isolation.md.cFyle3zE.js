import{_ as a,c as n,o as t,ag as s}from"./chunks/framework.Ds6Eueu6.js";const h=JSON.parse('{"title":"Define an External Table with Single Row Error Isolation","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/admin_guide/load/topics/g-define-an-external-table-with-single-row-error-isolation.md","filePath":"docs/7x/admin_guide/load/topics/g-define-an-external-table-with-single-row-error-isolation.md"}'),o={name:"docs/7x/admin_guide/load/topics/g-define-an-external-table-with-single-row-error-isolation.md"};function r(i,e,l,p,d,c){return t(),n("div",null,e[0]||(e[0]=[s(`<h1 id="define-an-external-table-with-single-row-error-isolation" tabindex="-1">Define an External Table with Single Row Error Isolation <a class="header-anchor" href="#define-an-external-table-with-single-row-error-isolation" aria-label="Permalink to &quot;Define an External Table with Single Row Error Isolation&quot;">​</a></h1><hr><p>The following example logs errors internally in WarehousePG and sets an error threshold of 10 errors.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>=# CREATE EXTERNAL TABLE ext_expenses ( name text, </span></span>
<span class="line"><span>   date date,  amount float4, category text, desc1 text ) </span></span>
<span class="line"><span>   LOCATION (&#39;gpfdist://etlhost-1:8081/*&#39;, </span></span>
<span class="line"><span>             &#39;gpfdist://etlhost-2:8082/*&#39;)</span></span>
<span class="line"><span>   FORMAT &#39;TEXT&#39; (DELIMITER &#39;|&#39;)</span></span>
<span class="line"><span>   LOG ERRORS SEGMENT REJECT LIMIT 10 </span></span>
<span class="line"><span>     ROWS;</span></span></code></pre></div><p>Use the built-in SQL function <code>gp_read_error_log(&#39;external_table&#39;)</code> to read the error log data. This example command displays the log errors for <em>ext_expenses</em>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SELECT gp_read_error_log(&#39;ext_expenses&#39;);</span></span></code></pre></div><p>For information about the format of the error log, see <a href="./g-viewing-bad-rows-in-the-error-table-or-error-log.html">Viewing Bad Rows in the Error Log</a>.</p><p>The built-in SQL function <code>gp_truncate_error_log(&#39;external_table&#39;)</code> deletes the error data. This example deletes the error log data created from the previous external table example :</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SELECT gp_truncate_error_log(&#39;ext_expenses&#39;);</span></span></code></pre></div><p><strong>Parent topic:</strong> <a href="./../../load/topics/g-handling-load-errors.html">Handling Load Errors</a></p>`,10)]))}const _=a(o,[["render",r]]);export{h as __pageData,_ as default};
