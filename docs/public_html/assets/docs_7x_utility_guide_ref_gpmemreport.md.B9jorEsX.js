import{_ as a,c as t,o as s,ag as n}from"./chunks/framework.Ds6Eueu6.js";const h=JSON.parse('{"title":"gpmemreport","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/utility_guide/ref/gpmemreport.md","filePath":"docs/7x/utility_guide/ref/gpmemreport.md"}'),p={name:"docs/7x/utility_guide/ref/gpmemreport.md"};function i(o,e,r,l,c,d){return s(),t("div",null,e[0]||(e[0]=[n(`<h1 id="gpmemreport" tabindex="-1">gpmemreport <a class="header-anchor" href="#gpmemreport" aria-label="Permalink to &quot;gpmemreport&quot;">​</a></h1><p>Interprets the output created by the <a href="./gpmemwatcher.html">gpmemwatcher</a> utility and generates output files in a readable format.</p><h2 id="synopsis" tabindex="-1"><a id="section2"></a>Synopsis <a class="header-anchor" href="#synopsis" aria-label="Permalink to &quot;&lt;a id=&quot;section2&quot;&gt;&lt;/a&gt;Synopsis&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>gpmemreport [&lt;GZIP_FILE&gt;] [[-s &lt;START&gt;] | [--start= &lt;START&gt;]] [[-e &lt;END&gt;] | [--end= &lt;END&gt;]] </span></span>
<span class="line"><span>        </span></span>
<span class="line"><span>gpmemreport --version</span></span>
<span class="line"><span></span></span>
<span class="line"><span>gpmemreport -h | --help</span></span></code></pre></div><h2 id="description" tabindex="-1"><a id="section3"></a>Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;&lt;a id=&quot;section3&quot;&gt;&lt;/a&gt;Description&quot;">​</a></h2><p>The <code>gpmemreport</code> utility helps interpret the output file created by the <a href="./gpmemwatcher.html">gpmemwatcher</a> utility.</p><p>When running <code>gpmemreport</code> against the <code>.gz</code> files generated by <code>gpmemwatcher</code>, it generates a series of files, where each file corresponds to a 60 second period of data collected by <code>gpmemwatcher</code> converted into a readable format.</p><h2 id="options" tabindex="-1"><a id="section4"></a>Options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;&lt;a id=&quot;section4&quot;&gt;&lt;/a&gt;Options&quot;">​</a></h2><p>-s | --start start_time : Indicates the start of the reporting period. Timestamp format must be <code>&#39;%Y-%m-%d %H:%M:%S&#39;</code>.</p><p>-e | --end end_time : Indicates the end of the reporting period. Timestamp format must be <code>&#39;%Y-%m-%d %H:%M:%S&#39;</code>.</p><p>--version : Displays the version of this utility.</p><p>-h | --help : Displays the online help.</p><h2 id="examples" tabindex="-1"><a id="section5"></a>Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;&lt;a id=&quot;section5&quot;&gt;&lt;/a&gt;Examples&quot;">​</a></h2><p><strong>Example 1: Extract all the files generated by <code>gpmemwatcher</code> for the WarehousePG coordinator</strong></p><p>Locate the output <code>.gz</code> file from <code>gpmemwatcher</code> and run <code>gpmemreport</code> against it:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ gpmemreport cdw.ps.out.gz</span></span>
<span class="line"><span>&gt;&gt;&gt;21:11:19:15:37:18&lt;&lt;&lt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt;&gt;&gt;21:11:19:15:38:18&lt;&lt;&lt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt;&gt;&gt;21:11:19:15:39:18&lt;&lt;&lt;</span></span></code></pre></div><p>Check that the generated files are listed under the current directory:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ ls -thrl</span></span>
<span class="line"><span>-rw-rw-r--. 1 gpadmin gpadmin 1.2K Nov 19 15:50 20211119-153718</span></span>
<span class="line"><span>-rw-rw-r--. 1 gpadmin gpadmin 1.2K Nov 19 15:50 20211119-153818</span></span>
<span class="line"><span>-rw-rw-r--. 1 gpadmin gpadmin 1.2K Nov 19 15:50 20211119-153918</span></span></code></pre></div><p><strong>Example 2: Extract the files generated by <code>gpmemwatcher</code> for the WarehousePG coordinator starting after a certain timestamp</strong></p><p>Locate the output <code>.gz</code> file from <code>gpmemwatcher</code> and run <code>gpmemreport</code> against it, indicating the start time as <code>2021-11-19 15:38:00</code>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ gpmemreport cdw.ps.out.gz --start=&#39;2021-11-19 15:38:00&#39;</span></span>
<span class="line"><span>&gt;&gt;&gt;21:11:19:15:37:18&lt;&lt;&lt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt;&gt;&gt;21:11:19:15:38:18&lt;&lt;&lt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt;&gt;&gt;21:11:19:15:39:18&lt;&lt;&lt;</span></span></code></pre></div><p>Check under the current directory that only the selected timestamp files are listed:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ ls -thrl</span></span>
<span class="line"><span>-rw-rw-r--. 1 gpadmin gpadmin 1.2K Nov 19 15:50 20211119-153818</span></span>
<span class="line"><span>-rw-rw-r--. 1 gpadmin gpadmin 1.2K Nov 19 15:50 20211119-153918</span></span></code></pre></div><h2 id="see-also" tabindex="-1"><a id="section6"></a>See Also <a class="header-anchor" href="#see-also" aria-label="Permalink to &quot;&lt;a id=&quot;section6&quot;&gt;&lt;/a&gt;See Also&quot;">​</a></h2><p><a href="./gpmemwatcher.html">gpmemwatcher</a></p>`,25)]))}const m=a(p,[["render",i]]);export{h as __pageData,m as default};
