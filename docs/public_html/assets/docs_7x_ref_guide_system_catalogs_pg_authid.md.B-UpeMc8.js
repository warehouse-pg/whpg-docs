import{_ as e,c as d,o,ag as a}from"./chunks/framework.Ds6Eueu6.js";const u=JSON.parse('{"title":"pg_authid","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/ref_guide/system_catalogs/pg_authid.md","filePath":"docs/7x/ref_guide/system_catalogs/pg_authid.md"}'),r={name:"docs/7x/ref_guide/system_catalogs/pg_authid.md"};function s(i,t,c,l,n,h){return o(),d("div",null,t[0]||(t[0]=[a('<h1 id="pg-authid" tabindex="-1">pg_authid <a class="header-anchor" href="#pg-authid" aria-label="Permalink to &quot;pg_authid&quot;">â€‹</a></h1><p>The <code>pg_authid</code> table contains information about database authorization identifiers (roles). A role subsumes the concepts of users and groups. A user is a role with the <code>rolcanlogin</code> flag set. Any role (with or without <code>rolcanlogin</code>) may have other roles as members. See <a href="./pg_auth_members.html">pg_auth_members</a>.</p><p>Since this catalog contains passwords, it must not be publicly readable. <a href="./pg_roles.html">pg_roles</a> is a publicly readable view on <code>pg_authid</code> that blanks out the password field.</p><p>Because user identities are system-wide, <code>pg_authid</code> is shared across all databases in a WarehousePG cluster: there is only one copy of <code>pg_authid</code> per system, not one per database.</p><table tabindex="0"><thead><tr><th>column</th><th>type</th><th>references</th><th>description</th></tr></thead><tbody><tr><td><code>oid</code></td><td>oid</td><td></td><td>Row identifier</td></tr><tr><td><code>rolname</code></td><td>name</td><td></td><td>Role name</td></tr><tr><td><code>rolsuper</code></td><td>boolean</td><td></td><td>Role has superuser privileges</td></tr><tr><td><code>rolinherit</code></td><td>boolean</td><td></td><td>Role automatically inherits privileges of roles it is a member of</td></tr><tr><td><code>rolcreaterole</code></td><td>boolean</td><td></td><td>Role may create more roles</td></tr><tr><td><code>rolcreatedb</code></td><td>boolean</td><td></td><td>Role may create databases</td></tr><tr><td><code>rolcanlogin</code></td><td>boolean</td><td></td><td>Role may log in. That is, this role can be given as the initial session authorization identifier</td></tr><tr><td><code>rolreplication</code></td><td>boolean</td><td></td><td>Role is a replication role. That is, this role can initiate streaming replication and set/unset the system backup mode using <code>pg_start_backup</code> and <code>pg_stop_backup</code>.</td></tr><tr><td><code>rolbypassrls</code></td><td>boolean</td><td></td><td>Roles bypasses every row-level security policy.</td></tr><tr><td><code>rolconnlimit</code></td><td>int4</td><td></td><td>For roles that can log in, this sets maximum number of concurrent connections this role can make. <code>-1</code> means no limit</td></tr><tr><td><code>rolpassword</code></td><td>text</td><td></td><td>Password (possibly encrypted); NULL if none. If the password is encrypted, this column will begin with the string <code>md5</code> followed by a 32-character hexadecimal MD5 hash. The MD5 hash will be the user&#39;s password concatenated to their user name. For example, if user <code>joe</code> has password <code>xyzzy</code>, WarehousePG will store the md5 hash of <code>xyzzyjoe</code>. WarehousePG assumes that a password that does not follow that format is unencrypted.</td></tr><tr><td><code>rolvaliduntil</code></td><td>timestamptz</td><td></td><td>Password expiry time (only used for password authentication); NULL if no expiration</td></tr><tr><td><code>rolresqueue</code></td><td>oid</td><td></td><td>Object ID of the associated resource queue ID in <em>pg_resqueue</em></td></tr><tr><td><code>rolcreaterextgpfd</code></td><td>boolean</td><td></td><td>Privilege to create read external tables with the <code>gpfdist</code> or <code>gpfdists</code> protocol</td></tr><tr><td><code>rolcreaterexhttp</code></td><td>boolean</td><td></td><td>Privilege to create read external tables with the <code>http</code> protocol</td></tr><tr><td><code>rolcreatewextgpfd</code></td><td>boolean</td><td></td><td>Privilege to create write external tables with the <code>gpfdist</code> or <code>gpfdists</code> protocol</td></tr><tr><td><code>rolresgroup</code></td><td>oid</td><td></td><td>Object ID of the associated resource group ID in <em>pg_resgroup</em></td></tr></tbody></table><p><strong>Parent topic:</strong> <a href="./../system_catalogs/catalog_ref-html.html">System Catalogs Definitions</a></p>',6)]))}const m=e(r,[["render",s]]);export{u as __pageData,m as default};
