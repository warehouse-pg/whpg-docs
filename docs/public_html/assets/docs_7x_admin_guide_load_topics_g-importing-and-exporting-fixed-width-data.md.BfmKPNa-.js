import{_ as a,c as t,o as i,ag as n}from"./chunks/framework.Ds6Eueu6.js";const f=JSON.parse('{"title":"Importing and Exporting Fixed Width Data","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/admin_guide/load/topics/g-importing-and-exporting-fixed-width-data.md","filePath":"docs/7x/admin_guide/load/topics/g-importing-and-exporting-fixed-width-data.md"}'),o={name:"docs/7x/admin_guide/load/topics/g-importing-and-exporting-fixed-width-data.md"};function s(d,e,l,p,r,c){return i(),t("div",null,e[0]||(e[0]=[n(`<h1 id="importing-and-exporting-fixed-width-data" tabindex="-1">Importing and Exporting Fixed Width Data <a class="header-anchor" href="#importing-and-exporting-fixed-width-data" aria-label="Permalink to &quot;Importing and Exporting Fixed Width Data&quot;">â€‹</a></h1><hr><p>Each column/field in fixed-width text data contains a certain number of character positions. Use a WarehousePG custom format for fixed-width data by specifying the built-in formatter functions <code>fixedwith_in</code> (read) and <code>fixedwidth_out</code> (write).</p><p>The following example creates an external table that specifies the <code>file</code> protocol and references a directory. When the external table is <code>SELECT</code>ed, WarehousePG invokes the <code>fixedwidth_in</code> formatter function to format the data.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE READABLE EXTERNAL TABLE students (</span></span>
<span class="line"><span>    name varchar(20), address varchar(30), age int)</span></span>
<span class="line"><span>LOCATION (&#39;file://&lt;host&gt;/file/path/&#39;)</span></span>
<span class="line"><span>FORMAT &#39;CUSTOM&#39; (formatter=fixedwidth_in, name=&#39;20&#39;, address=&#39;30&#39;, age=&#39;4&#39;);</span></span></code></pre></div><p>The following options specify how to import fixed width data.</p><ul><li><p>Read all the data.</p><p>To load all of the fields on a line of fixed-width data, you must load them in their physical order. You must specify <code>&lt;field_name&gt;=&lt;field_lenth&gt;</code> for each field; you cannot specify a starting and ending position. The field names that you specify in the <code>FORMAT</code> options must match the order in which you define the columns in the <code>CREATE EXTERNAL TABLE</code> command.</p></li><li><p>Set options for blank and null characters.</p><p>Trailing blanks are trimmed by default. To keep trailing blanks, use the <code>preserve_blanks=on</code> option. You can reset the trailing blanks option back to the default by specifying the <code>preserve_blanks=off</code> option.</p><p>Use the <code>null=&#39;null_string_value&#39;</code> option to specify a value for null characters.</p></li><li><p>If you specify <code>preserve_blanks=on</code>, you must also define a value for null characters.</p></li><li><p>If you specify <code>preserve_blanks=off</code>, null is not defined, and the field contains only blanks, WarehousePG writes a null to the table. If null is defined, WarehousePG writes an empty string to the table.</p><p>Use the <code>line_delim=&#39;line_ending&#39;</code> option to specify the line ending character. The following examples cover most cases. The <code>E</code> specifies an escape string constant.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>line_delim=E&#39;\\n&#39;</span></span>
<span class="line"><span>line_delim=E&#39;\\r&#39;</span></span>
<span class="line"><span>line_delim=E&#39;\\r\\n&#39;</span></span>
<span class="line"><span>line_delim=&#39;abc&#39;</span></span></code></pre></div></li></ul><p><strong>Parent topic:</strong> <a href="./../../load/topics/g-using-a-custom-format.html">Using a Custom Format</a></p>`,8)]))}const u=a(o,[["render",s]]);export{f as __pageData,u as default};
