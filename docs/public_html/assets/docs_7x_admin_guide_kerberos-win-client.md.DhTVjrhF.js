import{_ as s,c as a,o as n,ag as i}from"./chunks/framework.Ds6Eueu6.js";const u=JSON.parse('{"title":"Configuring Kerberos For Windows Clients","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/admin_guide/kerberos-win-client.md","filePath":"docs/7x/admin_guide/kerberos-win-client.md"}'),t={name:"docs/7x/admin_guide/kerberos-win-client.md"};function o(p,e,l,c,r,d){return n(),a("div",null,e[0]||(e[0]=[i(`<h1 id="configuring-kerberos-for-windows-clients" tabindex="-1">Configuring Kerberos For Windows Clients <a class="header-anchor" href="#configuring-kerberos-for-windows-clients" aria-label="Permalink to &quot;Configuring Kerberos For Windows Clients&quot;">​</a></h1><hr><p>You can configure Microsoft Windows client applications to connect to a WarehousePG cluster that is configured to authenticate with Kerberos.</p><p>When a WarehousePG cluster is configured to authenticate with Kerberos, you can configure Kerberos authentication for the WarehousePG client utilities <code>gpload</code> and <code>psql</code> on a Microsoft Windows system. The WarehousePG clients authenticate with Kerberos directly.</p><p>This section contains the following information.</p><ul><li><a href="#topic_win_kerberos_install">Installing and Configuring Kerberos on a Windows System</a></li><li><a href="#topic_win_psql_kerb">Running the psql Utility</a></li><li><a href="#topic_win_gpload_kerb">Example gpload YAML File</a></li><li><a href="#topic_win_keytab">Creating a Kerberos Keytab File</a></li><li><a href="#topic_win_kerberos_issues">Issues and Possible Solutions</a></li></ul><p>These topics assume that the WarehousePG cluster is configured to authenticate with Kerberos. For information about configuring WarehousePG with Kerberos authentication, refer to <a href="./kerberos.html">Using Kerberos Authentication</a>.</p><p><strong>Parent topic:</strong> <a href="./client_auth.html">Configuring Client Authentication</a></p><h2 id="installing-and-configuring-kerberos-on-a-windows-system" tabindex="-1"><a id="topic_win_kerberos_install"></a>Installing and Configuring Kerberos on a Windows System <a class="header-anchor" href="#installing-and-configuring-kerberos-on-a-windows-system" aria-label="Permalink to &quot;&lt;a id=&quot;topic_win_kerberos_install&quot;&gt;&lt;/a&gt;Installing and Configuring Kerberos on a Windows System&quot;">​</a></h2><p>The <code>kinit</code>, <code>kdestroy</code>, and <code>klist</code> MIT Kerberos Windows client programs and supporting libraries are installed on your system when you install the WarehousePG Client and Load Tools package:</p><ul><li><code>kinit</code> - generate a Kerberos ticket</li><li><code>kdestroy</code> - destroy active Kerberos tickets</li><li><code>klist</code> - list Kerberos tickets</li></ul><p>You must configure Kerberos on the Windows client to authenticate with WarehousePG:</p><ol><li><p>Copy the Kerberos configuration file <code>/etc/krb5.conf</code> from the WarehousePG coordinator to the Windows system, rename it to <code>krb5.ini</code>, and place it in the default Kerberos location on the Windows system, <code>C:\\ProgramData\\MIT\\Kerberos5\\krb5.ini</code>. This directory may be hidden. This step requires administrative privileges on the Windows client system. You may also choose to place the <code>/etc/krb5.ini</code> file in a custom location. If you choose to do this, you must configure and set a system environment variable named <code>KRB5_CONFIG</code> to the custom location.</p></li><li><p>Locate the <code>[libdefaults]</code> section of the <code>krb5.ini</code> file, and remove the entry identifying the location of the Kerberos credentials cache file, <code>default_ccache_name</code>. This step requires administrative privileges on the Windows client system.</p><p>This is an example configuration file with <code>default_ccache_name</code> removed. The <code>[logging]</code> section is also removed.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[libdefaults]</span></span>
<span class="line"><span> debug = true</span></span>
<span class="line"><span> default_etypes = aes256-cts-hmac-sha1-96</span></span>
<span class="line"><span> default_realm = EXAMPLE.LOCAL</span></span>
<span class="line"><span> dns_lookup_realm = false</span></span>
<span class="line"><span> dns_lookup_kdc = false</span></span>
<span class="line"><span> ticket_lifetime = 24h</span></span>
<span class="line"><span> renew_lifetime = 7d</span></span>
<span class="line"><span> forwardable = true</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[realms]</span></span>
<span class="line"><span> EXAMPLE.LOCAL = {</span></span>
<span class="line"><span>  kdc =bocdc.example.local</span></span>
<span class="line"><span>  admin_server = bocdc.example.local</span></span>
<span class="line"><span> }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[domain_realm]</span></span>
<span class="line"><span> .example.local = EXAMPLE.LOCAL</span></span>
<span class="line"><span> example.local = EXAMPLE.LOCAL</span></span></code></pre></div></li><li><p>Set up the Kerberos credential cache file. On the Windows system, set the environment variable <code>KRB5CCNAME</code> to specify the file system location of the cache file. The file must be named <code>krb5cache</code>. This location identifies a file, not a directory, and should be unique to each login on the server. When you set <code>KRB5CCNAME</code>, you can specify the value in either a local user environment or within a session. For example, the following command sets <code>KRB5CCNAME</code> in the session:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>set KRB5CCNAME=%USERPROFILE%\\krb5cache</span></span></code></pre></div></li><li><p>Obtain your Kerberos principal and password or keytab file from your system administrator.</p></li><li><p>Generate a Kerberos ticket using a password or a keytab. For example, to generate a ticket using a password:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>kinit [&lt;principal&gt;]</span></span></code></pre></div><p>To generate a ticket using a keytab (as described in <a href="#topic_win_keytab">Creating a Kerberos Keytab File</a>):</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>kinit -k -t &lt;keytab_filepath&gt; [&lt;principal&gt;]</span></span></code></pre></div></li><li><p>Set up the WarehousePG clients environment:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>set PGGSSLIB=gssapi</span></span>
<span class="line"><span>&quot;c:\\Program Files\\WarehousePG\\greenplum-clients\\greenplum_clients_path.bat&quot;</span></span></code></pre></div></li></ol><h2 id="running-the-psql-utility" tabindex="-1"><a id="topic_win_psql_kerb"></a>Running the psql Utility <a class="header-anchor" href="#running-the-psql-utility" aria-label="Permalink to &quot;&lt;a id=&quot;topic_win_psql_kerb&quot;&gt;&lt;/a&gt;Running the psql Utility&quot;">​</a></h2><p>After you configure Kerberos and generate the Kerberos ticket on a Windows system, you can run the WarehousePG command line client <code>psql</code>.</p><p>If you get warnings indicating that the Console code page differs from Windows code page, you can run the Windows utility <code>chcp</code> to change the code page. This is an example of the warning and fix:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>psql -h prod1.example.local warehouse</span></span>
<span class="line"><span>psql (9.4.20)</span></span>
<span class="line"><span>WARNING: Console code page (850) differs from Windows code page (1252)</span></span>
<span class="line"><span> 8-bit characters might not work correctly. See psql reference</span></span>
<span class="line"><span> page &quot;Notes for Windows users&quot; for details.</span></span>
<span class="line"><span>Type &quot;help&quot; for help.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>warehouse=# \\q</span></span>
<span class="line"><span></span></span>
<span class="line"><span>chcp 1252</span></span>
<span class="line"><span>Active code page: 1252</span></span>
<span class="line"><span></span></span>
<span class="line"><span>psql -h prod1.example.local warehouse</span></span>
<span class="line"><span>psql (9.4.20)</span></span>
<span class="line"><span>Type &quot;help&quot; for help.</span></span></code></pre></div><h2 id="creating-a-kerberos-keytab-file" tabindex="-1"><a id="topic_win_keytab"></a>Creating a Kerberos Keytab File <a class="header-anchor" href="#creating-a-kerberos-keytab-file" aria-label="Permalink to &quot;&lt;a id=&quot;topic_win_keytab&quot;&gt;&lt;/a&gt;Creating a Kerberos Keytab File&quot;">​</a></h2><p>You can create and use a Kerberos <code>keytab</code> file to avoid entering a password at the command line or listing a password in a script file when you connect to a WarehousePG cluster, perhaps when automating a scheduled WarehousePG task such as <code>gpload</code>. You can create a keytab file with the Java JRE keytab utility <code>ktab</code>. If you use AES256-CTS-HMAC-SHA1-96 encryption, you need to download and install the Java extension <em>Java Cryptography Extension (JCE) Unlimited Strength Jurisdiction Policy Files for JDK/JRE</em> from Oracle.</p><blockquote><p><strong>Note</strong> You must enter the password to create a keytab file. The password is visible onscreen as you enter it.</p></blockquote><p>This example runs the Java <code>ktab.exe</code> program to create a keytab file (<code>-a</code> option) and list the keytab name and entries (<code>-l</code> <code>-e</code> <code>-t</code> options).</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>C:\\Users\\dev1&gt;&quot;\\Program Files\\Java\\jre1.8.0_77\\bin&quot;\\ktab -a dev1</span></span>
<span class="line"><span>Password for dev1@EXAMPLE.LOCAL:&lt;your_password&gt;</span></span>
<span class="line"><span>Done!</span></span>
<span class="line"><span>Service key for dev1 is saved in C:\\Users\\dev1\\krb5.keytab</span></span>
<span class="line"><span></span></span>
<span class="line"><span>C:\\Users\\dev1&gt;&quot;\\Program Files\\Java\\jre1.8.0_77\\bin&quot;\\ktab -l -e -t</span></span>
<span class="line"><span>Keytab name: C:\\Users\\dev1\\krb5.keytab</span></span>
<span class="line"><span>KVNO Timestamp Principal</span></span>
<span class="line"><span>---- -------------- ------------------------------------------------------</span></span>
<span class="line"><span> 4 13/04/16 19:14 dev1@EXAMPLE.LOCAL (18:AES256 CTS mode with HMAC SHA1-96)</span></span>
<span class="line"><span> 4 13/04/16 19:14 dev1@EXAMPLE.LOCAL (17:AES128 CTS mode with HMAC SHA1-96)</span></span>
<span class="line"><span> 4 13/04/16 19:14 dev1@EXAMPLE.LOCAL (16:DES3 CBC mode with SHA1-KD)</span></span>
<span class="line"><span> 4 13/04/16 19:14 dev1@EXAMPLE.LOCAL (23:RC4 with HMAC)</span></span></code></pre></div><p>You can then generate a Kerberos ticket using a keytab with the following command:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>kinit -kt dev1.keytab dev1</span></span></code></pre></div><p>or</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>kinit -kt %USERPROFILE%\\krb5.keytab dev1</span></span></code></pre></div><h2 id="example-gpload-yaml-file" tabindex="-1"><a id="topic_win_gpload_kerb"></a>Example gpload YAML File <a class="header-anchor" href="#example-gpload-yaml-file" aria-label="Permalink to &quot;&lt;a id=&quot;topic_win_gpload_kerb&quot;&gt;&lt;/a&gt;Example gpload YAML File&quot;">​</a></h2><p>When you initiate a <code>gpload</code> job to a WarehousePG cluster using Kerberos authentication, you omit the <code>USER:</code> property and value from the YAML control file.</p><p>This example <code>gpload</code> YAML control file named <code>test.yaml</code> does not include a <code>USER:</code> entry:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>---</span></span>
<span class="line"><span>VERSION: 1.0.0.1</span></span>
<span class="line"><span>DATABASE: warehouse</span></span>
<span class="line"><span>HOST: prod1.example.local</span></span>
<span class="line"><span>PORT: 5432</span></span>
<span class="line"><span></span></span>
<span class="line"><span>GPLOAD:</span></span>
<span class="line"><span>   INPUT:</span></span>
<span class="line"><span>    - SOURCE:</span></span>
<span class="line"><span>         PORT_RANGE: [18080,18080]</span></span>
<span class="line"><span>         FILE:</span></span>
<span class="line"><span>           - /Users/dev1/Downloads/test.csv</span></span>
<span class="line"><span>    - FORMAT: text</span></span>
<span class="line"><span>    - DELIMITER: &#39;,&#39;</span></span>
<span class="line"><span>    - QUOTE: &#39;&quot;&#39;</span></span>
<span class="line"><span>    - ERROR_LIMIT: 25</span></span>
<span class="line"><span>    - LOG_ERRORS: true</span></span>
<span class="line"><span>   OUTPUT:</span></span>
<span class="line"><span>    - TABLE: public.test</span></span>
<span class="line"><span>    - MODE: INSERT</span></span>
<span class="line"><span>   PRELOAD:</span></span>
<span class="line"><span>    - REUSE_TABLES: true</span></span></code></pre></div><p>These commands run <code>kinit</code> using a keytab file, run <code>gpload.bat</code> with the <code>test.yaml</code> file, and then display successful <code>gpload</code> output.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>kinit -kt %USERPROFILE%\\krb5.keytab dev1</span></span>
<span class="line"><span></span></span>
<span class="line"><span>gpload.bat -f test.yaml</span></span>
<span class="line"><span>2016-04-10 16:54:12|INFO|gpload session started 2016-04-10 16:54:12</span></span>
<span class="line"><span>2016-04-10 16:54:12|INFO|started gpfdist -p 18080 -P 18080 -f &quot;/Users/dev1/Downloads/test.csv&quot; -t 30</span></span>
<span class="line"><span>2016-04-10 16:54:13|INFO|running time: 0.23 seconds</span></span>
<span class="line"><span>2016-04-10 16:54:13|INFO|rows Inserted = 3</span></span>
<span class="line"><span>2016-04-10 16:54:13|INFO|rows Updated = 0</span></span>
<span class="line"><span>2016-04-10 16:54:13|INFO|data formatting errors = 0</span></span>
<span class="line"><span>2016-04-10 16:54:13|INFO|gpload succeeded</span></span></code></pre></div><h2 id="issues-and-possible-solutions" tabindex="-1"><a id="topic_win_kerberos_issues"></a>Issues and Possible Solutions <a class="header-anchor" href="#issues-and-possible-solutions" aria-label="Permalink to &quot;&lt;a id=&quot;topic_win_kerberos_issues&quot;&gt;&lt;/a&gt;Issues and Possible Solutions&quot;">​</a></h2><ul><li><p>This message indicates that Kerberos cannot find your Kerberos credentials cache file:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Credentials cache I/O operation failed XXX</span></span>
<span class="line"><span>(Kerberos error 193)</span></span>
<span class="line"><span>krb5_cc_default() failed</span></span></code></pre></div><p>To ensure that Kerberos can find the file, set the environment variable <code>KRB5CCNAME</code> and run <code>kinit</code>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>set KRB5CCNAME=%USERPROFILE%\\krb5cache</span></span>
<span class="line"><span>kinit</span></span></code></pre></div></li><li><p>This <code>kinit</code> message indicates that the <code>kinit -k -t</code> command could not find the keytab.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>kinit: Generic preauthentication failure while getting initial credentials</span></span></code></pre></div><p>Confirm that the full path and filename for the Kerberos keytab file is correct.</p></li></ul>`,34)]))}const g=s(t,[["render",o]]);export{u as __pageData,g as default};
