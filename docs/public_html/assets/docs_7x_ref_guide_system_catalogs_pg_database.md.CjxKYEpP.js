import{_ as e,c as d,o as a,ag as o}from"./chunks/framework.Ds6Eueu6.js";const m=JSON.parse('{"title":"pg_database","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/ref_guide/system_catalogs/pg_database.md","filePath":"docs/7x/ref_guide/system_catalogs/pg_database.md"}'),s={name:"docs/7x/ref_guide/system_catalogs/pg_database.md"};function c(r,t,n,i,l,h){return a(),d("div",null,t[0]||(t[0]=[o('<h1 id="pg-database" tabindex="-1">pg_database <a class="header-anchor" href="#pg-database" aria-label="Permalink to &quot;pg_database&quot;">â€‹</a></h1><p>The <code>pg_database</code> system catalog table stores information about the available databases. Databases are created with the <code>CREATE DATABASE</code> SQL command. Unlike most system catalogs, <code>pg_database</code> is shared across all databases in the system. There is only one copy of <code>pg_database</code> per system, not one per database.</p><table tabindex="0"><thead><tr><th>column</th><th>type</th><th>references</th><th>description</th></tr></thead><tbody><tr><td><code>oid</code></td><td>oid</td><td></td><td>The object ID</td></tr><tr><td><code>datname</code></td><td>name</td><td></td><td>Database name</td></tr><tr><td><code>datdba</code></td><td>oid</td><td>pg_authid.oid</td><td>Owner of the database, usually the user who created it</td></tr><tr><td><code>encoding</code></td><td>integer</td><td></td><td>Character encoding for this database. <code>pg_encoding_to_char()</code> can translate this number to the encoding name</td></tr><tr><td><code>datcollate</code></td><td>name</td><td></td><td><code>LC_COLLATE</code> for this database</td></tr><tr><td><code>datctype</code></td><td>name</td><td></td><td><code>LC_CTYPE</code> for this database</td></tr><tr><td><code>datistemplate</code></td><td>boolean</td><td></td><td>If true then this database can be used in the <code>TEMPLATE</code> clause of <code>CREATE DATABASE</code> to create a new database as a clone of this one</td></tr><tr><td><code>datallowconn</code></td><td>boolean</td><td></td><td>If false then no one can connect to this database. This is used to protect the <code>template0</code> database from being altered</td></tr><tr><td><code>datconnlimit</code></td><td>integer</td><td></td><td>Sets the maximum number of concurrent connections that can be made to this database. <code>-1</code> means no limit</td></tr><tr><td><code>datlastsysoid</code></td><td>oid</td><td></td><td>Last system OID in the database</td></tr><tr><td><code>datfrozenxid</code></td><td>xid</td><td></td><td>All transaction IDs (XIDs) before this one have been replaced with a permanent (frozen) transaction ID in this database. This is used to track whether the database needs to be vacuumed in order to prevent transaction ID wraparound or to allow pg_xact to be shrunk. It is the minimum of the per-table <em>pg_class.relfrozenxid</em> values</td></tr><tr><td><code>datminmxid</code></td><td>xid</td><td></td><td>A <em>Multixact ID</em> is used to support row locking by multiple transactions. All multixact IDs before this one have been replaced with a transaction ID in this database. This is used to track whether the database needs to be vacuumed in order to prevent multixact ID wraparound or to allow <code>pg_multixact</code> to be shrunk. It is the minimum of the per-table <em>pg_class.relminmxid</em> values</td></tr><tr><td><code>dattablespace</code></td><td>oid</td><td>pg_tablespace.oid</td><td>The default tablespace for the database. Within this database, all tables for which <em>pg_class.reltablespace</em> is zero will be stored in this tablespace. All non-shared system catalogs will also be there</td></tr><tr><td><code>datacl</code></td><td>aclitem[]</td><td></td><td>Database access privileges as given by <code>GRANT</code> and <code>REVOKE</code></td></tr></tbody></table><p><strong>Parent topic:</strong> <a href="./../system_catalogs/catalog_ref-html.html">System Catalogs Definitions</a></p>',4)]))}const p=e(s,[["render",c]]);export{m as __pageData,p as default};
