import{_ as d,c as e,o as r,ag as o}from"./chunks/framework.Ds6Eueu6.js";const S=JSON.parse('{"title":"SQL 2008 Optional Feature Compliance","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/ref_guide/SQL2008_support.md","filePath":"docs/7x/ref_guide/SQL2008_support.md"}'),a={name:"docs/7x/ref_guide/SQL2008_support.md"};function c(i,t,n,s,E,N){return r(),e("div",null,t[0]||(t[0]=[o('<h1 id="sql-2008-optional-feature-compliance" tabindex="-1">SQL 2008 Optional Feature Compliance <a class="header-anchor" href="#sql-2008-optional-feature-compliance" aria-label="Permalink to &quot;SQL 2008 Optional Feature Compliance&quot;">â€‹</a></h1><p>The following table lists the features described in the 2008 SQL standard. Features that are supported in WarehousePG are marked as YES in the &#39;Supported&#39; column, features that are not implemented are marked as NO.</p><p>For information about WarehousePG features and SQL compliance, see the <em>WarehousePG Administrator Guide</em>.</p><table tabindex="0"><thead><tr><th>ID</th><th>Feature</th><th>Supported</th><th>Comments</th></tr></thead><tbody><tr><td>B011</td><td>Embedded Ada</td><td>NO</td><td></td></tr><tr><td>B012</td><td>Embedded C</td><td>NO</td><td>Due to issues with PostgreSQL <code>ecpg</code></td></tr><tr><td>B013</td><td>Embedded COBOL</td><td>NO</td><td></td></tr><tr><td>B014</td><td>Embedded Fortran</td><td>NO</td><td></td></tr><tr><td>B015</td><td>Embedded MUMPS</td><td>NO</td><td></td></tr><tr><td>B016</td><td>Embedded Pascal</td><td>NO</td><td></td></tr><tr><td>B017</td><td>Embedded PL/I</td><td>NO</td><td></td></tr><tr><td>B021</td><td>Direct SQL</td><td>YES</td><td></td></tr><tr><td>B031</td><td>Basic dynamic SQL</td><td>NO</td><td></td></tr><tr><td>B032</td><td>Extended dynamic SQL</td><td>NO</td><td></td></tr><tr><td>B033</td><td>Untyped SQL-invoked function arguments</td><td>NO</td><td></td></tr><tr><td>B034</td><td>Dynamic specification of cursor attributes</td><td>NO</td><td></td></tr><tr><td>B035</td><td>Non-extended descriptor names</td><td>NO</td><td></td></tr><tr><td>B041</td><td>Extensions to embedded SQL exception declarations</td><td>NO</td><td></td></tr><tr><td>B051</td><td>Enhanced execution rights</td><td>NO</td><td></td></tr><tr><td>B111</td><td>Module language Ada</td><td>NO</td><td></td></tr><tr><td>B112</td><td>Module language C</td><td>NO</td><td></td></tr><tr><td>B113</td><td>Module language COBOL</td><td>NO</td><td></td></tr><tr><td>B114</td><td>Module language Fortran</td><td>NO</td><td></td></tr><tr><td>B115</td><td>Module language MUMPS</td><td>NO</td><td></td></tr><tr><td>B116</td><td>Module language Pascal</td><td>NO</td><td></td></tr><tr><td>B117</td><td>Module language PL/I</td><td>NO</td><td></td></tr><tr><td>B121</td><td>Routine language Ada</td><td>NO</td><td></td></tr><tr><td>B122</td><td>Routine language C</td><td>NO</td><td></td></tr><tr><td>B123</td><td>Routine language COBOL</td><td>NO</td><td></td></tr><tr><td>B124</td><td>Routine language Fortran</td><td>NO</td><td></td></tr><tr><td>B125</td><td>Routine language MUMPS</td><td>NO</td><td></td></tr><tr><td>B126</td><td>Routine language Pascal</td><td>NO</td><td></td></tr><tr><td>B127</td><td>Routine language PL/I</td><td>NO</td><td></td></tr><tr><td>B128</td><td>Routine language SQL</td><td>NO</td><td></td></tr><tr><td>E011</td><td>Numeric data types</td><td>YES</td><td></td></tr><tr><td>E011-01</td><td><code>INTEGER</code> and <code>SMALLINT</code> data types</td><td>YES</td><td></td></tr><tr><td>E011-02</td><td><code>DOUBLE PRECISION</code> and <code>FLOAT</code> data types</td><td>YES</td><td></td></tr><tr><td>E011-03</td><td><code>DECIMAL</code> and <code>NUMERIC</code> data types</td><td>YES</td><td></td></tr><tr><td>E011-04</td><td>Arithmetic operators</td><td>YES</td><td></td></tr><tr><td>E011-05</td><td>Numeric comparison</td><td>YES</td><td></td></tr><tr><td>E011-06</td><td>Implicit casting among the numeric data types</td><td>YES</td><td></td></tr><tr><td>E021</td><td>Character data types</td><td>YES</td><td></td></tr><tr><td>E021-01</td><td><code>CHARACTER</code> data type</td><td>YES</td><td></td></tr><tr><td>E021-02</td><td><code>CHARACTER VARYING</code> data type</td><td>YES</td><td></td></tr><tr><td>E021-03</td><td>Character literals</td><td>YES</td><td></td></tr><tr><td>E021-04</td><td><code>CHARACTER_LENGTH</code> function</td><td>YES</td><td>Trims trailing spaces from <code>CHARACTER</code> values before counting</td></tr><tr><td>E021-05</td><td><code>OCTET_LENGTH</code> function</td><td>YES</td><td></td></tr><tr><td>E021-06</td><td><code>SUBSTRING</code> function</td><td>YES</td><td></td></tr><tr><td>E021-07</td><td>Character concatenation</td><td>YES</td><td></td></tr><tr><td>E021-08</td><td><code>UPPER</code> and <code>LOWER</code> functions</td><td>YES</td><td></td></tr><tr><td>E021-09</td><td><code>TRIM</code> function</td><td>YES</td><td></td></tr><tr><td>E021-10</td><td>Implicit casting among the character string types</td><td>YES</td><td></td></tr><tr><td>E021-11</td><td><code>POSITION</code> function</td><td>YES</td><td></td></tr><tr><td>E021-12</td><td>Character comparison</td><td>YES</td><td></td></tr><tr><td>E031</td><td>Identifiers</td><td>YES</td><td></td></tr><tr><td>E031-01</td><td>Delimited identifiers</td><td>YES</td><td></td></tr><tr><td>E031-02</td><td>Lower case identifiers</td><td>YES</td><td></td></tr><tr><td>E031-03</td><td>Trailing underscore</td><td>YES</td><td></td></tr><tr><td>E051</td><td>Basic query specification</td><td>YES</td><td></td></tr><tr><td>E051-01</td><td><code>SELECT DISTINCT</code></td><td>YES</td><td></td></tr><tr><td>E051-02</td><td><code>GROUP BY</code> clause</td><td>YES</td><td></td></tr><tr><td>E051-03</td><td><code>GROUP BY</code> can contain columns not in <code>SELECT</code> list</td><td>YES</td><td></td></tr><tr><td>E051-04</td><td><code>SELECT</code> list items can be renamed</td><td>YES</td><td></td></tr><tr><td>E051-05</td><td><code>HAVING</code> clause</td><td>YES</td><td></td></tr><tr><td>E051-06</td><td>Qualified * in <code>SELECT</code> list</td><td>YES</td><td></td></tr><tr><td>E051-07</td><td>Correlation names in the <code>FROM</code> clause</td><td>YES</td><td></td></tr><tr><td>E051-08</td><td>Rename columns in the <code>FROM</code> clause</td><td>YES</td><td></td></tr><tr><td>E061</td><td>Basic predicates and search conditions</td><td>YES</td><td></td></tr><tr><td>E061-01</td><td>Comparison predicate</td><td>YES</td><td></td></tr><tr><td>E061-02</td><td><code>BETWEEN</code> predicate</td><td>YES</td><td></td></tr><tr><td>E061-03</td><td><code>IN</code> predicate with list of values</td><td>YES</td><td></td></tr><tr><td>E061-04</td><td><code>LIKE</code> predicate</td><td>YES</td><td></td></tr><tr><td>E061-05</td><td><code>LIKE</code> predicate <code>ESCAPE</code> clause</td><td>YES</td><td></td></tr><tr><td>E061-06</td><td><code>NULL</code> predicate</td><td>YES</td><td></td></tr><tr><td>E061-07</td><td>Quantified comparison predicate</td><td>YES</td><td></td></tr><tr><td>E061-08</td><td><code>EXISTS</code> predicate</td><td>YES</td><td>Not all uses work in WarehousePG</td></tr><tr><td>E061-09</td><td>Subqueries in comparison predicate</td><td>YES</td><td></td></tr><tr><td>E061-11</td><td>Subqueries in IN predicate</td><td>YES</td><td></td></tr><tr><td>E061-12</td><td>Subqueries in quantified comparison predicate</td><td>YES</td><td></td></tr><tr><td>E061-13</td><td>Correlated subqueries</td><td>YES</td><td></td></tr><tr><td>E061-14</td><td>Search condition</td><td>YES</td><td></td></tr><tr><td>E071</td><td>Basic query expressions</td><td>YES</td><td></td></tr><tr><td>E071-01</td><td><code>UNION DISTINCT</code> table operator</td><td>YES</td><td></td></tr><tr><td>E071-02</td><td><code>UNION ALL</code> table operator</td><td>YES</td><td></td></tr><tr><td>E071-03</td><td><code>EXCEPT DISTINCT</code> table operator</td><td>YES</td><td></td></tr><tr><td>E071-05</td><td>Columns combined via table operators need not have exactly the same data type</td><td>YES</td><td></td></tr><tr><td>E071-06</td><td>Table operators in subqueries</td><td>YES</td><td></td></tr><tr><td>E081</td><td>Basic Privileges</td><td>NO</td><td>Partial sub-feature support</td></tr><tr><td>E081-01</td><td><code>SELECT</code> privilege</td><td>YES</td><td></td></tr><tr><td>E081-02</td><td><code>DELETE</code> privilege</td><td>YES</td><td></td></tr><tr><td>E081-03</td><td><code>INSERT</code> privilege at the table level</td><td>YES</td><td></td></tr><tr><td>E081-04</td><td><code>UPDATE</code> privilege at the table level</td><td>YES</td><td></td></tr><tr><td>E081-05</td><td><code>UPDATE</code> privilege at the column level</td><td>YES</td><td></td></tr><tr><td>E081-06</td><td><code>REFERENCES</code> privilege at the table level</td><td>NO</td><td></td></tr><tr><td>E081-07</td><td><code>REFERENCES</code> privilege at the column level</td><td>NO</td><td></td></tr><tr><td>E081-08</td><td><code>WITH GRANT OPTION</code></td><td>YES</td><td></td></tr><tr><td>E081-09</td><td><code>USAGE</code> privilege</td><td>YES</td><td></td></tr><tr><td>E081-10</td><td><code>EXECUTE</code> privilege</td><td>YES</td><td></td></tr><tr><td>E091</td><td>Set Functions</td><td>YES</td><td></td></tr><tr><td>E091-01</td><td><code>AVG</code></td><td>YES</td><td></td></tr><tr><td>E091-02</td><td><code>COUNT</code></td><td>YES</td><td></td></tr><tr><td>E091-03</td><td><code>MAX</code></td><td>YES</td><td></td></tr><tr><td>E091-04</td><td><code>MIN</code></td><td>YES</td><td></td></tr><tr><td>E091-05</td><td><code>SUM</code></td><td>YES</td><td></td></tr><tr><td>E091-06</td><td><code>ALL</code> quantifier</td><td>YES</td><td></td></tr><tr><td>E091-07</td><td><code>DISTINCT</code> quantifier</td><td>YES</td><td></td></tr><tr><td>E101</td><td>Basic data manipulation</td><td>YES</td><td></td></tr><tr><td>E101-01</td><td><code>INSERT</code> statement</td><td>YES</td><td></td></tr><tr><td>E101-03</td><td>Searched <code>UPDATE</code> statement</td><td>YES</td><td></td></tr><tr><td>E101-04</td><td>Searched <code>DELETE</code> statement</td><td>YES</td><td></td></tr><tr><td>E111</td><td>Single row <code>SELECT</code> statement</td><td>YES</td><td></td></tr><tr><td>E121</td><td>Basic cursor support</td><td>YES</td><td></td></tr><tr><td>E121-01</td><td><code>DECLARE CURSOR</code></td><td>YES</td><td></td></tr><tr><td>E121-02</td><td><code>ORDER BY</code> columns need not be in select list</td><td>YES</td><td></td></tr><tr><td>E121-03</td><td>Value expressions in <code>ORDER BY</code> clause</td><td>YES</td><td></td></tr><tr><td>E121-04</td><td><code>OPEN</code> statement</td><td>YES</td><td></td></tr><tr><td>E121-06</td><td>Positioned <code>UPDATE</code> statement</td><td>NO</td><td></td></tr><tr><td>E121-07</td><td>Positioned <code>DELETE</code> statement</td><td>NO</td><td></td></tr><tr><td>E121-08</td><td><code>CLOSE</code> statement</td><td>YES</td><td></td></tr><tr><td>E121-10</td><td><code>FETCH</code> statement implicit <code>NEXT</code></td><td>YES</td><td></td></tr><tr><td>E121-17</td><td><code>WITH HOLD</code> cursors</td><td>YES</td><td></td></tr><tr><td>E131</td><td>Null value support</td><td>YES</td><td></td></tr><tr><td>E141</td><td>Basic integrity constraints</td><td>YES</td><td></td></tr><tr><td>E141-01</td><td><code>NOT NULL</code> constraints</td><td>YES</td><td></td></tr><tr><td>E141-02</td><td><code>UNIQUE</code> constraints of <code>NOT NULL</code> columns</td><td>YES</td><td>Must be the same as or a superset of the WarehousePG distribution key</td></tr><tr><td>E141-03</td><td><code>PRIMARY KEY</code> constraints</td><td>YES</td><td>Must be the same as or a superset of the WarehousePG distribution key</td></tr><tr><td>E141-04</td><td>Basic <code>FOREIGN KEY</code> constraint with the <code>NO ACTION</code> default for both referential delete action and referential update action</td><td>NO</td><td></td></tr><tr><td>E141-06</td><td><code>CHECK</code> constraints</td><td>YES</td><td></td></tr><tr><td>E141-07</td><td>Column defaults</td><td>YES</td><td></td></tr><tr><td>E141-08</td><td><code>NOT NULL</code> inferred on <code>PRIMARY KEY</code></td><td>YES</td><td></td></tr><tr><td>E141-10</td><td>Names in a foreign key can be specified in any order</td><td>YES</td><td>Foreign keys can be declared but are not enforced in WarehousePG</td></tr><tr><td>E151</td><td>Transaction support</td><td>YES</td><td></td></tr><tr><td>E151-01</td><td><code>COMMIT</code> statement</td><td>YES</td><td></td></tr><tr><td>E151-02</td><td><code>ROLLBACK</code> statement</td><td>YES</td><td></td></tr><tr><td>E152</td><td>Basic SET TRANSACTION statement</td><td>YES</td><td></td></tr><tr><td>E152-01</td><td><code>ISOLATION LEVEL SERIALIZABLE</code> clause</td><td>NO</td><td>Can be declared but is treated as a synonym for <code>REPEATABLE READ</code></td></tr><tr><td>E152-02</td><td><code>READ ONLY</code> and <code>READ WRITE</code> clauses</td><td>YES</td><td></td></tr><tr><td>E153</td><td>Updatable queries with subqueries</td><td>NO</td><td></td></tr><tr><td>E161</td><td>SQL comments using leading double minus</td><td>YES</td><td></td></tr><tr><td>E171</td><td>SQLSTATE support</td><td>YES</td><td></td></tr><tr><td>E182</td><td>Module language</td><td>NO</td><td></td></tr><tr><td>F021</td><td>Basic information schema</td><td>YES</td><td></td></tr><tr><td>F021-01</td><td><code>COLUMNS</code> view</td><td>YES</td><td></td></tr><tr><td>F021-02</td><td><code>TABLES</code> view</td><td>YES</td><td></td></tr><tr><td>F021-03</td><td><code>VIEWS</code> view</td><td>YES</td><td></td></tr><tr><td>F021-04</td><td><code>TABLE_CONSTRAINTS</code> view</td><td>YES</td><td></td></tr><tr><td>F021-05</td><td><code>REFERENTIAL_CONSTRAINTS</code> view</td><td>YES</td><td></td></tr><tr><td>F021-06</td><td><code>CHECK_CONSTRAINTS</code> view</td><td>YES</td><td></td></tr><tr><td>F031</td><td>Basic schema manipulation</td><td>YES</td><td></td></tr><tr><td>F031-01</td><td><code>CREATE TABLE</code> statement to create persistent base tables</td><td>YES</td><td></td></tr><tr><td>F031-02</td><td><code>CREATE VIEW</code> statement</td><td>YES</td><td></td></tr><tr><td>F031-03</td><td><code>GRANT</code> statement</td><td>YES</td><td></td></tr><tr><td>F031-04</td><td><code>ALTER TABLE</code> statement: <code>ADD COLUMN</code> clause</td><td>YES</td><td></td></tr><tr><td>F031-13</td><td><code>DROP TABLE</code> statement: <code>RESTRICT</code> clause</td><td>YES</td><td></td></tr><tr><td>F031-16</td><td><code>DROP VIEW</code> statement: <code>RESTRICT</code> clause</td><td>YES</td><td></td></tr><tr><td>F031-19</td><td><code>REVOKE</code> statement: <code>RESTRICT</code> clause</td><td>YES</td><td></td></tr><tr><td>F032</td><td><code>CASCADE</code> drop behavior</td><td>YES</td><td></td></tr><tr><td>F033</td><td><code>ALTER TABLE</code> statement: <code>DROP COLUMN</code> clause</td><td>YES</td><td></td></tr><tr><td>F034</td><td>Extended REVOKE statement</td><td>YES</td><td></td></tr><tr><td>F034-01</td><td><code>REVOKE</code> statement performed by other than the owner of a schema object</td><td>YES</td><td></td></tr><tr><td>F034-02</td><td><code>REVOKE</code> statement: <code>GRANT OPTION FOR</code> clause</td><td>YES</td><td></td></tr><tr><td>F034-03</td><td><code>REVOKE</code> statement to revoke a privilege that the grantee has <code>WITH GRANT OPTION</code></td><td>YES</td><td></td></tr><tr><td>F041</td><td>Basic joined table</td><td>YES</td><td></td></tr><tr><td>F041-01</td><td>Inner join (but not necessarily the <code>INNER</code> keyword)</td><td>YES</td><td></td></tr><tr><td>F041-02</td><td><code>INNER</code> keyword</td><td>YES</td><td></td></tr><tr><td>F041-03</td><td><code>LEFT OUTER JOIN</code></td><td>YES</td><td></td></tr><tr><td>F041-04</td><td><code>RIGHT OUTER JOIN</code></td><td>YES</td><td></td></tr><tr><td>F041-05</td><td>Outer joins can be nested</td><td>YES</td><td></td></tr><tr><td>F041-07</td><td>The inner table in a left or right outer join can also be used in an inner join</td><td>YES</td><td></td></tr><tr><td>F041-08</td><td>All comparison operators are supported (rather than just <code>=</code>)</td><td>YES</td><td></td></tr><tr><td>F051</td><td>Basic date and time</td><td>YES</td><td></td></tr><tr><td>F051-01</td><td><code>DATE</code> data type (including support of <code>DATE</code> literal)</td><td>YES</td><td></td></tr><tr><td>F051-02</td><td><code>TIME</code> data type (including support of <code>TIME</code> literal) with fractional seconds precision of at least 0</td><td>YES</td><td></td></tr><tr><td>F051-03</td><td><code>TIMESTAMP</code> data type (including support of <code>TIMESTAMP</code> literal) with fractional seconds precision of at least 0 and 6</td><td>YES</td><td></td></tr><tr><td>F051-04</td><td>Comparison predicate on <code>DATE</code>, <code>TIME</code>, and <code>TIMESTAMP</code> data types</td><td>YES</td><td></td></tr><tr><td>F051-05</td><td>Explicit <code>CAST</code> between datetime types and character string types</td><td>YES</td><td></td></tr><tr><td>F051-06</td><td><code>CURRENT_DATE</code></td><td>YES</td><td></td></tr><tr><td>F051-07</td><td><code>LOCALTIME</code></td><td>YES</td><td></td></tr><tr><td>F051-08</td><td><code>LOCALTIMESTAMP</code></td><td>YES</td><td></td></tr><tr><td>F052</td><td>Intervals and datetime arithmetic</td><td>YES</td><td></td></tr><tr><td>F053</td><td><code>OVERLAPS</code> predicate</td><td>YES</td><td></td></tr><tr><td>F081</td><td><code>UNION</code> and <code>EXCEPT</code> in views</td><td>YES</td><td></td></tr><tr><td>F111</td><td>Isolation levels other than SERIALIZABLE</td><td>YES</td><td></td></tr><tr><td>F111-01</td><td><code>READ UNCOMMITTED</code>isolation level</td><td>NO</td><td>Can be declared but is treated as a synonym for <code>READ COMMITTED</code></td></tr><tr><td>F111-02</td><td><code>READ COMMITTED</code> isolation level</td><td>YES</td><td></td></tr><tr><td>F111-03</td><td><code>REPEATABLE READ</code> isolation level</td><td>YES</td><td></td></tr><tr><td>F121</td><td>Basic diagnostics management</td><td>NO</td><td></td></tr><tr><td>F122</td><td>Enhanced diagnostics management</td><td>NO</td><td></td></tr><tr><td>F123</td><td>All diagnostics</td><td>NO</td><td></td></tr><tr><td>F131-</td><td>Grouped operations</td><td>YES</td><td></td></tr><tr><td>F131-01</td><td><code>WHERE</code>, <code>GROUP BY</code>, and <code>HAVING</code> clauses supported in queries with grouped views</td><td>YES</td><td></td></tr><tr><td>F131-02</td><td>Multiple tables supported in queries with grouped views</td><td>YES</td><td></td></tr><tr><td>F131-03</td><td>Set functions supported in queries with grouped views</td><td>YES</td><td></td></tr><tr><td>F131-04</td><td>Subqueries with <code>GROUP BY</code> and <code>HAVING</code> clauses and grouped views</td><td>YES</td><td></td></tr><tr><td>F131-05</td><td>Single row <code>SELECT</code> with <code>GROUP BY</code> and <code>HAVING</code> clauses and grouped views</td><td>YES</td><td></td></tr><tr><td>F171</td><td>Multiple schemas per user</td><td>YES</td><td></td></tr><tr><td>F181</td><td>Multiple module support</td><td>NO</td><td></td></tr><tr><td>F191</td><td>Referential delete actions</td><td>NO</td><td></td></tr><tr><td>F200</td><td><code>TRUNCATE TABLE</code> statement</td><td>YES</td><td></td></tr><tr><td>F201</td><td><code>CAST</code> function</td><td>YES</td><td></td></tr><tr><td>F202</td><td><code>TRUNCATE TABLE</code>: identity column restart option</td><td>YES</td><td></td></tr><tr><td>F221</td><td>Explicit defaults</td><td>YES</td><td></td></tr><tr><td>F222</td><td><code>INSERT</code> statement: <code>DEFAULT VALUES</code> clause</td><td>YES</td><td></td></tr><tr><td>F231</td><td>Privilege tables</td><td>YES</td><td></td></tr><tr><td>F231-01</td><td><code>TABLE_PRIVILEGES</code> view</td><td>YES</td><td></td></tr><tr><td>F231-02</td><td><code>COLUMN_PRIVILEGES</code> view</td><td>YES</td><td></td></tr><tr><td>F231-03</td><td><code>USAGE_PRIVILEGES</code> view</td><td>YES</td><td></td></tr><tr><td>F251</td><td>Domain support</td><td></td><td></td></tr><tr><td>F261</td><td>CASE expression</td><td>YES</td><td></td></tr><tr><td>F261-01</td><td>Simple <code>CASE</code></td><td>YES</td><td></td></tr><tr><td>F261-02</td><td>Searched <code>CASE</code></td><td>YES</td><td></td></tr><tr><td>F261-03</td><td><code>NULLIF</code></td><td>YES</td><td></td></tr><tr><td>F261-04</td><td><code>COALESCE</code></td><td>YES</td><td></td></tr><tr><td>F262</td><td>Extended <code>CASE</code> expression</td><td>NO</td><td></td></tr><tr><td>F263</td><td>Comma-separated predicates in simple <code>CASE</code> expression</td><td>NO</td><td></td></tr><tr><td>F271</td><td>Compound character literals</td><td>YES</td><td></td></tr><tr><td>F281</td><td><code>LIKE</code> enhancements</td><td>YES</td><td></td></tr><tr><td>F291</td><td><code>UNIQUE</code> predicate</td><td>NO</td><td></td></tr><tr><td>F301</td><td><code>CORRESPONDING</code>in query expressions</td><td>NO</td><td></td></tr><tr><td>F302</td><td>INTERSECT table operator</td><td>YES</td><td></td></tr><tr><td>F302-01</td><td><code>INTERSECT DISTINCT</code> table operator</td><td>YES</td><td></td></tr><tr><td>F302-02</td><td><code>INTERSECT ALL</code> table operator</td><td>YES</td><td></td></tr><tr><td>F304</td><td><code>EXCEPT ALL</code> table operator</td><td></td><td></td></tr><tr><td>F311</td><td>Schema definition statement</td><td>YES</td><td>Partial sub-feature support</td></tr><tr><td>F311-01</td><td><code>CREATE SCHEMA</code></td><td>YES</td><td></td></tr><tr><td>F311-02</td><td><code>CREATE TABLE</code> for persistent base tables</td><td>YES</td><td></td></tr><tr><td>F311-03</td><td><code>CREATE VIEW</code></td><td>YES</td><td></td></tr><tr><td>F311-04</td><td><code>CREATE VIEW: WITH CHECK OPTION</code></td><td>NO</td><td></td></tr><tr><td>F311-05</td><td><code>GRANT</code> statement</td><td>YES</td><td></td></tr><tr><td>F312</td><td><code>MERGE</code> statement</td><td>NO</td><td>consider <code>INSERT ... ON CONFLICT DO UPDATE</code></td></tr><tr><td>F313</td><td>Enhanced <code>MERGE</code> statement</td><td>NO</td><td></td></tr><tr><td>F321</td><td>User authorization</td><td>YES</td><td></td></tr><tr><td>F341</td><td>Usage Tables</td><td>NO</td><td></td></tr><tr><td>F361</td><td>Subprogram support</td><td>YES</td><td></td></tr><tr><td>F381</td><td>Extended schema manipulation</td><td>YES</td><td></td></tr><tr><td>F381-01</td><td><code>ALTER TABLE</code> statement: <code>ALTER COLUMN</code> clause</td><td></td><td>Some limitations on altering distribution key columns</td></tr><tr><td>F381-02</td><td><code>ALTER TABLE</code> statement: <code>ADD CONSTRAINT</code> clause</td><td></td><td></td></tr><tr><td>F381-03</td><td><code>ALTER TABLE</code> statement: <code>DROP CONSTRAINT</code> clause</td><td></td><td></td></tr><tr><td>F382</td><td>Alter column data type</td><td>YES</td><td>Some limitations on altering distribution key columns</td></tr><tr><td>F384</td><td>Drop identity property clause</td><td>YES</td><td></td></tr><tr><td>F386</td><td>Set identity column generation clause</td><td>YES</td><td></td></tr><tr><td>F391</td><td>Long identifiers</td><td>YES</td><td></td></tr><tr><td>F392</td><td>Unicode escapes in identifiers</td><td>NO</td><td></td></tr><tr><td>F393</td><td>Unicode escapes in literals</td><td>NO</td><td></td></tr><tr><td>F394</td><td>Optional normal form specification</td><td>NO</td><td></td></tr><tr><td>F401</td><td>Extended joined table</td><td>YES</td><td></td></tr><tr><td>F401-01</td><td><code>NATURAL JOIN</code></td><td>YES</td><td></td></tr><tr><td>F401-02</td><td><code>FULL OUTER JOIN</code></td><td>YES</td><td></td></tr><tr><td>F401-04</td><td><code>CROSS JOIN</code></td><td>YES</td><td></td></tr><tr><td>F402</td><td>Named column joins for LOBs, arrays, and multisets</td><td>NO</td><td></td></tr><tr><td>F403</td><td>Partitioned joined tables</td><td>NO</td><td></td></tr><tr><td>F411</td><td>Time zone specification</td><td>YES</td><td>Differences regarding literal interpretation</td></tr><tr><td>F421</td><td>National character</td><td>YES</td><td></td></tr><tr><td>F431</td><td>Read-only scrollable cursors</td><td>YES</td><td>Forward scrolling only</td></tr><tr><td>01</td><td><code>FETCH</code> with explicit <code>NEXT</code></td><td>YES</td><td></td></tr><tr><td>02</td><td><code>FETCH FIRST</code></td><td>NO</td><td></td></tr><tr><td>03</td><td><code>FETCH LAST</code></td><td>YES</td><td></td></tr><tr><td>04</td><td><code>FETCH PRIOR</code></td><td>NO</td><td></td></tr><tr><td>05</td><td><code>FETCH ABSOLUTE</code></td><td>NO</td><td></td></tr><tr><td>06</td><td><code>FETCH RELATIVE</code></td><td>NO</td><td></td></tr><tr><td>F441</td><td>Extended set function support</td><td>YES</td><td></td></tr><tr><td>F442</td><td>Mixed column references in set functions</td><td>YES</td><td></td></tr><tr><td>F451</td><td>Character set definition</td><td>NO</td><td></td></tr><tr><td>F461</td><td>Named character sets</td><td>NO</td><td></td></tr><tr><td>F471</td><td>Scalar subquery values</td><td>YES</td><td></td></tr><tr><td>F481</td><td>Expanded <code>NULL</code> predicate</td><td>YES</td><td></td></tr><tr><td>F491</td><td>Constraint management</td><td>YES</td><td></td></tr><tr><td>F501</td><td>Features and conformance views</td><td>YES</td><td></td></tr><tr><td>F501-01</td><td><code>SQL_FEATURES</code> view</td><td>YES</td><td></td></tr><tr><td>F501-02</td><td><code>SQL_SIZING</code> view</td><td>YES</td><td></td></tr><tr><td>F501-03</td><td><code>SQL_LANGUAGES</code> view</td><td>YES</td><td></td></tr><tr><td>F502</td><td>Enhanced documentation tables</td><td>YES</td><td></td></tr><tr><td>F502-01</td><td><code>SQL_SIZING_PROFILES</code> view</td><td>YES</td><td></td></tr><tr><td>F502-02</td><td><code>SQL_IMPLEMENTATION_INFO</code> view</td><td>YES</td><td></td></tr><tr><td>F502-03</td><td><code>SQL_PACKAGES</code> view</td><td>YES</td><td></td></tr><tr><td>F521</td><td>Assertions</td><td>NO</td><td></td></tr><tr><td>F531</td><td>Temporary tables</td><td>YES</td><td>Non-standard form</td></tr><tr><td>F555</td><td>Enhanced seconds precision</td><td>YES</td><td></td></tr><tr><td>F561</td><td>Full value expressions</td><td>YES</td><td></td></tr><tr><td>F571</td><td>Truth value tests</td><td>YES</td><td></td></tr><tr><td>F591</td><td>Derived tables</td><td>YES</td><td></td></tr><tr><td>F611</td><td>Indicator data types</td><td>YES</td><td></td></tr><tr><td>F641</td><td>Row and table constructors</td><td>NO</td><td></td></tr><tr><td>F651</td><td>Catalog name qualifiers</td><td>YES</td><td></td></tr><tr><td>F661</td><td>Simple tables</td><td>NO</td><td></td></tr><tr><td>F671</td><td>Subqueries in <code>CHECK</code></td><td>NO</td><td>Intentionally omitted</td></tr><tr><td>F672</td><td>Retrospective check constraints</td><td>YES</td><td></td></tr><tr><td>F690</td><td>Collation support</td><td>NO</td><td></td></tr><tr><td>F692</td><td>Enhanced collation support</td><td>NO</td><td></td></tr><tr><td>F693</td><td>SQL-session and client module collations</td><td>NO</td><td></td></tr><tr><td>F695</td><td>Translation support</td><td>NO</td><td></td></tr><tr><td>F696</td><td>Additional translation documentation</td><td>NO</td><td></td></tr><tr><td>F701</td><td>Referential update actions</td><td>NO</td><td></td></tr><tr><td>F711</td><td><code>ALTER</code> domain</td><td>YES</td><td></td></tr><tr><td>F721</td><td>Deferrable constraints</td><td>NO</td><td></td></tr><tr><td>F731</td><td><code>INSERT</code> column privileges</td><td>YES</td><td></td></tr><tr><td>F741</td><td>Referential <code>MATCH</code> types</td><td>NO</td><td>No partial match</td></tr><tr><td>F751</td><td>View <code>CHECK</code> enhancements</td><td>NO</td><td></td></tr><tr><td>F761</td><td>Session management</td><td>YES</td><td></td></tr><tr><td>F762</td><td><code>CURRENT_CATALOG</code></td><td>NO</td><td></td></tr><tr><td>F763</td><td><code>CURRENT_SCHEMA</code></td><td>NO</td><td></td></tr><tr><td>F771</td><td>Connection management</td><td>YES</td><td></td></tr><tr><td>F781</td><td>Self-referencing operations</td><td>YES</td><td></td></tr><tr><td>F791</td><td>Insensitive cursors</td><td>YES</td><td></td></tr><tr><td>F801</td><td>Full set function</td><td>YES</td><td></td></tr><tr><td>F812</td><td>Basic flagging</td><td>NO</td><td></td></tr><tr><td>F813</td><td>Extended flagging</td><td>NO</td><td></td></tr><tr><td>F831</td><td>Full cursor update</td><td>NO</td><td></td></tr><tr><td>F841</td><td><code>LIKE_REGEX</code> predicate</td><td>NO</td><td>Non-standard syntax for regex</td></tr><tr><td>F842</td><td><code>OCCURENCES_REGEX</code> function</td><td>NO</td><td></td></tr><tr><td>F843</td><td><code>POSITION_REGEX</code> function</td><td>NO</td><td></td></tr><tr><td>F844</td><td><code>SUBSTRING_REGEX</code>function</td><td>NO</td><td></td></tr><tr><td>F845</td><td><code>TRANSLATE_REGEX</code> function</td><td>NO</td><td></td></tr><tr><td>F846</td><td>Octet support in regular expression operators</td><td>NO</td><td></td></tr><tr><td>F847</td><td>Nonconstant regular expressions</td><td>NO</td><td></td></tr><tr><td>F850</td><td>Top-level <code>ORDER BY</code> clause in <em>query expression</em></td><td>YES</td><td></td></tr><tr><td>F851</td><td>Top-level <code>ORDER BY</code> clause in subqueries</td><td>NO</td><td></td></tr><tr><td>F852</td><td>Top-level <code>ORDER BY</code> clause in views</td><td>NO</td><td></td></tr><tr><td>F855</td><td>Nested <code>ORDER BY</code> clause in <em>query expression</em></td><td>NO</td><td></td></tr><tr><td>F856</td><td>Nested <code>FETCH FIRST</code>clause in <em>query expression</em></td><td>NO</td><td></td></tr><tr><td>F857</td><td>Top-level <code>FETCH FIRST</code>clause in <em>query expression</em></td><td>NO</td><td></td></tr><tr><td>F858</td><td><code>FETCH FIRST</code>clause in subqueries</td><td>NO</td><td></td></tr><tr><td>F859</td><td>Top-level <code>FETCH FIRST</code>clause in views</td><td>NO</td><td></td></tr><tr><td>F860</td><td><code>FETCH FIRST ROW</code><em>count</em> in <code>FETCH FIRST</code> clause</td><td>NO</td><td></td></tr><tr><td>F861</td><td>Top-level <code>RESULT OFFSET</code> clause in <em>query expression</em></td><td>NO</td><td></td></tr><tr><td>F862</td><td><code>RESULT OFFSET</code> clause in subqueries</td><td>NO</td><td></td></tr><tr><td>F863</td><td>Nested <code>RESULT OFFSET</code> clause in <em>query expression</em></td><td>NO</td><td></td></tr><tr><td>F864</td><td>Top-level <code>RESULT OFFSET</code> clause in views</td><td>NO</td><td></td></tr><tr><td>F865</td><td><code>OFFSET ROW</code><em>count</em> in <code>RESULT OFFSET</code> clause</td><td>NO</td><td></td></tr><tr><td>S011</td><td>Distinct data types</td><td>NO</td><td></td></tr><tr><td>S023</td><td>Basic structured types</td><td>NO</td><td></td></tr><tr><td>S024</td><td>Enhanced structured types</td><td>NO</td><td></td></tr><tr><td>S025</td><td>Final structured types</td><td>NO</td><td></td></tr><tr><td>S026</td><td>Self-referencing structured types</td><td>NO</td><td></td></tr><tr><td>S027</td><td>Create method by specific method name</td><td>NO</td><td></td></tr><tr><td>S028</td><td>Permutable UDT options list</td><td>NO</td><td></td></tr><tr><td>S041</td><td>Basic reference types</td><td>NO</td><td></td></tr><tr><td>S043</td><td>Enhanced reference types</td><td>NO</td><td></td></tr><tr><td>S051</td><td>Create table of type</td><td>NO</td><td></td></tr><tr><td>S071</td><td>SQL paths in function and type name resolution</td><td>YES</td><td></td></tr><tr><td>S091</td><td>Basic array support</td><td>NO</td><td>WarehousePG has arrays, but is not fully standards compliant</td></tr><tr><td>S091-01</td><td>Arrays of built-in data types</td><td>NO</td><td>Partially compliant</td></tr><tr><td>S091-02</td><td>Arrays of distinct types</td><td>NO</td><td></td></tr><tr><td>S091-03</td><td>Array expressions</td><td>NO</td><td></td></tr><tr><td>S092</td><td>Arrays of user-defined types</td><td>NO</td><td></td></tr><tr><td>S094</td><td>Arrays of reference types</td><td>NO</td><td></td></tr><tr><td>S095</td><td>Array constructors by query</td><td>NO</td><td></td></tr><tr><td>S096</td><td>Optional array bounds</td><td>NO</td><td></td></tr><tr><td>S097</td><td>Array element assignment</td><td>NO</td><td></td></tr><tr><td>S098</td><td><code>array_agg</code></td><td>Partially</td><td>Supported: Using <code>array_agg</code> without a window specification, for example:<br><code>SELECT array_agg(x) FROM ...</code>,<br><code>SELECT array_agg (x order by y) FROM ...</code><br><br>Not supported: Using <code>array_agg</code> as an aggregate derived window function, for example:<br><code>SELECT array_agg(x) over (ORDER BY y) FROM ...</code>,<br><code>SELECT array_agg(x order by y) over (PARTITION BY z) FROM ...</code>,<br><code>SELECT array_agg(x order by y) over (ORDER BY z) FROM ...</code></td></tr><tr><td>S111</td><td><code>ONLY</code> in query expressions</td><td>YES</td><td></td></tr><tr><td>S151</td><td>Type predicate</td><td>NO</td><td></td></tr><tr><td>S161</td><td>Subtype treatment</td><td>NO</td><td></td></tr><tr><td>S162</td><td>Subtype treatment for references</td><td>NO</td><td></td></tr><tr><td>S201</td><td>SQL-invoked routines on arrays</td><td>NO</td><td>Functions can be passed WarehousePG cluster types</td></tr><tr><td>S202</td><td>SQL-invoked routines on multisets</td><td>NO</td><td></td></tr><tr><td>S211</td><td>User-defined cast functions</td><td>YES</td><td></td></tr><tr><td>S231</td><td>Structured type locators</td><td>NO</td><td></td></tr><tr><td>S232</td><td>Array locators</td><td>NO</td><td></td></tr><tr><td>S233</td><td>Multiset locators</td><td>NO</td><td></td></tr><tr><td>S241</td><td>Transform functions</td><td>NO</td><td></td></tr><tr><td>S242</td><td>Alter transform statement</td><td>NO</td><td></td></tr><tr><td>S251</td><td>User-defined orderings</td><td>NO</td><td></td></tr><tr><td>S261</td><td>Specific type method</td><td>NO</td><td></td></tr><tr><td>S271</td><td>Basic multiset support</td><td>NO</td><td></td></tr><tr><td>S272</td><td>Multisets of user-defined types</td><td>NO</td><td></td></tr><tr><td>S274</td><td>Multisets of reference types</td><td>NO</td><td></td></tr><tr><td>S275</td><td>Advanced multiset support</td><td>NO</td><td></td></tr><tr><td>S281</td><td>Nested collection types</td><td>NO</td><td></td></tr><tr><td>S291</td><td>Unique constraint on entire row</td><td>NO</td><td></td></tr><tr><td>S301</td><td>Enhanced <code>UNNEST</code></td><td>NO</td><td></td></tr><tr><td>S401</td><td>Distinct types based on array types</td><td>NO</td><td></td></tr><tr><td>S402</td><td>Distinct types based on distinct types</td><td>NO</td><td></td></tr><tr><td>S403</td><td><code>MAX_CARDINALITY</code></td><td>NO</td><td></td></tr><tr><td>S404</td><td><code>TRIM_ARRAY</code></td><td>NO</td><td></td></tr><tr><td>T011</td><td>Timestamp in Information Schema</td><td>NO</td><td></td></tr><tr><td>T021</td><td><code>BINARY</code> and <code>VARBINARY</code>data types</td><td>NO</td><td></td></tr><tr><td>T022</td><td>Advanced support for <code>BINARY</code> and <code>VARBINARY</code> data types</td><td>NO</td><td></td></tr><tr><td>T023</td><td>Compound binary literal</td><td>NO</td><td></td></tr><tr><td>T024</td><td>Spaces in binary literals</td><td>NO</td><td></td></tr><tr><td>T031</td><td><code>BOOLEAN</code> data type</td><td>YES</td><td></td></tr><tr><td>T041</td><td>Basic <code>LOB</code> data type support</td><td>NO</td><td></td></tr><tr><td>T042</td><td>Extended <code>LOB</code> data type support</td><td>NO</td><td></td></tr><tr><td>T043</td><td>Multiplier T</td><td>NO</td><td></td></tr><tr><td>T044</td><td>Multiplier P</td><td>NO</td><td></td></tr><tr><td>T051</td><td>Row types</td><td>NO</td><td></td></tr><tr><td>T052</td><td><code>MAX</code> and <code>MIN</code> for row types</td><td>NO</td><td></td></tr><tr><td>T053</td><td>Explicit aliases for all-fields reference</td><td>NO</td><td></td></tr><tr><td>T061</td><td>UCS support</td><td>NO</td><td></td></tr><tr><td>T071</td><td><code>BIGINT</code> data type</td><td>YES</td><td></td></tr><tr><td>T101</td><td>Enhanced nullability determiniation</td><td>NO</td><td></td></tr><tr><td>T111</td><td>Updatable joins, unions, and columns</td><td>NO</td><td></td></tr><tr><td>T121</td><td><code>WITH</code> (excluding <code>RECURSIVE</code>) in query expression</td><td>NO</td><td></td></tr><tr><td>T122</td><td><code>WITH</code> (excluding <code>RECURSIVE</code>) in subquery</td><td>NO</td><td></td></tr><tr><td>T131</td><td>Recursive query</td><td>NO</td><td></td></tr><tr><td>T132</td><td>Recursive query in subquery</td><td>NO</td><td></td></tr><tr><td>T141</td><td><code>SIMILAR</code> predicate</td><td>YES</td><td></td></tr><tr><td>T151</td><td><code>DISTINCT</code> predicate</td><td>YES</td><td></td></tr><tr><td>T152</td><td><code>DISTINCT</code> predicate with negation</td><td>NO</td><td></td></tr><tr><td>T171</td><td><code>LIKE</code> clause in table definition</td><td>YES</td><td></td></tr><tr><td>T172</td><td><code>AS</code> subquery clause in table definition</td><td>YES</td><td></td></tr><tr><td>T173</td><td>Extended <code>LIKE</code> clause in table definition</td><td>YES</td><td></td></tr><tr><td>T174</td><td>Identity columns</td><td>YES</td><td></td></tr><tr><td>T175</td><td>Generated columns</td><td>NO</td><td></td></tr><tr><td>T176</td><td>Sequence generator support</td><td>NO</td><td></td></tr><tr><td>T177</td><td>Sequence generator support: simple restart option</td><td>NO</td><td></td></tr><tr><td>T178</td><td>Identity columns: simple restart option</td><td>YES</td><td></td></tr><tr><td>T191</td><td>Referential action <code>RESTRICT</code></td><td>NO</td><td></td></tr><tr><td>T201</td><td>Comparable data types for referential constraints</td><td>NO</td><td></td></tr><tr><td>T211</td><td>Basic trigger capability</td><td>NO</td><td></td></tr><tr><td>T211-01</td><td>Triggers activated on <code>UPDATE</code>, <code>INSERT</code>, or <code>DELETE</code> of one base table</td><td>NO</td><td></td></tr><tr><td>T211-02</td><td><code>BEFORE</code> triggers</td><td>NO</td><td></td></tr><tr><td>T211-03</td><td><code>AFTER</code> triggers</td><td>NO</td><td></td></tr><tr><td>T211-04</td><td><code>FOR EACH ROW</code> triggers</td><td>NO</td><td></td></tr><tr><td>T211-05</td><td>Ability to specify a search condition that must be true before the trigger is invoked</td><td>NO</td><td></td></tr><tr><td>T211-06</td><td>Support for run-time rules for the interaction of triggers and constraints</td><td>NO</td><td></td></tr><tr><td>T211-07</td><td><code>TRIGGER</code> privilege</td><td>YES</td><td></td></tr><tr><td>T211-08</td><td>Multiple triggers for the same event are run in the order in which they were created in the catalog</td><td>NO</td><td>Intentionally omitted</td></tr><tr><td>T212</td><td>Enhanced trigger capability</td><td>NO</td><td></td></tr><tr><td>T213</td><td><code>INSTEAD OF</code> triggers</td><td>NO</td><td></td></tr><tr><td>T231</td><td>Sensitive cursors</td><td>YES</td><td></td></tr><tr><td>T241</td><td><code>START TRANSACTION</code> statement</td><td>YES</td><td></td></tr><tr><td>T251</td><td><code>SET TRANSACTION</code> statement: <code>LOCAL</code> option</td><td>NO</td><td></td></tr><tr><td>T261</td><td>Chained transactions</td><td>NO</td><td></td></tr><tr><td>T271</td><td>Savepoints</td><td>YES</td><td></td></tr><tr><td>T272</td><td>Enhanced savepoint management</td><td>NO</td><td></td></tr><tr><td>T281</td><td><code>SELECT</code> privilege with column granularity</td><td>YES</td><td></td></tr><tr><td>T285</td><td>Enhanced derived column names</td><td>NO</td><td></td></tr><tr><td>T301</td><td>Functional dependencies</td><td>NO</td><td></td></tr><tr><td>T312</td><td>OVERLAY function</td><td>YES</td><td></td></tr><tr><td>T321</td><td>Basic SQL-invoked routines</td><td>NO</td><td>Partial support</td></tr><tr><td>T321-01</td><td>User-defined functions with no overloading</td><td>YES</td><td></td></tr><tr><td>T321-02</td><td>User-defined stored procedures with no overloading</td><td>NO</td><td></td></tr><tr><td>T321-03</td><td>Function invocation</td><td>YES</td><td></td></tr><tr><td>T321-04</td><td>CALL statement</td><td>NO</td><td></td></tr><tr><td>T321-05</td><td>RETURN statement</td><td>NO</td><td></td></tr><tr><td>T321-06</td><td>ROUTINES view</td><td>YES</td><td></td></tr><tr><td>T321-07</td><td>PARAMETERS view</td><td>YES</td><td></td></tr><tr><td>T322</td><td>Overloading of SQL-invoked functions and procedures</td><td>YES</td><td></td></tr><tr><td>T323</td><td>Explicit security for external routines</td><td>YES</td><td></td></tr><tr><td>T324</td><td>Explicit security for SQL routines</td><td>NO</td><td></td></tr><tr><td>T325</td><td>Qualified SQL parameter references</td><td>NO</td><td></td></tr><tr><td>T326</td><td>Table functions</td><td>NO</td><td></td></tr><tr><td>T331</td><td>Basic roles</td><td>NO</td><td></td></tr><tr><td>T332</td><td>Extended roles</td><td>NO</td><td></td></tr><tr><td>T351</td><td>Bracketed SQL comments (<code>/*...*/</code> comments)</td><td>YES</td><td></td></tr><tr><td>T431</td><td>Extended grouping capabilities</td><td>NO</td><td></td></tr><tr><td>T432</td><td>Nested and concatenated <code>GROUPING SETS</code></td><td>NO</td><td></td></tr><tr><td>T433</td><td>Multiargument <code>GROUPING</code> function</td><td>NO</td><td></td></tr><tr><td>T434</td><td><code>GROUP BY DISTINCT</code></td><td>NO</td><td></td></tr><tr><td>T441</td><td><code>ABS</code> and <code>MOD</code> functions</td><td>YES</td><td></td></tr><tr><td>T461</td><td>Symmetric <code>BETWEEN</code> predicate</td><td>YES</td><td></td></tr><tr><td>T471</td><td>Result sets return value</td><td>NO</td><td></td></tr><tr><td>T491</td><td><code>LATERAL</code> derived table</td><td>NO</td><td></td></tr><tr><td>T501</td><td>Enhanced <code>EXISTS</code> predicate</td><td>NO</td><td></td></tr><tr><td>T511</td><td>Transaction counts</td><td>NO</td><td></td></tr><tr><td>T541</td><td>Updatable table references</td><td>NO</td><td></td></tr><tr><td>T561</td><td>Holdable locators</td><td>NO</td><td></td></tr><tr><td>T571</td><td>Array-returning external SQL-invoked functions</td><td>NO</td><td></td></tr><tr><td>T572</td><td>Multiset-returning external SQL-invoked functions</td><td>NO</td><td></td></tr><tr><td>T581</td><td>Regular expression substring function</td><td>YES</td><td></td></tr><tr><td>T591</td><td><code>UNIQUE</code> constraints of possibly null columns</td><td>YES</td><td></td></tr><tr><td>T601</td><td>Local cursor references</td><td>NO</td><td></td></tr><tr><td>T611</td><td>Elementary OLAP operations</td><td>YES</td><td></td></tr><tr><td>T612</td><td>Advanced OLAP operations</td><td>NO</td><td>Partially supported</td></tr><tr><td>T613</td><td>Sampling</td><td>NO</td><td></td></tr><tr><td>T614</td><td><code>NTILE</code> function</td><td>YES</td><td></td></tr><tr><td>T615</td><td><code>LEAD</code> and <code>LAG</code> functions</td><td>YES</td><td></td></tr><tr><td>T616</td><td>Null treatment option for <code>LEAD</code> and <code>LAG</code> functions</td><td>NO</td><td></td></tr><tr><td>T617</td><td><code>FIRST_VALUE</code> and <code>LAST_VALUE</code> function</td><td>YES</td><td></td></tr><tr><td>T618</td><td><code>NTH_VALUE</code></td><td>NO</td><td>Function exists in WarehousePG but not all options are supported</td></tr><tr><td>T621</td><td>Enhanced numeric functions</td><td>YES</td><td></td></tr><tr><td>T631</td><td>N predicate with one list element</td><td>NO</td><td></td></tr><tr><td>T641</td><td>Multiple column assignment</td><td>NO</td><td>Some syntax variants supported</td></tr><tr><td>T651</td><td>SQL-schema statements in SQL routines</td><td>NO</td><td></td></tr><tr><td>T652</td><td>SQL-dynamic statements in SQL routines</td><td>NO</td><td></td></tr><tr><td>T653</td><td>SQL-schema statements in external routines</td><td>NO</td><td></td></tr><tr><td>T654</td><td>SQL-dynamic statements in external routines</td><td>NO</td><td></td></tr><tr><td>T655</td><td>Cyclically dependent routines</td><td>NO</td><td></td></tr><tr><td>M001</td><td>Datalinks</td><td>NO</td><td></td></tr><tr><td>M002</td><td>Datalinks via SQL/CLI</td><td>NO</td><td></td></tr><tr><td>M003</td><td>Datalinks via Embedded SQL</td><td>NO</td><td></td></tr><tr><td>M004</td><td>Foreign data support</td><td>NO</td><td></td></tr><tr><td>M005</td><td>Foreign schema support</td><td>NO</td><td></td></tr><tr><td>M006</td><td>GetSQLString routine</td><td>NO</td><td></td></tr><tr><td>M007</td><td>TransmitRequest</td><td>NO</td><td></td></tr><tr><td>M009</td><td>GetOpts and GetStatistics routines</td><td>NO</td><td></td></tr><tr><td>M010</td><td>Foreign data wrapper support</td><td>NO</td><td></td></tr><tr><td>M011</td><td>Datalinks via Ada</td><td>NO</td><td></td></tr><tr><td>M012</td><td>Datalinks via C</td><td>NO</td><td></td></tr><tr><td>M013</td><td>Datalinks via COBOL</td><td>NO</td><td></td></tr><tr><td>M014</td><td>Datalinks via Fortran</td><td>NO</td><td></td></tr><tr><td>M015</td><td>Datalinks via M</td><td>NO</td><td></td></tr><tr><td>M016</td><td>Datalinks via Pascal</td><td>NO</td><td></td></tr><tr><td>M017</td><td>Datalinks via PL/I</td><td>NO</td><td></td></tr><tr><td>M018</td><td>Foreign data wrapper interface routines in Ada</td><td>NO</td><td></td></tr><tr><td>M019</td><td>Foreign data wrapper interface routines in C</td><td>NO</td><td></td></tr><tr><td>M020</td><td>Foreign data wrapper interface routines in COBOL</td><td>NO</td><td></td></tr><tr><td>M021</td><td>Foreign data wrapper interface routines in Fortran</td><td>NO</td><td></td></tr><tr><td>M022</td><td>Foreign data wrapper interface routines in MUMPS</td><td>NO</td><td></td></tr><tr><td>M023</td><td>Foreign data wrapper interface routines in Pascal</td><td>NO</td><td></td></tr><tr><td>M024</td><td>Foreign data wrapper interface routines in PL/I</td><td>NO</td><td></td></tr><tr><td>M030</td><td>SQL-server foreign data support</td><td>NO</td><td></td></tr><tr><td>M031</td><td>Foreign data wrapper general routines</td><td>NO</td><td></td></tr><tr><td>X010</td><td>XML type</td><td>YES</td><td></td></tr><tr><td>X011</td><td>Arrays of XML type</td><td>YES</td><td></td></tr><tr><td>X012</td><td>Multisets of XML type</td><td>NO</td><td></td></tr><tr><td>X013</td><td>Distinct types of XML type</td><td>NO</td><td></td></tr><tr><td>X014</td><td>Attributes of XML type</td><td>NO</td><td></td></tr><tr><td>X015</td><td>Fields of XML type</td><td>NO</td><td></td></tr><tr><td>X016</td><td>Persistent XML values</td><td>YES</td><td></td></tr><tr><td>X020</td><td>XMLConcat</td><td>YES</td><td>xmlconcat2() supported</td></tr><tr><td>X025</td><td>XMLCast</td><td>NO</td><td></td></tr><tr><td>X030</td><td>XMLDocument</td><td>NO</td><td></td></tr><tr><td>X031</td><td>XMLElement</td><td>YES</td><td></td></tr><tr><td>X032</td><td>XMLForest</td><td>YES</td><td></td></tr><tr><td>X034</td><td>XMLAgg</td><td>YES</td><td></td></tr><tr><td>X035</td><td>XMLAgg: ORDER BY option</td><td>YES</td><td></td></tr><tr><td>X036</td><td>XMLComment</td><td>YES</td><td></td></tr><tr><td>X037</td><td>XMLPI</td><td>YES</td><td></td></tr><tr><td>X038</td><td>XMLText</td><td>NO</td><td></td></tr><tr><td>X040</td><td>Basic table mapping</td><td>NO</td><td></td></tr><tr><td>X041</td><td>Basic table mapping: nulls absent</td><td>NO</td><td></td></tr><tr><td>X042</td><td>Basic table mapping: null as nil</td><td>NO</td><td></td></tr><tr><td>X043</td><td>Basic table mapping: table as forest</td><td>NO</td><td></td></tr><tr><td>X044</td><td>Basic table mapping: table as element</td><td>NO</td><td></td></tr><tr><td>X045</td><td>Basic table mapping: with target namespace</td><td>NO</td><td></td></tr><tr><td>X046</td><td>Basic table mapping: data mapping</td><td>NO</td><td></td></tr><tr><td>X047</td><td>Basic table mapping: metadata mapping</td><td>NO</td><td></td></tr><tr><td>X048</td><td>Basic table mapping: base64 encoding of binary strings</td><td>NO</td><td></td></tr><tr><td>X049</td><td>Basic table mapping: hex encoding of binary strings</td><td>NO</td><td></td></tr><tr><td>X051</td><td>Advanced table mapping: nulls absent</td><td>NO</td><td></td></tr><tr><td>X052</td><td>Advanced table mapping: null as nil</td><td>NO</td><td></td></tr><tr><td>X053</td><td>Advanced table mapping: table as forest</td><td>NO</td><td></td></tr><tr><td>X054</td><td>Advanced table mapping: table as element</td><td>NO</td><td></td></tr><tr><td>X055</td><td>Advanced table mapping: target namespace</td><td>NO</td><td></td></tr><tr><td>X056</td><td>Advanced table mapping: data mapping</td><td>NO</td><td></td></tr><tr><td>X057</td><td>Advanced table mapping: metadata mapping</td><td>NO</td><td></td></tr><tr><td>X058</td><td>Advanced table mapping: base64 encoding of binary strings</td><td>NO</td><td></td></tr><tr><td>X059</td><td>Advanced table mapping: hex encoding of binary strings</td><td>NO</td><td></td></tr><tr><td>X060</td><td>XMLParse: Character string input and CONTENT option</td><td>YES</td><td></td></tr><tr><td>X061</td><td>XMLParse: Character string input and DOCUMENT option</td><td>YES</td><td></td></tr><tr><td>X065</td><td>XMLParse: BLOB input and CONTENT option</td><td>NO</td><td></td></tr><tr><td>X066</td><td>XMLParse: BLOB input and DOCUMENT option</td><td>NO</td><td></td></tr><tr><td>X068</td><td>XMLSerialize: BOM</td><td>NO</td><td></td></tr><tr><td>X069</td><td>XMLSerialize: INDENT</td><td>NO</td><td></td></tr><tr><td>X070</td><td>XMLSerialize: Character string serialization and CONTENT option</td><td>YES</td><td></td></tr><tr><td>X071</td><td>XMLSerialize: Character string serialization and DOCUMENT option</td><td>YES</td><td></td></tr><tr><td>X072</td><td>XMLSerialize: Character string serialization</td><td>YES</td><td></td></tr><tr><td>X073</td><td>XMLSerialize: BLOB serialization and CONTENT option</td><td>NO</td><td></td></tr><tr><td>X074</td><td>XMLSerialize: BLOB serialization and DOCUMENT option</td><td>NO</td><td></td></tr><tr><td>X075</td><td>XMLSerialize: BLOB serialization</td><td>NO</td><td></td></tr><tr><td>X076</td><td>XMLSerialize: VERSION</td><td>NO</td><td></td></tr><tr><td>X077</td><td>XMLSerialize: explicit ENCODING option</td><td>NO</td><td></td></tr><tr><td>X078</td><td>XMLSerialize: explicit XML declaration</td><td>NO</td><td></td></tr><tr><td>X080</td><td>Namespaces in XML publishing</td><td>NO</td><td></td></tr><tr><td>X081</td><td>Query-level XML namespace declarations</td><td>NO</td><td></td></tr><tr><td>X082</td><td>XML namespace declarations in DML</td><td>NO</td><td></td></tr><tr><td>X083</td><td>XML namespace declarations in DDL</td><td>NO</td><td></td></tr><tr><td>X084</td><td>XML namespace declarations in compound statements</td><td>NO</td><td></td></tr><tr><td>X085</td><td>Predefined namespace prefixes</td><td>NO</td><td></td></tr><tr><td>X086</td><td>XML namespace declarations in XMLTable</td><td>NO</td><td></td></tr><tr><td>X090</td><td>XML document predicate</td><td>NO</td><td>xml_is_well_formed_document() supported</td></tr><tr><td>X091</td><td>XML content predicate</td><td>NO</td><td>xml_is_well_formed_content() supported</td></tr><tr><td>X096</td><td>XMLExists</td><td>NO</td><td>xmlexists() supported</td></tr><tr><td>X100</td><td>Host language support for XML: CONTENT option</td><td>NO</td><td></td></tr><tr><td>X101</td><td>Host language support for XML: DOCUMENT option</td><td>NO</td><td></td></tr><tr><td>X110</td><td>Host language support for XML: VARCHAR mapping</td><td>NO</td><td></td></tr><tr><td>X111</td><td>Host language support for XML: CLOB mapping</td><td>NO</td><td></td></tr><tr><td>X112</td><td>Host language support for XML: BLOB mapping</td><td>NO</td><td></td></tr><tr><td>X113</td><td>Host language support for XML: STRIP WHITESPACE option</td><td>YES</td><td></td></tr><tr><td>X114</td><td>Host language support for XML: PRESERVE WHITESPACE option</td><td>YES</td><td></td></tr><tr><td>X120</td><td>XML parameters in SQL routines</td><td>YES</td><td></td></tr><tr><td>X121</td><td>XML parameters in external routines</td><td>YES</td><td></td></tr><tr><td>X131</td><td>Query-level XMLBINARY clause</td><td>NO</td><td></td></tr><tr><td>X132</td><td>XMLBINARY clause in DML</td><td>NO</td><td></td></tr><tr><td>X133</td><td>XMLBINARY clause in DDL</td><td>NO</td><td></td></tr><tr><td>X134</td><td>XMLBINARY clause in compound statements</td><td>NO</td><td></td></tr><tr><td>X135</td><td>XMLBINARY clause in subqueries</td><td>NO</td><td></td></tr><tr><td>X141</td><td>IS VALID predicate: data-driven case</td><td>NO</td><td></td></tr><tr><td>X142</td><td>IS VALID predicate: ACCORDING TO clause</td><td>NO</td><td></td></tr><tr><td>X143</td><td>IS VALID predicate: ELEMENT clause</td><td>NO</td><td></td></tr><tr><td>X144</td><td>IS VALID predicate: schema location</td><td>NO</td><td></td></tr><tr><td>X145</td><td>IS VALID predicate outside check constraints</td><td>NO</td><td></td></tr><tr><td>X151</td><td>IS VALID predicate with DOCUMENT option</td><td>NO</td><td></td></tr><tr><td>X152</td><td>IS VALID predicate with CONTENT option</td><td>NO</td><td></td></tr><tr><td>X153</td><td>IS VALID predicate with SEQUENCE option</td><td>NO</td><td></td></tr><tr><td>X155</td><td>IS VALID predicate: NAMESPACE without ELEMENT clause</td><td>NO</td><td></td></tr><tr><td>X157</td><td>IS VALID predicate: NO NAMESPACE with ELEMENT clause</td><td>NO</td><td></td></tr><tr><td>X160</td><td>Basic Information Schema for registered XML Schemas</td><td>NO</td><td></td></tr><tr><td>X161</td><td>Advanced Information Schema for registered XML Schemas</td><td>NO</td><td></td></tr><tr><td>X170</td><td>XML null handling options</td><td>NO</td><td></td></tr><tr><td>X171</td><td>NIL ON NO CONTENT option</td><td>NO</td><td></td></tr><tr><td>X181</td><td>XML( DOCUMENT (UNTYPED)) type</td><td>NO</td><td></td></tr><tr><td>X182</td><td>XML( DOCUMENT (ANY)) type</td><td>NO</td><td></td></tr><tr><td>X190</td><td>XML( SEQUENCE) type</td><td>NO</td><td></td></tr><tr><td>X191</td><td>XML( DOCUMENT (XMLSCHEMA )) type</td><td>NO</td><td></td></tr><tr><td>X192</td><td>XML( CONTENT (XMLSCHEMA)) type</td><td>NO</td><td></td></tr><tr><td>X200</td><td>XMLQuery</td><td>NO</td><td></td></tr><tr><td>X201</td><td>XMLQuery: RETURNING CONTENT</td><td>NO</td><td></td></tr><tr><td>X202</td><td>XMLQuery: RETURNING SEQUENCE</td><td>NO</td><td></td></tr><tr><td>X203</td><td>XMLQuery: passing a context item</td><td>NO</td><td></td></tr><tr><td>X204</td><td>XMLQuery: initializing an XQuery variable</td><td>NO</td><td></td></tr><tr><td>X205</td><td>XMLQuery: EMPTY ON EMPTY option</td><td>NO</td><td></td></tr><tr><td>X206</td><td>XMLQuery: NULL ON EMPTY option</td><td>NO</td><td></td></tr><tr><td>X211</td><td>XML 1.1 support</td><td>NO</td><td></td></tr><tr><td>X221</td><td>XML passing mechanism BY VALUE</td><td>NO</td><td></td></tr><tr><td>X222</td><td>XML passing mechanism BY REF</td><td>NO</td><td></td></tr><tr><td>X231</td><td>XML( CONTENT (UNTYPED )) type</td><td>NO</td><td></td></tr><tr><td>X232</td><td>XML( CONTENT (ANY )) type</td><td>NO</td><td></td></tr><tr><td>X241</td><td>RETURNING CONTENT in XML publishing</td><td>NO</td><td></td></tr><tr><td>X242</td><td>RETURNING SEQUENCE in XML publishing</td><td>NO</td><td></td></tr><tr><td>X251</td><td>Persistent XML values of XML( DOCUMENT (UNTYPED )) type</td><td>NO</td><td></td></tr><tr><td>X252</td><td>Persistent XML values of XML( DOCUMENT (ANY)) type</td><td>NO</td><td></td></tr><tr><td>X253</td><td>Persistent XML values of XML( CONTENT (UNTYPED)) type</td><td>NO</td><td></td></tr><tr><td>X254</td><td>Persistent XML values of XML( CONTENT (ANY)) type</td><td>NO</td><td></td></tr><tr><td>X255</td><td>Persistent XML values of XML( SEQUENCE) type</td><td>NO</td><td></td></tr><tr><td>X256</td><td>Persistent XML values of XML( DOCUMENT (XMLSCHEMA)) type</td><td>NO</td><td></td></tr><tr><td>X257</td><td>Persistent XML values of XML( CONTENT (XMLSCHEMA ) type</td><td>NO</td><td></td></tr><tr><td>X260</td><td>XML type: ELEMENT clause</td><td>NO</td><td></td></tr><tr><td>X261</td><td>XML type: NAMESPACE without ELEMENT clause</td><td>NO</td><td></td></tr><tr><td>X263</td><td>XML type: NO NAMESPACE with ELEMENT clause</td><td>NO</td><td></td></tr><tr><td>X264</td><td>XML type: schema location</td><td>NO</td><td></td></tr><tr><td>X271</td><td>XMLValidate: data-driven case</td><td>NO</td><td></td></tr><tr><td>X272</td><td>XMLValidate: ACCORDING TO clause</td><td>NO</td><td></td></tr><tr><td>X273</td><td>XMLValidate: ELEMENT clause</td><td>NO</td><td></td></tr><tr><td>X274</td><td>XMLValidate: schema location</td><td>NO</td><td></td></tr><tr><td>X281</td><td>XMLValidate: with DOCUMENT option</td><td>NO</td><td></td></tr><tr><td>X282</td><td>XMLValidate with CONTENT option</td><td>NO</td><td></td></tr><tr><td>X283</td><td>XMLValidate with SEQUENCE option</td><td>NO</td><td></td></tr><tr><td>X284</td><td>XMLValidate NAMESPACE without ELEMENT clause</td><td>NO</td><td></td></tr><tr><td>X286</td><td>XMLValidate: NO NAMESPACE with ELEMENT clause</td><td>NO</td><td></td></tr><tr><td>X300</td><td>XMLTable</td><td>NO</td><td></td></tr><tr><td>X301</td><td>XMLTable: derived column list option</td><td>NO</td><td></td></tr><tr><td>X302</td><td>XMLTable: ordinality column option</td><td>NO</td><td></td></tr><tr><td>X303</td><td>XMLTable: column default option</td><td>NO</td><td></td></tr><tr><td>X304</td><td>XMLTable: passing a context item</td><td>NO</td><td></td></tr><tr><td>X305</td><td>XMLTable: initializing an XQuery variable</td><td>NO</td><td></td></tr><tr><td>X400</td><td>Name and identifier mapping</td><td>NO</td><td></td></tr></tbody></table>',4)]))}const O=d(a,[["render",c]]);export{S as __pageData,O as default};
