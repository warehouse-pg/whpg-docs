import{_ as s,c as a,o as t,ag as o}from"./chunks/framework.Ds6Eueu6.js";const u=JSON.parse('{"title":"SET ROLE","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/ref_guide/sql_commands/SET_ROLE.md","filePath":"docs/7x/ref_guide/sql_commands/SET_ROLE.md"}'),n={name:"docs/7x/ref_guide/sql_commands/SET_ROLE.md"};function i(r,e,l,c,d,p){return t(),a("div",null,e[0]||(e[0]=[o(`<h1 id="set-role" tabindex="-1">SET ROLE <a class="header-anchor" href="#set-role" aria-label="Permalink to &quot;SET ROLE&quot;">​</a></h1><p>Sets the current role identifier of the current session.</p><h2 id="synopsis" tabindex="-1"><a id="section2"></a>Synopsis <a class="header-anchor" href="#synopsis" aria-label="Permalink to &quot;&lt;a id=&quot;section2&quot;&gt;&lt;/a&gt;Synopsis&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SET [SESSION | LOCAL] ROLE &lt;rolename&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>SET [SESSION | LOCAL] ROLE NONE</span></span>
<span class="line"><span></span></span>
<span class="line"><span>RESET ROLE</span></span></code></pre></div><h2 id="description" tabindex="-1"><a id="section3"></a>Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;&lt;a id=&quot;section3&quot;&gt;&lt;/a&gt;Description&quot;">​</a></h2><p>This command sets the current role identifier of the current SQL-session context to be rolename. The role name may be written as either an identifier or a string literal. After <code>SET ROLE</code>, permissions checking for SQL commands is carried out as though the named role were the one that had logged in originally.</p><p>The specified rolename must be a role that the current session user is a member of. If the session user is a superuser, any role can be selected.</p><p>The <code>NONE</code> and <code>RESET</code> forms reset the current role identifier to be the current session role identifier. These forms may be run by any user.</p><h2 id="parameters" tabindex="-1"><a id="section4"></a>Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;&lt;a id=&quot;section4&quot;&gt;&lt;/a&gt;Parameters&quot;">​</a></h2><p>SESSION : Specifies that the command takes effect for the current session. This is the default.</p><p>LOCAL : Specifies that the command takes effect for only the current transaction. After <code>COMMIT</code> or <code>ROLLBACK</code>, the session-level setting takes effect again. Note that <code>SET LOCAL</code> will appear to have no effect if it is run outside of a transaction.</p><p>rolename : The name of a role to use for permissions checking in this session.</p><p>NONE RESET : Reset the current role identifier to be the current session role identifier (that of the role used to log in).</p><h2 id="notes" tabindex="-1"><a id="section5"></a>Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;&lt;a id=&quot;section5&quot;&gt;&lt;/a&gt;Notes&quot;">​</a></h2><p>Using this command, it is possible to either add privileges or restrict privileges. If the session user role has the <code>INHERITS</code> attribute, then it automatically has all the privileges of every role that it could <code>SET ROLE</code> to; in this case <code>SET ROLE</code> effectively drops all the privileges assigned directly to the session user and to the other roles it is a member of, leaving only the privileges available to the named role. On the other hand, if the session user role has the <code>NOINHERITS</code> attribute, <code>SET ROLE</code> drops the privileges assigned directly to the session user and instead acquires the privileges available to the named role.</p><p>In particular, when a superuser chooses to <code>SET ROLE</code> to a non-superuser role, they lose their superuser privileges.</p><p><code>SET ROLE</code> has effects comparable to <code>SET SESSION AUTHORIZATION</code>, but the privilege checks involved are quite different. Also, <code>SET SESSION AUTHORIZATION</code> determines which roles are allowable for later <code>SET ROLE</code> commands, whereas changing roles with <code>SET ROLE</code> does not change the set of roles allowed to a later <code>SET ROLE</code>.</p><p><code>SET ROLE</code> does not process session variables specified by the role&#39;s <code>ALTER ROLE</code> settings; the session variables are only processed during login.</p><h2 id="examples" tabindex="-1"><a id="section6"></a>Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;&lt;a id=&quot;section6&quot;&gt;&lt;/a&gt;Examples&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SELECT SESSION_USER, CURRENT_USER;</span></span>
<span class="line"><span> session_user | current_user </span></span>
<span class="line"><span>--------------+--------------</span></span>
<span class="line"><span> peter        | peter</span></span>
<span class="line"><span></span></span>
<span class="line"><span>SET ROLE &#39;paul&#39;;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>SELECT SESSION_USER, CURRENT_USER;</span></span>
<span class="line"><span> session_user | current_user </span></span>
<span class="line"><span>--------------+--------------</span></span>
<span class="line"><span> peter        | paul</span></span></code></pre></div><h2 id="compatibility" tabindex="-1"><a id="section7"></a>Compatibility <a class="header-anchor" href="#compatibility" aria-label="Permalink to &quot;&lt;a id=&quot;section7&quot;&gt;&lt;/a&gt;Compatibility&quot;">​</a></h2><p>WarehousePG allows identifier syntax (rolename), while the SQL standard requires the role name to be written as a string literal. SQL does not allow this command during a transaction; WarehousePG does not make this restriction. The <code>SESSION</code> and <code>LOCAL</code> modifiers are a WarehousePG extension, as is the <code>RESET</code> syntax.</p><h2 id="see-also" tabindex="-1"><a id="section8"></a>See Also <a class="header-anchor" href="#see-also" aria-label="Permalink to &quot;&lt;a id=&quot;section8&quot;&gt;&lt;/a&gt;See Also&quot;">​</a></h2><p><a href="./SET_SESSION_AUTHORIZATION.html">SET SESSION AUTHORIZATION</a></p><p><strong>Parent topic:</strong> <a href="./../sql_commands/sql_ref.html">SQL Commands</a></p>`,25)]))}const m=s(n,[["render",i]]);export{u as __pageData,m as default};
