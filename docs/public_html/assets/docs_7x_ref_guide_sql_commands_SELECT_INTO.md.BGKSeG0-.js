import{_ as a,c as t,o as s,ag as n}from"./chunks/framework.Ds6Eueu6.js";const h=JSON.parse('{"title":"SELECT INTO","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/ref_guide/sql_commands/SELECT_INTO.md","filePath":"docs/7x/ref_guide/sql_commands/SELECT_INTO.md"}'),o={name:"docs/7x/ref_guide/sql_commands/SELECT_INTO.md"};function i(l,e,c,r,p,d){return s(),t("div",null,e[0]||(e[0]=[n(`<h1 id="select-into" tabindex="-1">SELECT INTO <a class="header-anchor" href="#select-into" aria-label="Permalink to &quot;SELECT INTO&quot;">​</a></h1><p>Defines a new table from the results of a query.</p><h2 id="synopsis" tabindex="-1"><a id="section2"></a>Synopsis <a class="header-anchor" href="#synopsis" aria-label="Permalink to &quot;&lt;a id=&quot;section2&quot;&gt;&lt;/a&gt;Synopsis&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[ WITH [ RECURSIVE ] &lt;with_query&gt; [, ...] ]</span></span>
<span class="line"><span>SELECT [ALL | DISTINCT [ON ( &lt;expression&gt; [, ...] )]]</span></span>
<span class="line"><span>    * | &lt;expression&gt; [ [AS] &lt;output_name&gt; ] [, ...]</span></span>
<span class="line"><span>    INTO [TEMPORARY | TEMP | UNLOGGED ] [TABLE] &lt;new_table&gt;</span></span>
<span class="line"><span>    [FROM &lt;from_item&gt; [, ...]]</span></span>
<span class="line"><span>    [WHERE &lt;condition&gt;]</span></span>
<span class="line"><span>    [GROUP BY &lt;expression&gt; [, ...]]</span></span>
<span class="line"><span>    [HAVING &lt;condition&gt; [, ...]]</span></span>
<span class="line"><span>    [WINDOW &lt;window_name&gt; AS ( &lt;window_definition&gt; ) [, ...]]</span></span>
<span class="line"><span>    [{UNION | INTERSECT | EXCEPT} [ALL | DISTINCT ] &lt;select&gt;]</span></span>
<span class="line"><span>    [ORDER BY &lt;expression&gt; [ASC | DESC | USING &lt;operator&gt;] [NULLS {FIRST | LAST}] [, ...]]</span></span>
<span class="line"><span>    [LIMIT {&lt;count&gt; | ALL}]</span></span>
<span class="line"><span>    [OFFSET &lt;start&gt; [ ROW | ROWS ] ]</span></span>
<span class="line"><span>    [FETCH { FIRST | NEXT } [ &lt;count&gt; ] { ROW | ROWS } ONLY ]</span></span>
<span class="line"><span>    [FOR {UPDATE | SHARE} [OF &lt;table_name&gt; [, ...]] [NOWAIT] [...]]</span></span></code></pre></div><h2 id="description" tabindex="-1"><a id="section3"></a>Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;&lt;a id=&quot;section3&quot;&gt;&lt;/a&gt;Description&quot;">​</a></h2><p><code>SELECT INTO</code> creates a new table and fills it with data computed by a query. The data is not returned to the client, as it is with a normal <code>SELECT</code>. The new table&#39;s columns have the names and data types associated with the output columns of the <code>SELECT</code>.</p><h2 id="parameters" tabindex="-1"><a id="section4"></a>Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;&lt;a id=&quot;section4&quot;&gt;&lt;/a&gt;Parameters&quot;">​</a></h2><p>TEMPORARY TEMP : If specified, the table is created as a temporary table. Refer to <a href="./CREATE_TABLE.html">CREATE TABLE</a> for details.</p><p>UNLOGGED : If specified, the table is created as an unlogged table. Refer to <a href="./CREATE_TABLE.html">CREATE TABLE</a> for details.</p><p>new_table : The name (optionally schema-qualified) of the table to be created.</p><p>All other parameters for <code>SELECT INTO</code> are described in detail on the <a href="./SELECT.html">SELECT</a> reference page.</p><h2 id="notes" tabindex="-1"><a id="section4n"></a>Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;&lt;a id=&quot;section4n&quot;&gt;&lt;/a&gt;Notes&quot;">​</a></h2><p><a href="./CREATE_TABLE_AS.html">CREATE TABLE AS</a> is functionally similar to <code>SELECT INTO</code>. <code>CREATE TABLE AS</code> is the recommended syntax, since this form of <code>SELECT INTO</code> is not available in ECPG or PL/pgSQL, because they interpret the <code>INTO</code> clause differently. Also, <code>CREATE TABLE AS</code> offers a superset of the functionality provided by <code>SELECT INTO</code>.</p><p>In contrast to <code>CREATE TABLE AS</code>, <code>SELECT INTO</code> does not allow specifying properties like a table&#39;s access method with <code>USING &lt;method&gt;</code> or the table&#39;s tablespace with <code>TABLESPACE &lt;tablespace_name&gt;</code>. Use <a href="./CREATE_TABLE_AS.html">CREATE TABLE AS</a> if necessary. Therefore, the default table access method is chosen for the new table. See <a href="./../config_params/guc-list.html#default_table_access_method">default_table_access_method</a> for more information.</p><h2 id="examples" tabindex="-1"><a id="section5"></a>Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;&lt;a id=&quot;section5&quot;&gt;&lt;/a&gt;Examples&quot;">​</a></h2><p>Create a new table <code>films_recent</code> consisting only of recent entries from the table <code>films</code>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SELECT * INTO films_recent FROM films WHERE date_prod &gt;= &#39;2016-01-01&#39;;</span></span></code></pre></div><h2 id="compatibility" tabindex="-1"><a id="section6"></a>Compatibility <a class="header-anchor" href="#compatibility" aria-label="Permalink to &quot;&lt;a id=&quot;section6&quot;&gt;&lt;/a&gt;Compatibility&quot;">​</a></h2><p>The SQL standard uses <code>SELECT INTO</code> to represent selecting values into scalar variables of a host program, rather than creating a new table. The WarehousePG usage of <code>SELECT INTO</code> to represent table creation is historical. It is best to use <a href="./CREATE_TABLE_AS.html">CREATE TABLE AS</a> for this purpose in new applications.</p><h2 id="see-also" tabindex="-1"><a id="section7"></a>See Also <a class="header-anchor" href="#see-also" aria-label="Permalink to &quot;&lt;a id=&quot;section7&quot;&gt;&lt;/a&gt;See Also&quot;">​</a></h2><p><a href="./SELECT.html">SELECT</a>, <a href="./CREATE_TABLE_AS.html">CREATE TABLE AS</a></p><p><strong>Parent topic:</strong> <a href="./../sql_commands/sql_ref.html">SQL Commands</a></p>`,22)]))}const T=a(o,[["render",i]]);export{h as __pageData,T as default};
