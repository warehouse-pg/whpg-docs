import{_ as a,c as t,o,ag as n}from"./chunks/framework.Ds6Eueu6.js";const u=JSON.parse('{"title":"Identifying and Mitigating Heap Table Performance Issues","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/best_practices/heap_tables.md","filePath":"docs/7x/best_practices/heap_tables.md"}'),s={name:"docs/7x/best_practices/heap_tables.md"};function i(r,e,d,l,c,p){return o(),t("div",null,e[0]||(e[0]=[n('<h1 id="identifying-and-mitigating-heap-table-performance-issues" tabindex="-1">Identifying and Mitigating Heap Table Performance Issues <a class="header-anchor" href="#identifying-and-mitigating-heap-table-performance-issues" aria-label="Permalink to &quot;Identifying and Mitigating Heap Table Performance Issues&quot;">​</a></h1><hr><h2 id="slow-or-hanging-jobs" tabindex="-1"><a id="bulkloadslow"></a>Slow or Hanging Jobs <a class="header-anchor" href="#slow-or-hanging-jobs" aria-label="Permalink to &quot;&lt;a id=&quot;bulkloadslow&quot;&gt;&lt;/a&gt;Slow or Hanging Jobs&quot;">​</a></h2><p><strong>Symptom</strong>:</p><p>The first scan of tuples after bulk data load, modification, or deletion jobs on heap tables are running slow or hanging.</p><p><strong>Potential Cause</strong>:</p><p>When a workload involves a bulk load, modification, or deletion of data in a heap table, the first scan post-operation may generate a large amount of WAL data when checksums are enabled (<code>data_check_sums=true</code>) or hint bits are logged (<code>wal_log_hints=true</code>), leading to slow or hung jobs.</p><p>Affected workloads include: restoring from a backup, loading data with or <code>COPY</code>, cluster expansion, <code>CTAS</code>/<code>INSERT</code>/<code>UPDATE</code>/<code>DELETE</code> operations, and <code>ALTER TABLE</code> operations that modify tuples.</p><p><strong>Explanation</strong>:</p><p>WarehousePG uses hint bits to mark tuples as created and/or deleted by transactions. Hint bits, when set, can help in determining visibility of tuples without expensive <code>pg_xact</code> and <code>pg_subtrans</code> commit log lookups.</p><p>Hint bits are updated for every tuple on the first scan of the tuple after its creation or deletion. Because hint bits are checked and set on a per-tuple basis, even a read can result in heavy writes. When data checksums are enabled for heap tables (the default), hint bit updates are always WAL-logged.</p><p><strong>Solution</strong>:</p><p>If you have restored or loaded a complete database comprised primarily of heap tables, you may choose to run <code>VACUUM</code> against the entire database.</p><p>Alternatively, if you can identify the individual tables affected, you have two options:</p><ol><li><p>Schedule and take a maintenance window and run <code>VACUUM</code> on the specific tables that have been loaded, updated, or deleted in bulk. This operation should scan all of the tuples and set and WAL-log the hint bits, taking the performance hit up-front.</p></li><li><p>Run <code>SELECT count(*) FROM &lt;table-name&gt;</code> on each table. This operation similarly scans all of the tuples and sets and WAL-logs the hint bits.</p></li></ol><p>All subsequent scans as part of regular workloads on the tables should not be required to generate hints or their accompanying full page image WAL records.</p>',16)]))}const g=a(s,[["render",i]]);export{u as __pageData,g as default};
