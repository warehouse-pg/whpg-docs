import{_ as a,c as t,o,ag as s}from"./chunks/framework.Ds6Eueu6.js";const u=JSON.parse('{"title":"DROP OPERATOR","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/ref_guide/sql_commands/DROP_OPERATOR.md","filePath":"docs/7x/ref_guide/sql_commands/DROP_OPERATOR.md"}'),i={name:"docs/7x/ref_guide/sql_commands/DROP_OPERATOR.md"};function n(p,e,r,d,l,c){return o(),t("div",null,e[0]||(e[0]=[s(`<h1 id="drop-operator" tabindex="-1">DROP OPERATOR <a class="header-anchor" href="#drop-operator" aria-label="Permalink to &quot;DROP OPERATOR&quot;">​</a></h1><p>Removes an operator.</p><h2 id="synopsis" tabindex="-1"><a id="section2"></a>Synopsis <a class="header-anchor" href="#synopsis" aria-label="Permalink to &quot;&lt;a id=&quot;section2&quot;&gt;&lt;/a&gt;Synopsis&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>DROP OPERATOR [IF EXISTS] &lt;name&gt; ( {&lt;left_type&gt; | NONE} , </span></span>
<span class="line"><span>    {&lt;right_type&gt; | NONE} ) [, ...] [CASCADE | RESTRICT]</span></span></code></pre></div><h2 id="description" tabindex="-1"><a id="section3"></a>Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;&lt;a id=&quot;section3&quot;&gt;&lt;/a&gt;Description&quot;">​</a></h2><p><code>DROP OPERATOR</code> drops an existing operator from the database system. To run this command you must be the owner of the operator.</p><h2 id="parameters" tabindex="-1"><a id="section4"></a>Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;&lt;a id=&quot;section4&quot;&gt;&lt;/a&gt;Parameters&quot;">​</a></h2><p>IF EXISTS : Do not throw an error if the operator does not exist. A notice is issued in this case.</p><p>name : The name (optionally schema-qualified) of an existing operator.</p><p>left_type : The data type of the operator&#39;s left operand; write <code>NONE</code> if the operator has no left operand.</p><p>right_type : The data type of the operator&#39;s right operand; write <code>NONE</code> if the operator has no right operand.</p><p>CASCADE : Automatically drop objects that depend on the operator (such as views using it), and in turn all objects that depend on those objects.</p><p>RESTRICT : Refuse to drop the operator if any objects depend on it. This is the default.</p><h2 id="examples" tabindex="-1"><a id="section5"></a>Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;&lt;a id=&quot;section5&quot;&gt;&lt;/a&gt;Examples&quot;">​</a></h2><p>Remove the power operator <code>a^b</code> for type <code>integer</code>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>DROP OPERATOR ^ (integer, integer);</span></span></code></pre></div><p>Remove the left unary bitwise complement operator <code>~b</code> for type <code>bit</code>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>DROP OPERATOR ~ (none, bit);</span></span></code></pre></div><p>Remove the right unary factorial operator <code>x!</code> for type <code>bigint</code>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>DROP OPERATOR ! (bigint, none);</span></span></code></pre></div><p>Remove multiple operators in one command:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>DROP OPERATOR ~ (none, bit), ! (bigint, none);</span></span></code></pre></div><h2 id="compatibility" tabindex="-1"><a id="section6"></a>Compatibility <a class="header-anchor" href="#compatibility" aria-label="Permalink to &quot;&lt;a id=&quot;section6&quot;&gt;&lt;/a&gt;Compatibility&quot;">​</a></h2><p>There is no <code>DROP OPERATOR</code> statement in the SQL standard.</p><h2 id="see-also" tabindex="-1"><a id="section7"></a>See Also <a class="header-anchor" href="#see-also" aria-label="Permalink to &quot;&lt;a id=&quot;section7&quot;&gt;&lt;/a&gt;See Also&quot;">​</a></h2><p><a href="./ALTER_OPERATOR.html">ALTER OPERATOR</a>, <a href="./CREATE_OPERATOR.html">CREATE OPERATOR</a></p><p><strong>Parent topic:</strong> <a href="./../sql_commands/sql_ref.html">SQL Commands</a></p>`,27)]))}const m=a(i,[["render",n]]);export{u as __pageData,m as default};
