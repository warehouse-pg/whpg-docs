import{_ as e,c as t,o as s,ag as i}from"./chunks/framework.Ds6Eueu6.js";const h=JSON.parse('{"title":"Escaping","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/admin_guide/load/topics/g-escaping.md","filePath":"docs/7x/admin_guide/load/topics/g-escaping.md"}'),r={name:"docs/7x/admin_guide/load/topics/g-escaping.md"};function o(n,a,c,l,d,p){return s(),t("div",null,a[0]||(a[0]=[i('<h1 id="escaping" tabindex="-1">Escaping <a class="header-anchor" href="#escaping" aria-label="Permalink to &quot;Escaping&quot;">â€‹</a></h1><hr><p>There are two reserved characters that have special meaning to WarehousePG:</p><ul><li>The designated delimiter character separates columns or fields in the data file.</li><li>The newline character designates a new row in the data file.</li></ul><p>If your data contains either of these characters, you must escape the character so that WarehousePG treats it as data and not as a field separator or new row. By default, the escape character is a \\ (backslash) for text-formatted files and a double quote (&quot;) for csv-formatted files.</p><ul><li><p><strong><a href="./../../load/topics/g-escaping-in-text-formatted-files.html">Escaping in Text Formatted Files</a></strong></p></li><li><p><strong><a href="./../../load/topics/g-escaping-in-csv-formatted-files.html">Escaping in CSV Formatted Files</a></strong></p></li></ul><p><strong>Parent topic:</strong> <a href="./../../load/topics/g-formatting-data-files.html">Formatting Data Files</a></p>',7)]))}const f=e(r,[["render",o]]);export{h as __pageData,f as default};
