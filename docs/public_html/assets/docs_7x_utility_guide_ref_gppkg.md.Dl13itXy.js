import{_ as a,c as t,o as s,ag as n}from"./chunks/framework.Ds6Eueu6.js";const h=JSON.parse('{"title":"gppkg","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/utility_guide/ref/gppkg.md","filePath":"docs/7x/utility_guide/ref/gppkg.md"}'),o={name:"docs/7x/utility_guide/ref/gppkg.md"};function i(p,e,l,c,d,r){return s(),t("div",null,e[0]||(e[0]=[n(`<h1 id="gppkg" tabindex="-1">gppkg <a class="header-anchor" href="#gppkg" aria-label="Permalink to &quot;gppkg&quot;">​</a></h1><p>WarehousePG Package Manager installs, upgrades, migrates, and removes WarehousePG extensions in <code>.gppkg</code> format, such as PL/Java, PL/R, PostGIS, and MADlib, along with their dependencies, across an entire cluster.</p><h2 id="synopsis" tabindex="-1"><a id="synopsis"></a>Synopsis <a class="header-anchor" href="#synopsis" aria-label="Permalink to &quot;&lt;a id=&quot;synopsis&quot;&gt;&lt;/a&gt;Synopsis&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>gppkg &lt;command&gt; [&lt;command_options&gt; ...] </span></span>
<span class="line"><span></span></span>
<span class="line"><span>gppkg &lt;commmand&gt; --h | --help</span></span>
<span class="line"><span></span></span>
<span class="line"><span>gppkg --version</span></span>
<span class="line"><span></span></span>
<span class="line"><span>gppkg -v | --verbose</span></span></code></pre></div><h2 id="description" tabindex="-1"><a id="description"></a>Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;&lt;a id=&quot;description&quot;&gt;&lt;/a&gt;Description&quot;">​</a></h2><p>The WarehousePG Package Manager -- <code>gppkg</code> -- utility installs WarehousePG extensions, along with any dependencies, on all hosts across a cluster. It will also automatically install extensions on new hosts in the case of system expansion and segment recovery.</p><p>The <code>gppkg</code> utility does not require that WarehousePG is running in order to install packages.</p><blockquote><p><strong>Note</strong> After a major upgrade to WarehousePG, you must download and install all <code>gppkg</code> extensions again.</p></blockquote><p>Examples of database extensions and packages software that are delivered using the WarehousePG Package Manager:</p><ul><li>PL/Java</li><li>PL/R</li><li>PostGIS</li><li>MADlib</li></ul><h2 id="commands" tabindex="-1"><a id="commands"></a>Commands <a class="header-anchor" href="#commands" aria-label="Permalink to &quot;&lt;a id=&quot;commands&quot;&gt;&lt;/a&gt;Commands&quot;">​</a></h2><p><code>help</code> : Display the help for the command.</p><p><code>install &lt;package_name&gt; [&lt;command_options&gt;]</code> : Install or upgrade the specified package in the cluster. This includes any pre/post installation steps and installation of any dependencies.</p><p><code>migrate --source &lt;source_path&gt; --destination &lt;destination_path&gt; [&lt;package_name&gt;] [--pkglibs &lt;pkglibs_path&gt;] [&lt;command_options&gt;]</code> : Migrate all packages or a specific package from one minor version of WarehousePG to another. The option <code>--source &lt;source_path&gt;</code> specifies the path of the source <code>$GPHOME</code>, and the option <code>--destination &lt;destination_path&gt;</code> specifies the path of the destination <code>$GPHOME</code>. The option <code>[&lt;package_name&gt;]</code>, if used, indicates the name of a specific package to migrate. You may use <code>[&lt;package_name&gt;]</code> as a keyword, so all available packages matching the specific keyword will be migrated. If you do not use the option <code>[&lt;package_name&gt;]</code>, all packages are migrated. Additionally, the option <code>--pkglibs &lt;pkglibs_path&gt;</code> allows you to point to a location where you may place newer version packages for the destination WarehousePG version; <code>gppkg</code> will upgrade these packages automatically.</p><p><code>query [&lt;package_name_string&gt;] [&lt;query_option&gt;] [&lt;command_options&gt;]</code> : Display information about the extensions installed in the cluster. <code>&lt;package_name_string&gt;</code> is a string that specifies the package name. If it is an empty string, it will match all packages. If it is a simple word, it will match all packages with the word included in the name. Use <code>–-exact</code> to specify the exact package name.</p><pre><code>|query_option|Returns|
|-------------|-------|
|\`--exact\`|The provided \`&lt;package_name_string&gt;\` must match exactly a package name|
|\`--detail\`|Provide detailed information about the package|
|\`--verify\`|Verify the package installation|
|\`--local\`|Do not query at cluster level|
</code></pre><p><code>remove &lt;package_name&gt; [&lt;command_options&gt;]</code> : Uninstall the specified package from the cluster.</p><p><code>sync [&lt;command_options&gt;]</code> : Reconcile the package state of the cluster to match the state of the coordinator host. Running this option after a failed or partial install/uninstall ensures that the package installation state is consistent across the cluster.</p><h2 id="global-options" tabindex="-1"><a id="options"></a>Global Options <a class="header-anchor" href="#global-options" aria-label="Permalink to &quot;&lt;a id=&quot;options&quot;&gt;&lt;/a&gt;Global Options&quot;">​</a></h2><p><code>--cluster_info &lt;cluster_info&gt;</code> : Use this option when WarehousePG is not running. The input file <code>&lt;cluster_info&gt;</code> contains information about the database cluster. You may generate the file by running the following command:</p><pre><code>\`\`\`
psql postgres -Xc &#39;select dbid, content, role, preferred_role, mode, status, hostname, address, port, datadir from gp_segment_configuration order by content, preferred_role desc;&#39; | head -n-2 | tail -n+3 | tr -d &quot; &quot; &gt; cluster_info
\`\`\`
</code></pre><p><code>-a | --accept</code> : Do not prompt the user for confirmation.</p><p><code>-d | --dryrun</code><br> : Run a simulation for the command, without modifying anything.</p><p><code>-f | --force</code> : Skip all requirement checks and overwrite existing files. If using it with <code>gppkg remove</code>, the utility removes packages which have incomplete or missing files.</p><p><code>-h | --help</code> : Display the online help.</p><p><code>--tmpdir</code> : Specify the directory to which <code>gppkg</code> should write temporary files. If not specified, <code>gppkg</code> writes temporary files to the directory specified in the <code>TMPDIR</code> environment variable.</p><p><code>-V | --version</code> : Display the version of this utility.</p><p><code>-v | --verbose</code> : Set the logging level to verbose.</p><h2 id="examples" tabindex="-1"><a id="examples"></a>Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;&lt;a id=&quot;examples&quot;&gt;&lt;/a&gt;Examples&quot;">​</a></h2><p>Install the WarehousePG PL/Java extension:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>gppkg install ./pljava-2.0.7-gp7-rhel8_x86_64.gppkg</span></span></code></pre></div><p>Migrate all installed packages from WarehousePG version 7.0.0 to WarehousePG version 7.1.0 while the cluster is not running.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>gppkg migrate --cluster-info ./cluster_info --source /usr/local/greenplum-db-7.0.0 --destination /usr/local/greenplum-db-7.1.0</span></span></code></pre></div><p>where the file <code>./cluster_info</code> contains the following information:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1|-1|p|p|n|u|cdw|cdw|5432|/data/coordinator/gpseg-1</span></span>
<span class="line"><span>2|0|p|p|s|u|seg-02|sdw1|6000|/data/primary/gpseg0</span></span>
<span class="line"><span>6|0|m|m|s|u|seg-03|sdw2|7000|/data/mirror/gpseg0</span></span>
<span class="line"><span>3|1|p|p|s|u|seg-02|sdw1|6001|/data/primary/gpseg1</span></span>
<span class="line"><span>7|1|m|m|s|u|seg-03|sdw2|7001|/data/mirror/gpseg1</span></span></code></pre></div><p>Query all packages that are installed in a cluster:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>gppkg query </span></span>
<span class="line"><span></span></span>
<span class="line"><span>Detecting network topology:    [=========================================] [OK] </span></span>
<span class="line"><span>Detect result </span></span>
<span class="line"><span> 3 unique hosts found </span></span>
<span class="line"><span>DataSciencePython3.11 - 1.1.0</span></span></code></pre></div>`,37)]))}const u=a(o,[["render",i]]);export{h as __pageData,u as default};
