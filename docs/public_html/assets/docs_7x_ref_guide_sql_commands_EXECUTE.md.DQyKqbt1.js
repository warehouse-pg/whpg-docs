import{_ as a,c as t,o as s,ag as o}from"./chunks/framework.Ds6Eueu6.js";const m=JSON.parse('{"title":"EXECUTE","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/ref_guide/sql_commands/EXECUTE.md","filePath":"docs/7x/ref_guide/sql_commands/EXECUTE.md"}'),n={name:"docs/7x/ref_guide/sql_commands/EXECUTE.md"};function i(r,e,d,p,l,c){return s(),t("div",null,e[0]||(e[0]=[o(`<h1 id="execute" tabindex="-1">EXECUTE <a class="header-anchor" href="#execute" aria-label="Permalink to &quot;EXECUTE&quot;">​</a></h1><p>Runs a prepared SQL statement.</p><h2 id="synopsis" tabindex="-1"><a id="section2"></a>Synopsis <a class="header-anchor" href="#synopsis" aria-label="Permalink to &quot;&lt;a id=&quot;section2&quot;&gt;&lt;/a&gt;Synopsis&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>EXECUTE &lt;name&gt; [ (&lt;parameter&gt; [, ...] ) ]</span></span></code></pre></div><h2 id="description" tabindex="-1"><a id="section3"></a>Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;&lt;a id=&quot;section3&quot;&gt;&lt;/a&gt;Description&quot;">​</a></h2><p><code>EXECUTE</code> is used to run a previously prepared statement. Since prepared statements only exist for the duration of a session, the prepared statement must have been created by a <code>PREPARE</code> statement run earlier in the current session.</p><p>If the <code>PREPARE</code> statement that created the statement specified some parameters, a compatible set of parameters must be passed to the <code>EXECUTE</code> statement, or else WarehousePG raises an error. Because (unlike functions) prepared statements are not overloaded based on the type or number of their parameters, the name of a prepared statement must be unique within a database session.</p><p>For more information on the creation and usage of prepared statements, see <a href="./PREPARE.html">PREPARE</a>.</p><h2 id="parameters" tabindex="-1"><a id="section4"></a>Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;&lt;a id=&quot;section4&quot;&gt;&lt;/a&gt;Parameters&quot;">​</a></h2><p>name : The name of the prepared statement to run.</p><p>parameter : The actual value of a parameter to the prepared statement. This must be an expression yielding a value that is compatible with the data type of this parameter, as was determined when the prepared statement was created.</p><h2 id="outputs" tabindex="-1"><a id="section4b"></a>Outputs <a class="header-anchor" href="#outputs" aria-label="Permalink to &quot;&lt;a id=&quot;section4b&quot;&gt;&lt;/a&gt;Outputs&quot;">​</a></h2><p>The command tag returned by <code>EXECUTE</code> is that of the prepared statement, and not <code>EXECUTE</code>.</p><h2 id="examples" tabindex="-1"><a id="section5"></a>Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;&lt;a id=&quot;section5&quot;&gt;&lt;/a&gt;Examples&quot;">​</a></h2><p>Create a prepared statement for an <code>INSERT</code> statement, and then run it:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>PREPARE fooplan (int, text, bool, numeric) AS</span></span>
<span class="line"><span>    INSERT INTO foo VALUES($1, $2, $3, $4);</span></span>
<span class="line"><span>EXECUTE fooplan(1, &#39;Hunter Valley&#39;, &#39;t&#39;, 200.00);</span></span></code></pre></div><h2 id="compatibility" tabindex="-1"><a id="section6"></a>Compatibility <a class="header-anchor" href="#compatibility" aria-label="Permalink to &quot;&lt;a id=&quot;section6&quot;&gt;&lt;/a&gt;Compatibility&quot;">​</a></h2><p>The SQL standard includes an <code>EXECUTE</code> statement, but it is only for use in embedded SQL. This version of the <code>EXECUTE</code> statement also uses a somewhat different syntax.</p><h2 id="see-also" tabindex="-1"><a id="section7"></a>See Also <a class="header-anchor" href="#see-also" aria-label="Permalink to &quot;&lt;a id=&quot;section7&quot;&gt;&lt;/a&gt;See Also&quot;">​</a></h2><p><a href="./DEALLOCATE.html">DEALLOCATE</a>, <a href="./PREPARE.html">PREPARE</a></p><p><strong>Parent topic:</strong> <a href="./../sql_commands/sql_ref.html">SQL Commands</a></p>`,21)]))}const u=a(n,[["render",i]]);export{m as __pageData,u as default};
