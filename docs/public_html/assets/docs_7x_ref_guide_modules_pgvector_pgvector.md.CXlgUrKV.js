import{_ as i,c as a,o as e,ag as t}from"./chunks/framework.Ds6Eueu6.js";const g=JSON.parse('{"title":"pgvector","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/ref_guide/modules/pgvector/pgvector.md","filePath":"docs/7x/ref_guide/modules/pgvector/pgvector.md"}'),n={name:"docs/7x/ref_guide/modules/pgvector/pgvector.md"};function h(l,s,p,d,r,o){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="pgvector" tabindex="-1">pgvector <a class="header-anchor" href="#pgvector" aria-label="Permalink to &quot;pgvector&quot;">​</a></h1><p>A machine language-generated embedding is a complex object transformed into a list of numbers (vector) that reflects both the semantic and syntactic relationships of the data. The <code>pgvector</code> module provides vector similarity search capabilities for WarehousePG that enable you to search, store, and query embeddings at large scale.</p><p>The WarehousePG <code>pgvector</code> module is equivalent to version 0.5.1 of the <code>pgvector</code> module used with PostgreSQL. The limitations of the WarehousePG version of the module are described in the <a href="#limits">WarehousePG Limitations</a> topic.</p><h2 id="installing-and-registering-the-module" tabindex="-1"><a id="topic_reg"></a>Installing and Registering the Module <a class="header-anchor" href="#installing-and-registering-the-module" aria-label="Permalink to &quot;&lt;a id=&quot;topic_reg&quot;&gt;&lt;/a&gt;Installing and Registering the Module&quot;">​</a></h2><p>The <code>pgvector</code> module is installed when you install WarehousePG. Before you can use the data type and index access method defined in the module, you must register the <code>vector</code> extension in each database in which you want to use these:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE EXTENSION vector;</span></span></code></pre></div><p>Refer to <a href="./../../../install_guide/install_extensions.html">Installing Extensions</a> for more information.</p><h2 id="upgrading-the-module" tabindex="-1"><a id="topic_upgrading"></a>Upgrading the Module <a class="header-anchor" href="#upgrading-the-module" aria-label="Permalink to &quot;&lt;a id=&quot;topic_upgrading&quot;&gt;&lt;/a&gt;Upgrading the Module&quot;">​</a></h2><p>The <code>pgvector</code> module is installed when you install or upgrade WarehousePG. A previous version of the extension will continue to work in existing databases after you upgrade WarehousePG. To upgrade to the most recent version of the extension, you must:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER EXTENSION vector UPDATE TO &#39;0.5.1&#39;;</span></span></code></pre></div><p>in <strong>every</strong> database in which you registered/use the extension.</p><h2 id="about-the-vector-types-operators-and-functions" tabindex="-1"><a id="using"></a>About the vector Types, Operators, and Functions <a class="header-anchor" href="#about-the-vector-types-operators-and-functions" aria-label="Permalink to &quot;&lt;a id=&quot;using&quot;&gt;&lt;/a&gt;About the vector Types, Operators, and Functions&quot;">​</a></h2><p><code>pgvector</code> provides a <code>vector</code> data type and the index access methods <code>ivfflat</code> and <code>hnsw</code>. The type, methods, and the supporting functions and operators provided by the module enable you to perform exact and approximate neighbor search on, and determine L2, inner product, and cosine distance between, embeddings. You can also use the module to store and query embeddings.</p><h3 id="vector-data-type" tabindex="-1"><a id="datatype"></a>vector Data Type <a class="header-anchor" href="#vector-data-type" aria-label="Permalink to &quot;&lt;a id=&quot;datatype&quot;&gt;&lt;/a&gt;vector Data Type&quot;">​</a></h3><p>The <code>vector</code> data type represents an n-dimensional coordinate. Each <code>vector</code> takes <code>4 * dimensions + 8</code> bytes of storage. Each element is a single precision floating-point number (similar to the <code>real</code> type in WarehousePG), and all of the elements must be finite (no <code>NaN</code>, <code>Infinity</code>, or <code>-Infinity</code>). Vectors can have up to 16,000 dimensions.</p><h3 id="vector-operators" tabindex="-1"><a id="ops"></a>vector Operators <a class="header-anchor" href="#vector-operators" aria-label="Permalink to &quot;&lt;a id=&quot;ops&quot;&gt;&lt;/a&gt;vector Operators&quot;">​</a></h3><p><code>pgvector</code> provides the following operators for the <code>vector</code> data type:</p><table tabindex="0"><thead><tr><th>Operator</th><th>Description</th></tr></thead><tbody><tr><td>+</td><td>Element-wise addition</td></tr><tr><td>-</td><td>Element-wise subtraction</td></tr><tr><td>*</td><td>Element-wise multiplication</td></tr><tr><td>&lt;–&gt;</td><td>Euclidean distance</td></tr><tr><td>&lt;#&gt;<sup>1</sup></td><td>Negative inner product</td></tr><tr><td>&lt;=&gt;</td><td>Cosine distance</td></tr></tbody></table><p><sup>1</sup> Because WarehousePG supports only <code>ASC</code> order index scans on operators, <code>&lt;#&gt;</code> returns the <em>negative</em> inner product.</p><h3 id="vector-functions" tabindex="-1"><a id="funcs"></a>vector Functions <a class="header-anchor" href="#vector-functions" aria-label="Permalink to &quot;&lt;a id=&quot;funcs&quot;&gt;&lt;/a&gt;vector Functions&quot;">​</a></h3><p><code>pgvector</code> provides the following functions for the \`vector data type:</p><table tabindex="0"><thead><tr><th>Function Name</th><th>Description</th></tr></thead><tbody><tr><td>cosine_distance(vector, vector) → double precision</td><td>Computes the cosine distance</td></tr><tr><td>inner_product(vector, vector) → double precision</td><td>Computes the inner product</td></tr><tr><td>l2_distance(vector, vector) → double precision</td><td>Computes the Euclidean distance</td></tr><tr><td>l1_distance(vector, vector) → double precision</td><td>Computes the taxicab distance</td></tr><tr><td>vector_dims(vector) → integer</td><td>Returns the number of dimensions</td></tr><tr><td>vector_norm(vector) → double precision</td><td>Computes the Euclidean norm</td></tr></tbody></table><h3 id="vector-aggregate-functions" tabindex="-1"><a id="agg_funcs"></a>vector Aggregate Functions <a class="header-anchor" href="#vector-aggregate-functions" aria-label="Permalink to &quot;&lt;a id=&quot;agg_funcs&quot;&gt;&lt;/a&gt;vector Aggregate Functions&quot;">​</a></h3><p><code>pgvector</code> provides the following aggregate functions for the <code>vector</code> data type:</p><table tabindex="0"><thead><tr><th>Function</th><th>Description</th></tr></thead><tbody><tr><td>avg(vector) → vector</td><td>Computes the arithmetic mean</td></tr><tr><td>sum(vector) → vector</td><td>Computes the sum of the vector elements</td></tr></tbody></table><h2 id="using-the-pgvector-module" tabindex="-1"><a id="Using"></a>Using the pgvector Module <a class="header-anchor" href="#using-the-pgvector-module" aria-label="Permalink to &quot;&lt;a id=&quot;Using&quot;&gt;&lt;/a&gt;Using the pgvector Module&quot;">​</a></h2><p>You can use <code>pgvector</code> to search, store, and query embeddings in WarehousePG.</p><h3 id="examples-storing-embeddings-in-warehousepg" tabindex="-1"><a id="storing"></a>Examples: Storing Embeddings in WarehousePG <a class="header-anchor" href="#examples-storing-embeddings-in-warehousepg" aria-label="Permalink to &quot;&lt;a id=&quot;storing&quot;&gt;&lt;/a&gt;Examples: Storing Embeddings in WarehousePG&quot;">​</a></h3><p>In the following examples, you manipulate a <code>vector</code> column of a table.</p><p>Create a new table with a <code>vector</code> column with 3 dimensions:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> items</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bigserial</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, embedding vector(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span></code></pre></div><p>Or add a <code>vector</code> column to an existing table:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ADD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> COLUMN embedding vector(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>Insert <code>vector</code>s into the table:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items (embedding) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;[1,2,3]&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;[4,5,6]&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>Upsert <code>vector</code>s:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items (id, embedding) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;[1,2,3]&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;[4,5,6]&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CONFLICT (id) DO </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">UPDATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> SET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> embedding </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> EXCLUDED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">embedding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Update <code>vector</code>s:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> embedding </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;[1,2,3]&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Delete <code>vector</code>s:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DELETE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="examples-querying-embeddings-in-warehousepg" tabindex="-1"><a id="querying"></a>Examples: Querying Embeddings in WarehousePG <a class="header-anchor" href="#examples-querying-embeddings-in-warehousepg" aria-label="Permalink to &quot;&lt;a id=&quot;querying&quot;&gt;&lt;/a&gt;Examples: Querying Embeddings in WarehousePG&quot;">​</a></h3><p>You can query embeddings as follows.</p><p>Get the nearest neighbors to a <code>vector</code> by L2 distance:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ORDER BY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> embedding </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;-&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;[3,1,2]&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> LIMIT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Get the nearest neighbors to a row:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ORDER BY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> embedding </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> embedding </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">LIMIT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Get rows within a certain distance:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> embedding </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;-&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;[3,1,2]&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Combine with the <code>ORDER BY</code> and <code>LIMIT</code> clauses to use an index.</p><h4 id="evaluating-embedding-distance" tabindex="-1"><a id="distance"></a>Evaluating Embedding Distance <a class="header-anchor" href="#evaluating-embedding-distance" aria-label="Permalink to &quot;&lt;a id=&quot;distance&quot;&gt;&lt;/a&gt;Evaluating Embedding Distance&quot;">​</a></h4><p>The following examples use the available <code>vector</code> distance operators.</p><p>Get the distance:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> embedding </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;-&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;[3,1,2]&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> AS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> distance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items;</span></span></code></pre></div><p>When you request the inner product, remember to multiply by <code>-1</code>:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (embedding </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;[3,1,2]&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> AS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> inner_product </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items;</span></span></code></pre></div><p>For cosine similarity, use <code>1 - &lt;cosine_distance&gt;</code>:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (embedding </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;=&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;[3,1,2]&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cosine_similarity </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items;</span></span></code></pre></div><h4 id="aggregating-embeddings" tabindex="-1"><a id="aggs"></a>Aggregating Embeddings <a class="header-anchor" href="#aggregating-embeddings" aria-label="Permalink to &quot;&lt;a id=&quot;aggs&quot;&gt;&lt;/a&gt;Aggregating Embeddings&quot;">​</a></h4><p>The following examples display various forms of aggregating embeddings.</p><p>Average the vectors in a table:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AVG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(embedding) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items;</span></span></code></pre></div><p>Average a group of vectors in a table:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> category_id, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AVG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(embedding) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GROUP BY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> category_id;</span></span></code></pre></div><h3 id="about-indexing-embeddings" tabindex="-1"><a id="indexing"></a>About Indexing Embeddings <a class="header-anchor" href="#about-indexing-embeddings" aria-label="Permalink to &quot;&lt;a id=&quot;indexing&quot;&gt;&lt;/a&gt;About Indexing Embeddings&quot;">​</a></h3><p>By default, <code>pgvector</code> performs exact nearest neighbor search, which provides perfect recall. You can add an index to use approximate nearest neighbor search, trading some recall for performance.</p><blockquote><p><strong>Note</strong> Unlike a typical index, a query returns different results after adding an approximate index.</p></blockquote><p>When you create an index for an embedding, you use the <code>lists</code> parameter to specify the number of <em>clusters</em> created during index creation. Each cluster is a partition of the data set.</p><p>To achieve good recall, keep the following in mind:</p><ol><li>Create the index <em>after</em> the table has some data.</li><li>Choose an appropriate number of <code>lists</code>. A reasonable initial value is <code>rows / 1000</code> for up to 1M rows and <code>sqrt(rows)</code> for over 1M rows.</li><li>When querying, specify an appropriate number of <a href="#query-options">probes</a> (higher is better for recall, lower is better for speed). A reasonable initial value is <code>sqrt(lists)</code>.</li></ol><p>The following examples show how to add an index for various distance methods.</p><h4 id="ivfflat-examples" tabindex="-1">IVFFlat Examples <a class="header-anchor" href="#ivfflat-examples" aria-label="Permalink to &quot;IVFFlat Examples&quot;">​</a></h4><p>Create an index on the L2 distance:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> INDEX</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">USING</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ivfflat (embedding vector_l2_ops) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WITH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (lists </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>Create an index on the inner product:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> INDEX</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">USING</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ivfflat (embedding vector_ip_ops) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WITH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (lists </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>Create an index on the cosine distance:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> INDEX</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">USING</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ivfflat (embedding vector_cosine_ops) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WITH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (lists </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>You can index a <code>vector</code> that has up to 2,000 dimensions.</p><p><strong>Query Options</strong></p><p><code>pgvector</code> provides a <code>probes</code> parameter that you can set at query time to specify the number of regions to search during a query.</p><p>Specify the number of <code>probes</code> (1 by default):</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SET</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ivfflat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">probes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>A higher <code>probes</code> value provides better recall at the cost of speed. You can set it to the number of <code>lists</code> for exact nearest neighbor search (at which point the planner will not use the index).</p><p>Use <code>SET LOCAL</code> inside a transaction block to set <code>probes</code> for a single query:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BEGIN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SET</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> LOCAL</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ivfflat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">probes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">COMMIT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h4 id="hnsw-examples" tabindex="-1">HNSW Examples <a class="header-anchor" href="#hnsw-examples" aria-label="Permalink to &quot;HNSW Examples&quot;">​</a></h4><p>Create an index on the L2 distance:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> INDEX</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">USING</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hnsw (embedding vector_l2_ops);</span></span></code></pre></div><p>Create an index on the inner product:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> INDEX</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">USING</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hnsw (embedding vector_ip_ops);</span></span></code></pre></div><p>Create an index on the cosine distance:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> INDEX</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">USING</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hnsw (embedding vector_cosine_ops);</span></span></code></pre></div><p>You can index a <code>vector</code> that has up to 2,000 dimensions.</p><p>HNSW indexes support the following parameters:</p><ul><li><code>m</code> specifies the maximum number of connections per layer (16 by default)</li><li><code>ef_construction</code> specifies the size of the dynamic candidate list for constructing the graph (64 by default)</li></ul><p>For example:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE INDEX ON items USING hnsw (embedding vector_l2_ops) WITH (m = 16, ef_construction = 64);</span></span></code></pre></div><p><strong>Query Options</strong></p><p>Specify a csutom size for the dynamic candidate list for a search:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SET hnsw.ef_search = 100;</span></span></code></pre></div><p>Higher value provides better recall at the cost of speed. The default size of the candidate list is 40.</p><p>This example sets the candidate size in a transaction for a single query:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>BEGIN;</span></span>
<span class="line"><span>SET LOCAL hnsw.ef_search = 100;</span></span>
<span class="line"><span>SELECT ...</span></span>
<span class="line"><span>COMMIT;</span></span></code></pre></div><h4 id="indexing-progress" tabindex="-1"><a id="index_prog"></a>Indexing Progress <a class="header-anchor" href="#indexing-progress" aria-label="Permalink to &quot;&lt;a id=&quot;index_prog&quot;&gt;&lt;/a&gt;Indexing Progress&quot;">​</a></h4><p>You can check index creation progress in WarehousePG as described in <a href="./../../../admin_guide/managing/progress_reporting.html#create_index_progress">CREATE INDEX Progress Reporting</a>.</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> phase, tuples_done, tuples_total </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gp_stat_progress_create_index;</span></span></code></pre></div><h4 id="filtering" tabindex="-1"><a id="filtering"></a>Filtering <a class="header-anchor" href="#filtering" aria-label="Permalink to &quot;&lt;a id=&quot;filtering&quot;&gt;&lt;/a&gt;Filtering&quot;">​</a></h4><p>There are multiple ways to index nearest neighbor queries with a <code>WHERE</code> clause:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> category_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 123</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ORDER BY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> embedding </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;-&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;[3,1,2]&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> LIMIT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>For exact search, create an index on one or more of the <code>WHERE</code> columns:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> INDEX</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items (category_id);</span></span></code></pre></div><p>For approximate search, create a partial index on the <code>vector</code> column:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> INDEX</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">USING</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ivfflat (embedding vector_l2_ops) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WITH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (lists </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (category_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 123</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>Use <a href="./../../../admin_guide/ddl/ddl-partition.html">partitioning</a> for approximate search on many different values of the <code>WHERE</code> columns:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> items</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (embedding vector(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), category_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PARTITION</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> BY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LIST(category_id);</span></span></code></pre></div><h3 id="about-hybrid-search" tabindex="-1"><a id="hybrid_search"></a>About Hybrid Search <a class="header-anchor" href="#about-hybrid-search" aria-label="Permalink to &quot;&lt;a id=&quot;hybrid_search&quot;&gt;&lt;/a&gt;About Hybrid Search&quot;">​</a></h3><p>You can use <code>pgvector</code> together with <a href="./../../../admin_guide/textsearch/full-text-search.html">full-text search</a> for a hybrid search:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id, content </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items, to_tsquery(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello &amp; search&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) query</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> textsearch @@ query </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ORDER BY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ts_rank_cd(textsearch, query) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DESC</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> LIMIT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="about-debugging-and-maximizing-performance" tabindex="-1"><a id="debug_perf"></a>About Debugging and Maximizing Performance <a class="header-anchor" href="#about-debugging-and-maximizing-performance" aria-label="Permalink to &quot;&lt;a id=&quot;debug_perf&quot;&gt;&lt;/a&gt;About Debugging and Maximizing Performance&quot;">​</a></h3><p>Use <a href="./../../sql_commands/EXPLAIN.html">EXPLAIN ANALYZE</a> to debug performance:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">EXPLAIN ANALYZE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ORDER BY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> embedding </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;-&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;[3,1,2]&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> LIMIT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h4 id="exact-search" tabindex="-1"><a id="exact_search"></a>Exact Search <a class="header-anchor" href="#exact-search" aria-label="Permalink to &quot;&lt;a id=&quot;exact_search&quot;&gt;&lt;/a&gt;Exact Search&quot;">​</a></h4><p>To speed up queries without an index, increase the <code>max_parallel_workers_per_gather</code> server configuration parameter:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> max_parallel_workers_per_gather </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>If vectors are normalized to length <code>1</code>, use inner product for the best performance:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ORDER BY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> embedding </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;[3,1,2]&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> LIMIT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h4 id="approximate-search" tabindex="-1"><a id="approx_search"></a>Approximate Search <a class="header-anchor" href="#approximate-search" aria-label="Permalink to &quot;&lt;a id=&quot;approx_search&quot;&gt;&lt;/a&gt;Approximate Search&quot;">​</a></h4><p>To speed up queries with an index, increase the number of inverted <code>lists</code> (at the expense of recall):</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> INDEX</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">USING</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ivfflat (embedding vector_l2_ops) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WITH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (lists </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="warehousepg-limitations" tabindex="-1"><a id="limits"></a>WarehousePG Limitations <a class="header-anchor" href="#warehousepg-limitations" aria-label="Permalink to &quot;&lt;a id=&quot;limits&quot;&gt;&lt;/a&gt;WarehousePG Limitations&quot;">​</a></h2><p><code>pgvector</code> for WarehousePG has the following limitations:</p><ul><li>The WarehousePG query optimizer (GPORCA) does not support <code>ivfflat</code> and <code>hnsw</code> vector indexes. Queries on tables that utilize these index types fall back to the Postgres-based planner.</li><li>Append-optimized tables cannot use vector indexes.</li><li>The size of (a vector) index can be larger than the table size.</li></ul><h2 id="additional-references" tabindex="-1"><a id="addtl_refs"></a>Additional References <a class="header-anchor" href="#additional-references" aria-label="Permalink to &quot;&lt;a id=&quot;addtl_refs&quot;&gt;&lt;/a&gt;Additional References&quot;">​</a></h2><p>The following examples use <code>pgvector</code> and the WarehousePG documentation to build an AI assistant for the product documentation:</p><ul><li><a href="https://medium.com/greenplum-data-clinics/building-large-scale-ai-powered-search-in-greenplum-using-pgvector-and-openai-4f5c5811f54a" target="_blank" rel="noreferrer">Building large-scale AI-powered search in WarehousePG using pgvector and OpenAI</a></li><li><a href="https://github.com/yihong0618/ask-greenplum" target="_blank" rel="noreferrer">ask-greenplum</a></li></ul>`,136)]))}const c=i(n,[["render",h]]);export{g as __pageData,c as default};
