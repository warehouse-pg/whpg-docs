import{_ as a,c as t,o,ag as n}from"./chunks/framework.Ds6Eueu6.js";const p=JSON.parse('{"title":"Moving Data between Tables","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/admin_guide/load/topics/g-moving-data-between-tables.md","filePath":"docs/7x/admin_guide/load/topics/g-moving-data-between-tables.md"}'),l={name:"docs/7x/admin_guide/load/topics/g-moving-data-between-tables.md"};function r(i,e,d,s,b,c){return o(),t("div",null,e[0]||(e[0]=[n('<h1 id="moving-data-between-tables" tabindex="-1">Moving Data between Tables <a class="header-anchor" href="#moving-data-between-tables" aria-label="Permalink to &quot;Moving Data between Tables&quot;">â€‹</a></h1><hr><p>You can use <code>CREATE TABLE AS</code> or <code>INSERT...SELECT</code> to load external and external web table data into another (non-external) database table, and the data will be loaded in parallel according to the external or external web table definition.</p><p>If an external table file or external web table data source has an error, one of the following will happen, depending on the isolation mode used:</p><ul><li><strong>Tables without error isolation mode</strong>: any operation that reads from that table fails. Loading from external and external web tables without error isolation mode is an all or nothing operation.</li><li><strong>Tables with error isolation mode</strong>: the entire file will be loaded, except for the problematic rows (subject to the configured REJECT_LIMIT)</li></ul><p><strong>Parent topic:</strong> <a href="./../../load/topics/g-handling-load-errors.html">Handling Load Errors</a></p>',6)]))}const h=a(l,[["render",r]]);export{p as __pageData,h as default};
