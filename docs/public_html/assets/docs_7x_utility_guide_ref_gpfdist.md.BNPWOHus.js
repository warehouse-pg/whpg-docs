import{_ as t,c as o,o as s,ag as a}from"./chunks/framework.Ds6Eueu6.js";const u=JSON.parse('{"title":"gpfdist","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/utility_guide/ref/gpfdist.md","filePath":"docs/7x/utility_guide/ref/gpfdist.md"}'),i={name:"docs/7x/utility_guide/ref/gpfdist.md"};function n(r,e,d,c,l,p){return s(),o("div",null,e[0]||(e[0]=[a(`<h1 id="gpfdist" tabindex="-1">gpfdist <a class="header-anchor" href="#gpfdist" aria-label="Permalink to &quot;gpfdist&quot;">​</a></h1><p>Serves data files to or writes data files out from WarehousePG segments.</p><h2 id="synopsis" tabindex="-1"><a id="section2"></a>Synopsis <a class="header-anchor" href="#synopsis" aria-label="Permalink to &quot;&lt;a id=&quot;section2&quot;&gt;&lt;/a&gt;Synopsis&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>gpfdist [-d &lt;directory&gt;] [-p &lt;http_port&gt;] [-P &lt;last_http_port&gt;] [-l &lt;log_file&gt;]</span></span>
<span class="line"><span>   [-t &lt;timeout&gt;] [-k &lt;clean_up_timeout&gt;] [-S] [-w &lt;time&gt;] [-v | -V] [-s] [-m &lt;max_length&gt;]</span></span>
<span class="line"><span>   [--ssl &lt;certificate_path&gt; [--ssl_verify_peer &lt;boolean&gt;] [--sslclean &lt;wait_time&gt;] ]</span></span>
<span class="line"><span>   [--compress] [--multi_thread &lt;num_threads&gt;]</span></span>
<span class="line"><span>   [-c &lt;config.yml&gt;]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>gpfdist -? | --help </span></span>
<span class="line"><span></span></span>
<span class="line"><span>gpfdist --version</span></span></code></pre></div><h2 id="description" tabindex="-1"><a id="section3"></a>Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;&lt;a id=&quot;section3&quot;&gt;&lt;/a&gt;Description&quot;">​</a></h2><p><code>gpfdist</code> is WarehousePG parallel file distribution program. It is used by readable external tables and <code>gpload</code> to serve external table files to all WarehousePG segments in parallel. It is used by writable external tables to accept output streams from WarehousePG segments in parallel and write them out to a file.</p><blockquote><p><strong>Note</strong> <code>gpfdist</code> and <code>gpload</code> are compatible only with the WarehousePG major version in which they are shipped. For example, a <code>gpfdist</code> utility that is installed with WarehousePG 6.x cannot be used with WarehousePG 7.x.</p></blockquote><p>In order for <code>gpfdist</code> to be used by an external table, the <code>LOCATION</code> clause of the external table definition must specify the external table data using the <code>gpfdist://</code> protocol (see the WarehousePG command <code>CREATE EXTERNAL TABLE</code>).</p><blockquote><p><strong>Note</strong> If you specify the <code>--ssl</code> option to enable SSL security, you must create the external table with the <code>gpfdists://</code> protocol.</p></blockquote><p>The benefit of using <code>gpfdist</code> is that you are guaranteed maximum parallelism while reading from or writing to external tables, thereby offering the best performance as well as easier administration of external tables.</p><p>For readable external tables, <code>gpfdist</code> parses and serves data files evenly to all the segment instances in the WarehousePG cluster when users <code>SELECT</code> from the external table. For writable external tables, <code>gpfdist</code> accepts parallel output streams from the segments when users <code>INSERT</code> into the external table, and writes to an output file.</p><blockquote><p><strong>Note</strong> When <code>gpfdist</code> reads data and encounters a data formatting error, the error message includes a row number indicating the location of the formatting error. <code>gpfdist</code> attempts to capture the row that contains the error. However, <code>gpfdist</code> might not capture the exact row for some formatting errors.</p></blockquote><p>For readable external tables, if load files are compressed using <code>gzip</code> or <code>bzip2</code> (have a <code>.gz</code> or <code>.bz2</code> file extension), <code>gpfdist</code> uncompresses the data while loading the data (on the fly). For writable external tables, <code>gpfdist</code> compresses the data using <code>gzip</code> if the target file has a <code>.gz</code> extension.</p><blockquote><p><strong>Note</strong> Compression is not supported for readable and writeable external tables when the <code>gpfdist</code> utility runs on Windows platforms.</p></blockquote><p>When reading or writing data with the <code>gpfdist</code> or <code>gpfdists</code> protocol, WarehousePG includes <code>X-GP-PROTO</code> in the HTTP request header to indicate that the request is from WarehousePG. The utility rejects HTTP requests that do not include <code>X-GP-PROTO</code> in the request header.</p><p>Most likely, you will want to run <code>gpfdist</code> on your ETL machines rather than the hosts where WarehousePG is installed. To install <code>gpfdist</code> on another host, simply copy the utility over to that host and add <code>gpfdist</code> to your <code>$PATH</code>.</p><blockquote><p><strong>Note</strong> When using IPv6, always enclose the numeric IP address in brackets.</p></blockquote><h2 id="options" tabindex="-1"><a id="section4"></a>Options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;&lt;a id=&quot;section4&quot;&gt;&lt;/a&gt;Options&quot;">​</a></h2><p>-d directory : The directory from which <code>gpfdist</code> will serve files for readable external tables or create output files for writable external tables. If not specified, defaults to the current directory.</p><p>-l log_file : The fully qualified path and log file name where standard output messages are to be logged.</p><p>-p http_port : The HTTP port on which <code>gpfdist</code> will serve files. Defaults to 8080.</p><p>-P last_http_port : The last port number in a range of HTTP port numbers (http_port to last_http_port, inclusive) on which <code>gpfdist</code> will attempt to serve files. <code>gpfdist</code> serves the files on the first port number in the range to which it successfully binds.</p><p>-t timeout : Sets the time allowed for WarehousePG to establish a connection to a <code>gpfdist</code> process. Default is 5 seconds. Allowed values are 2 to 7200 seconds (2 hours). May need to be increased on systems with a lot of network traffic.</p><p>-k clean_up_timeout : Sets the number of seconds that <code>gpfdist</code> waits before cleaning up the session when there are no <code>POST</code> requests from the segments. Default is 300. Allowed values are 300 to 86400. You may increase this value when experiencing heavy network traffic.</p><p>-m max_length : Sets the maximum allowed data row length in bytes. Default is 32768. Should be used when user data includes very wide rows (or when <code>line too long</code> error message occurs). Should not be used otherwise as it increases resource allocation. Valid range is 32K to 256MB. The upper limit is 1MB on Windows systems.</p><p>: &gt; <strong>Note</strong> Memory issues might occur if you specify a large maximum row length and run a large number of <code>gpfdist</code> concurrent connections. For example, setting this value to the maximum of 256MB with 96 concurrent <code>gpfdist</code> processes requires approximately 24GB of memory (<code>(96 + 1) x 246MB</code>).</p><p>-s : Enables simplified logging. When this option is specified, only messages with <code>WARN</code> level and higher are written to the <code>gpfdist</code> log file. <code>INFO</code> level messages are not written to the log file. If this option is not specified, all <code>gpfdist</code> messages are written to the log file.</p><p>: You can specify this option to reduce the information written to the log file.</p><p>-S (use O_SYNC) : Opens the file for synchronous I/O with the <code>O_SYNC</code> flag. Any writes to the resulting file descriptor block <code>gpfdist</code> until the data is physically written to the underlying hardware.</p><p>-w time : Sets the number of seconds that WarehousePG delays before closing a target file such as a named pipe. The default value is 0, no delay. The maximum value is 7200 seconds (2 hours).</p><p>: For a WarehousePG with multiple segments, there might be a delay between segments when writing data from different segments to the file. You can specify a time to wait before WarehousePG closes the file to ensure all the data is written to the file.</p><p>--ssl certificate_path : Prompts <code>gpfdist</code> to use SSL encryption for the data transfer. After running <code>gpfdist</code> with the <code>--ssl &lt;certificate_path&gt;</code> option, you must use the <code>gpfdists://</code> protocol to load data from this file server. For information on <code>gpfdists</code>, refer to <a href="./../../admin_guide/external/gpfdists-protocol.html">gpfdists:// Protocol</a> in the <em>WarehousePG Administrator Guide</em>.</p><p>: The setting of the <code>--ssl_verify_peer</code> option determines which of the following files are required in the file system location specified by certificate_path:</p><pre><code>-   The server certificate file, \`server.crt\`
-   The server private key file, \`server.key\`
-   The trusted certificate authorities, \`root.crt\`
</code></pre><p>: The settings of both the <a href="./../../ref_guide/config_params/guc-list.html#verify_gpfdists_cert">verify_gpfdists_cert</a> server configuration parameter and the <code>--ssl_verify_peer</code> option also determine which certificate files are required on the WarehousePG segments as described in <a href="./../../admin_guide/external/gpfdists-protocol.html">gpfdists:// Protocol</a>.</p><p>: You cannot specify the root directory (<code>/</code>) as the certificate_path.</p><p>--ssl_verify_peer boolean : When the <code>--ssl</code> option is also provided, specifies whether <code>gpfdist</code> enables or disables SSL certificate authentication on the WarehousePG side. : The default value is <code>on</code>; <code>gpfdist</code> checks the identities of clients, and requires that the <code>root.crt</code>, <code>server.crt</code>, and <code>server.key</code> be present in the certificate_path specified. : When set to <code>off</code>, <code>gpfdist</code> does not check the identities of clients, and requires that only the <code>server.crt</code> and <code>server.key</code> be present in the <code>--ssl &lt;certificate_path&gt;</code> specified. The certificate authority file <code>root.crt</code> is not required.</p><p>--sslclean wait_time : When the utility is run with the <code>--ssl</code> option, sets the number of seconds that the utility delays before closing an SSL session and cleaning up the SSL resources after it completes writing data to or from a WarehousePG segment. The default value is 0, no delay. The maximum value is 500 seconds. If the delay is increased, the transfer speed decreases.</p><p>: In some cases, this error might occur when copying large amounts of data: <code>gpfdist server closed connection</code>. To avoid the error, you can add a delay, for example <code>--sslclean 5</code>.</p><p>--compress : Enable compression during data transfer. When specified, <code>gpfdist</code> utilizes the Zstandard (<code>zstd</code>) compression algorithm. : This option is not available on Windows platforms.</p><p>--multi_threads num_threads : Sets the maximum number of threads that <code>gpfdist</code> uses during data transfer, parallelizing the operation. When specified, <code>gpfdist</code> automatically compresses the data (also parallelized) before transferring. : <code>gpfdist</code> supports a maximum of 256 threads. : This option is not available on Windows platforms.</p><p>-c config.yaml : Specifies rules that <code>gpfdist</code> uses to select a transform to apply when loading or extracting data. The <code>gpfdist</code> configuration file is a YAML 1.1 document.</p><p>: For information about the file format, see <a href="./../../admin_guide/load/topics/transforming-xml-data.html#topic83">Configuration File Format</a> in the <em>WarehousePG Administrator Guide</em>. For information about configuring data transformation with <code>gpfdist</code>, see <a href="./../../admin_guide/load/topics/transforming-xml-data.html#topic75">Transforming External Data with gpfdist and gpload</a> in the <em>WarehousePG Administrator Guide</em>.</p><p>: This option is not available on Windows platforms.</p><p>-v (verbose) : Verbose mode shows progress and status messages.</p><p>-V (very verbose) : Verbose mode shows all output messages generated by this utility.</p><p>-? (help) : Displays the online help.</p><p>--version : Displays the version of this utility.</p><h2 id="notes" tabindex="-1"><a id="notes"></a>Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;&lt;a id=&quot;notes&quot;&gt;&lt;/a&gt;Notes&quot;">​</a></h2><p>You can set the server configuration parameter <a href="./../../ref_guide/config_params/guc-list.html">gpfdist_retry_timeout</a> to control the time that WarehousePG waits before returning an error when a <code>gpfdist</code> server does not respond while WarehousePG is attempting to write data to <code>gpfdist</code>. The default is 300 seconds (5 minutes).</p><p>If the <code>gpfdist</code> utility hangs with no read or write activity occurring, you can generate a core dump the next time a hang occurs to help debug the issue. Set the environment variable <code>GPFDIST_WATCHDOG_TIMER</code> to the number of seconds of no activity to wait before <code>gpfdist</code> is forced to exit. When the environment variable is set and <code>gpfdist</code> hangs, the utility is stopped after the specified number of seconds, creates a core dump, and sends relevant information to the log file.</p><p>This example sets the environment variable on a Linux system so that <code>gpfdist</code> exits after 300 seconds (5 minutes) of no activity.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>export GPFDIST_WATCHDOG_TIMER=300</span></span></code></pre></div><p>When you enable compression, <code>gpfdist</code> transmits a larger amount of data while maintaining low network usage. Note that compression can be time-intensive, and may potentially reduce transmission speeds. When you utilize multi-threaded execution, the overall time required for compression may decrease, which facilitates faster data transmission while maintaining low network occupancy and high speed.</p><h2 id="examples" tabindex="-1"><a id="section6"></a>Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;&lt;a id=&quot;section6&quot;&gt;&lt;/a&gt;Examples&quot;">​</a></h2><p>To serve files from a specified directory using port 8081 (and start <code>gpfdist</code> in the background):</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>gpfdist -d /var/load_files -p 8081 &amp;</span></span></code></pre></div><p>To start <code>gpfdist</code> in the background and redirect output and errors to a log file:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>gpfdist -d /var/load_files -p 8081 -l /home/gpadmin/log &amp;</span></span></code></pre></div><p>To enable multi-threaded data transfer (with implicit compression) using four threads, start <code>gpfdist</code> as follows:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>gpfdist -d /var/load_files -p 8081 --multi_thread 4</span></span></code></pre></div><p>To enable SSL certificate authentication without peer verification, start <code>gpfdist</code> as follows:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>gpfdist -d /var/load_files -p 8081 --ssl /path/to/certs --ssl_verify_peer off</span></span></code></pre></div><p>To stop <code>gpfdist</code> when it is running in the background:</p><p>--First find its process id:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ps ax | grep gpfdist</span></span></code></pre></div><p>--Then stop the process, for example:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>kill 3456</span></span></code></pre></div><h2 id="see-also" tabindex="-1"><a id="section7"></a>See Also <a class="header-anchor" href="#see-also" aria-label="Permalink to &quot;&lt;a id=&quot;section7&quot;&gt;&lt;/a&gt;See Also&quot;">​</a></h2><p><a href="./gpload.html">gpload</a>, <code>CREATE EXTERNAL TABLE</code></p>`,70)]))}const f=t(i,[["render",n]]);export{u as __pageData,f as default};
