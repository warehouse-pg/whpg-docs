import{_ as a,c as s,o as n,ag as t}from"./chunks/framework.Ds6Eueu6.js";const u=JSON.parse('{"title":"Enabling iptables (Optional)","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/install_guide/enable_iptables.md","filePath":"docs/7x/install_guide/enable_iptables.md"}'),o={name:"docs/7x/install_guide/enable_iptables.md"};function p(i,e,l,c,d,r){return n(),s("div",null,e[0]||(e[0]=[t(`<h1 id="enabling-iptables-optional" tabindex="-1">Enabling iptables (Optional) <a class="header-anchor" href="#enabling-iptables-optional" aria-label="Permalink to &quot;Enabling iptables (Optional)&quot;">​</a></h1><hr><p>On Linux systems, you can configure and enable the <code>iptables</code> firewall to work with WarehousePG.</p><blockquote><p><strong>Note</strong> WarehousePG performance might be impacted when <code>iptables</code> is enabled. You should test the performance of your application with <code>iptables</code> enabled to ensure that performance is acceptable.</p></blockquote><p>For more information about <code>iptables</code> see the <code>iptables</code> and firewall documentation for your operating system. See also <a href="./config_os.html">Deactivating SELinux and Firewall Software</a>.</p><h2 id="how-to-enable-iptables" tabindex="-1"><a id="ji163124"></a>How to Enable iptables <a class="header-anchor" href="#how-to-enable-iptables" aria-label="Permalink to &quot;&lt;a id=&quot;ji163124&quot;&gt;&lt;/a&gt;How to Enable iptables&quot;">​</a></h2><ol><li><p>As <code>gpadmin</code>, run this command on the WarehousePG coordinator host to stop WarehousePG:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ gpstop -a</span></span></code></pre></div></li><li><p>On the WarehousePG hosts:</p><ol><li><p>Update the file <code>/etc/sysconfig/iptables</code> based on the <a href="#topic16">Example iptables Rules</a>.</p></li><li><p>As root user, run these commands to enable <code>iptables</code>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># chkconfig iptables on</span></span>
<span class="line"><span># service iptables start</span></span></code></pre></div></li></ol></li><li><p>As gpadmin, run this command on the WarehousePG coordinator host to start WarehousePG:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ gpstart -a</span></span></code></pre></div></li></ol><blockquote><p><strong>Caution</strong> After enabling <code>iptables</code>, this error in the <code>/var/log/messages</code> file indicates that the setting for the <code>iptables</code> table is too low and needs to be increased.</p></blockquote><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ip_conntrack: table full, dropping packet.</span></span></code></pre></div><p>As root, run this command to view the <code>iptables</code> table value:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># sysctl net.ipv4.netfilter.ip_conntrack_max</span></span></code></pre></div><p>To ensure that the WarehousePG workload does not overflow the <code>iptables</code> table, as root, set it to the following value:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># sysctl net.ipv4.netfilter.ip_conntrack_max=6553600</span></span></code></pre></div><p>The value might need to be adjusted for your hosts. To maintain the value after reboot, you can update the <code>/etc/sysctl.conf</code> file as discussed in <a href="./config_os.html">Setting the WarehousePG Recommended OS Parameters</a>.</p><p><strong>Parent topic:</strong> <a href="./install_guide/">Installing and Upgrading WarehousePG</a></p><h2 id="example-iptables-rules" tabindex="-1"><a id="topic16"></a>Example iptables Rules <a class="header-anchor" href="#example-iptables-rules" aria-label="Permalink to &quot;&lt;a id=&quot;topic16&quot;&gt;&lt;/a&gt;Example iptables Rules&quot;">​</a></h2><p>When <code>iptables</code> is enabled, <code>iptables</code> manages the IP communication on the host system based on configuration settings (rules). The example rules are used to configure <code>iptables</code> for WarehousePG coordinator host, standby coordinator host, and segment hosts.</p><ul><li><a href="#topic17">Example Coordinator and Standby Coordinator iptables Rules</a></li><li><a href="#topic18">Example Segment Host iptables Rules</a></li></ul><p>The two sets of rules account for the different types of communication WarehousePG expects on the coordinator (primary and standby) and segment hosts. The rules should be added to the <code>/etc/sysconfig/iptables</code> file of the WarehousePG hosts. For WarehousePG, <code>iptables</code> rules should allow the following communication:</p><ul><li><p>For customer facing communication with the WarehousePG coordinator, allow at least <code>postgres</code> and <code>28080</code> (<code>eth1</code> interface in the example).</p></li><li><p>For WarehousePG cluster interconnect, allow communication using <code>tcp</code>, <code>udp</code>, and <code>icmp</code> protocols (<code>eth4</code> and <code>eth5</code> interfaces in the example).</p><p>The network interfaces that you specify in the <code>iptables</code> settings are the interfaces for the WarehousePG hosts that you list in the hostfile_gpinitsystem file. You specify the file when you run the <code>gpinitsystem</code> command to initialize a WarehousePG cluster. See <a href="./init_whpg.html">Initializing WarehousePG</a> for information about the hostfile_gpinitsystem file and the <code>gpinitsystem</code> command.</p></li><li><p>For the administration network on a WarehousePG DCA, allow communication using <code>ssh</code>, <code>ntp</code>, and <code>icmp</code> protocols. (<code>eth0</code> interface in the example).</p></li></ul><p>In the <code>iptables</code> file, each append rule command (lines starting with <code>-A</code>) is a single line.</p><p>The example rules should be adjusted for your configuration. For example:</p><ul><li>The append command, the <code>-A</code> lines and connection parameter <code>-i</code> should match the connectors for your hosts.</li><li>the CIDR network mask information for the source parameter <code>-s</code> should match the IP addresses for your network.</li></ul><h3 id="example-coordinator-and-standby-coordinator-iptables-rules" tabindex="-1"><a id="topic17"></a>Example Coordinator and Standby Coordinator iptables Rules <a class="header-anchor" href="#example-coordinator-and-standby-coordinator-iptables-rules" aria-label="Permalink to &quot;&lt;a id=&quot;topic17&quot;&gt;&lt;/a&gt;Example Coordinator and Standby Coordinator iptables Rules&quot;">​</a></h3><p>Example <code>iptables</code> rules with comments for the <code>/etc/sysconfig/iptables</code> file on the WarehousePG coordinator host and standby coordinator host.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>*filter</span></span>
<span class="line"><span># Following 3 are default rules. If the packet passes through</span></span>
<span class="line"><span># the rule set it gets these rule.</span></span>
<span class="line"><span># Drop all inbound packets by default.</span></span>
<span class="line"><span># Drop all forwarded (routed) packets.</span></span>
<span class="line"><span># Let anything outbound go through.</span></span>
<span class="line"><span>:INPUT DROP [0:0]</span></span>
<span class="line"><span>:FORWARD DROP [0:0]</span></span>
<span class="line"><span>:OUTPUT ACCEPT [0:0]</span></span>
<span class="line"><span># Accept anything on the loopback interface.</span></span>
<span class="line"><span>-A INPUT -i lo -j ACCEPT</span></span>
<span class="line"><span># If a connection has already been established allow the</span></span>
<span class="line"><span># remote host packets for the connection to pass through.</span></span>
<span class="line"><span>-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT</span></span>
<span class="line"><span># These rules let all tcp and udp through on the standard</span></span>
<span class="line"><span># interconnect IP addresses and on the interconnect interfaces.</span></span>
<span class="line"><span># NOTE: gpsyncmaster uses random tcp ports in the range 1025 to 65535</span></span>
<span class="line"><span># and WarehousePG uses random udp ports in the range 1025 to 65535.</span></span>
<span class="line"><span>-A INPUT -i eth4 -p udp -s 192.0.2.0/22 -j ACCEPT</span></span>
<span class="line"><span>-A INPUT -i eth5 -p udp -s 198.51.100.0/22 -j ACCEPT</span></span>
<span class="line"><span>-A INPUT -i eth4 -p tcp -s 192.0.2.0/22 -j ACCEPT --syn -m state --state NEW</span></span>
<span class="line"><span>-A INPUT -i eth5 -p tcp -s 198.51.100.0/22 -j ACCEPT --syn -m state --state NEW</span></span>
<span class="line"><span>\\# Allow udp/tcp ntp connections on the admin network on WarehousePG DCA.</span></span>
<span class="line"><span>-A INPUT -i eth0 -p udp --dport ntp -s 203.0.113.0/21 -j ACCEPT</span></span>
<span class="line"><span>-A INPUT -i eth0 -p tcp --dport ntp -s 203.0.113.0/21 -j ACCEPT --syn -m state --state NEW</span></span>
<span class="line"><span># Allow ssh on all networks (This rule can be more strict).</span></span>
<span class="line"><span>-A INPUT -p tcp --dport ssh -j ACCEPT --syn -m state --state NEW</span></span>
<span class="line"><span># Allow WarehousePG on all networks.</span></span>
<span class="line"><span>-A INPUT -p tcp --dport postgres -j ACCEPT --syn -m state --state NEW</span></span>
<span class="line"><span># Allow ping and any other icmp traffic on the interconnect networks.</span></span>
<span class="line"><span>-A INPUT -i eth4 -p icmp -s 192.0.2.0/22 -j ACCEPT</span></span>
<span class="line"><span>-A INPUT -i eth5 -p icmp -s 198.51.100.0/22 -j ACCEPT</span></span>
<span class="line"><span>\\# Allow ping only on the admin network on WarehousePG DCA.</span></span>
<span class="line"><span>-A INPUT -i eth0 -p icmp --icmp-type echo-request -s 203.0.113.0/21 -j ACCEPT</span></span>
<span class="line"><span># Log an error if a packet passes through the rules to the default</span></span>
<span class="line"><span># INPUT rule (a DROP).</span></span>
<span class="line"><span>-A INPUT -m limit --limit 5/min -j LOG --log-prefix &quot;iptables denied: &quot; --log-level 7</span></span>
<span class="line"><span>COMMIT</span></span></code></pre></div><h3 id="example-segment-host-iptables-rules" tabindex="-1"><a id="topic18"></a>Example Segment Host iptables Rules <a class="header-anchor" href="#example-segment-host-iptables-rules" aria-label="Permalink to &quot;&lt;a id=&quot;topic18&quot;&gt;&lt;/a&gt;Example Segment Host iptables Rules&quot;">​</a></h3><p>Example <code>iptables</code> rules for the <code>/etc/sysconfig/iptables</code> file on the WarehousePG segment hosts. The rules for segment hosts are similar to the coordinator rules with fewer interfaces and fewer <code>udp</code> and <code>tcp</code> services.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>*filter</span></span>
<span class="line"><span>:INPUT DROP</span></span>
<span class="line"><span>:FORWARD DROP</span></span>
<span class="line"><span>:OUTPUT ACCEPT</span></span>
<span class="line"><span>-A INPUT -i lo -j ACCEPT</span></span>
<span class="line"><span>-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT</span></span>
<span class="line"><span>-A INPUT -i eth2 -p udp -s 192.0.2.0/22 -j ACCEPT</span></span>
<span class="line"><span>-A INPUT -i eth3 -p udp -s 198.51.100.0/22 -j ACCEPT</span></span>
<span class="line"><span>-A INPUT -i eth2 -p tcp -s 192.0.2.0/22 -j ACCEPT --syn -m state --state NEW</span></span>
<span class="line"><span>-A INPUT -i eth3 -p tcp -s 198.51.100.0/22 -j ACCEPT --syn -m state --state NEW</span></span>
<span class="line"><span>-A INPUT -p tcp --dport ssh -j ACCEPT --syn -m state --state NEW</span></span>
<span class="line"><span>-A INPUT -i eth2 -p icmp -s 192.0.2.0/22 -j ACCEPT</span></span>
<span class="line"><span>-A INPUT -i eth3 -p icmp -s 198.51.100.0/22 -j ACCEPT</span></span>
<span class="line"><span>-A INPUT -i eth0 -p icmp --icmp-type echo-request -s 203.0.113.0/21 -j ACCEPT</span></span>
<span class="line"><span>-A INPUT -m limit --limit 5/min -j LOG --log-prefix &quot;iptables denied: &quot; --log-level 7</span></span>
<span class="line"><span>COMMIT</span></span></code></pre></div>`,29)]))}const m=a(o,[["render",p]]);export{u as __pageData,m as default};
