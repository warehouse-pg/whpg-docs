import{_ as a,c as s,o as t,ag as n}from"./chunks/framework.Ds6Eueu6.js";const E=JSON.parse('{"title":"ALTER VIEW","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/ref_guide/sql_commands/ALTER_VIEW.md","filePath":"docs/7x/ref_guide/sql_commands/ALTER_VIEW.md"}'),o={name:"docs/7x/ref_guide/sql_commands/ALTER_VIEW.md"};function i(l,e,p,r,c,d){return t(),s("div",null,e[0]||(e[0]=[n(`<h1 id="alter-view" tabindex="-1">ALTER VIEW <a class="header-anchor" href="#alter-view" aria-label="Permalink to &quot;ALTER VIEW&quot;">​</a></h1><p>Changes properties of a view.</p><h2 id="synopsis" tabindex="-1"><a id="section2"></a>Synopsis <a class="header-anchor" href="#synopsis" aria-label="Permalink to &quot;&lt;a id=&quot;section2&quot;&gt;&lt;/a&gt;Synopsis&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER VIEW [ IF EXISTS ] &lt;name&gt; ALTER [ COLUMN ] &lt;column_name&gt; SET DEFAULT &lt;expression&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ALTER VIEW [ IF EXISTS ] &lt;name&gt; ALTER [ COLUMN ] &lt;column_name&gt; DROP DEFAULT</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ALTER VIEW [ IF EXISTS ] &lt;name&gt; OWNER TO { &lt;new_owner&gt; | CURRENT_USER | SESSION_USER }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ALTER VIEW [ IF EXISTS ] &lt;name&gt; RENAME TO &lt;new_name&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ALTER VIEW [ IF EXISTS ] &lt;name&gt; SET SCHEMA &lt;new_schema&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ALTER VIEW [ IF EXISTS ] &lt;name&gt; SET ( &lt;view_option_name&gt; [= &lt;view_option_value&gt;] [, ... ] )</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ALTER VIEW [ IF EXISTS ] &lt;name&gt; RESET ( &lt;view_option_name&gt; [, ... ] )</span></span></code></pre></div><h2 id="description" tabindex="-1"><a id="section3"></a>Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;&lt;a id=&quot;section3&quot;&gt;&lt;/a&gt;Description&quot;">​</a></h2><p><code>ALTER VIEW</code> changes various auxiliary properties of a view. (If you want to modify the view&#39;s defining query, use <code>CREATE OR REPLACE VIEW</code>).</p><p>You must own the view to use <code>ALTER VIEW</code>. To change a view&#39;s schema you must also have <code>CREATE</code> privilege on the new schema. To alter the owner, you must also be a direct or indirect member of the new owning role, and that role must have <code>CREATE</code> privilege on the view&#39;s schema. These restrictions enforce that altering the owner does not do anything you could not do by dropping and recreating the view. However, a superuser can alter ownership of any view.</p><h2 id="parameters" tabindex="-1"><a id="section4"></a>Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;&lt;a id=&quot;section4&quot;&gt;&lt;/a&gt;Parameters&quot;">​</a></h2><p>name : The name (optionally schema-qualified) of an existing view.</p><p>IF EXISTS : Do not throw an error if the view does not exist. WarehousePG issues a notice in this case.</p><p>SET/DROP DEFAULT : These forms set or remove the default value for a column. A view column&#39;s default value is substituted into any <code>INSERT</code> or <code>UPDATE</code> command whose target is the view, before applying any rules or triggers for the view. The view&#39;s default will therefore take precedence over any default values from underlying relations.</p><p>new_owner : The user name of the new owner of the view.</p><p>new_name : The new name of the view.</p><p>new_schema : The new schema for the view.</p><p>SET ( view_option_name [= view_option_value] [, ... ] ) RESET ( view_option_name [, ... ] ) : Sets or resets a view option. Currently supported options are:</p><pre><code>check\\_option \\(string\\)
:   Changes the check option of the view. The value must be \`local\` or \`cascaded\`.

security\\_barrier \\(boolean\\)
:   Changes the security-barrier property of the view. The value must be a Boolean value, such as \`true\` or \`false\`.
</code></pre><h2 id="notes" tabindex="-1"><a id="Notes"></a>Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;&lt;a id=&quot;Notes&quot;&gt;&lt;/a&gt;Notes&quot;">​</a></h2><p>For historical reasons, <code>ALTER TABLE</code> can be used with views, too; however, the only variants of <code>ALTER TABLE</code> that are allowed with views are equivalent to the statements shown above.</p><h2 id="examples" tabindex="-1"><a id="examples"></a>Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;&lt;a id=&quot;examples&quot;&gt;&lt;/a&gt;Examples&quot;">​</a></h2><p>To rename the view <code>foo</code> to <code>bar</code>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER VIEW foo RENAME TO bar;</span></span></code></pre></div><p>To attach a default column value to an updatable view:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE TABLE base_table (id int, ts timestamptz);</span></span>
<span class="line"><span>CREATE VIEW a_view AS SELECT * FROM base_table;</span></span>
<span class="line"><span>ALTER VIEW a_view ALTER COLUMN ts SET DEFAULT now();</span></span>
<span class="line"><span>INSERT INTO base_table(id) VALUES(1);  -- ts will receive a NULL</span></span>
<span class="line"><span>INSERT INTO a_view(id) VALUES(2);  -- ts will receive the current time</span></span></code></pre></div><h2 id="compatibility" tabindex="-1"><a id="section6"></a>Compatibility <a class="header-anchor" href="#compatibility" aria-label="Permalink to &quot;&lt;a id=&quot;section6&quot;&gt;&lt;/a&gt;Compatibility&quot;">​</a></h2><p><code>ALTER VIEW</code> is a WarehousePG extension of the SQL standard.</p><h2 id="see-also" tabindex="-1"><a id="section7"></a>See Also <a class="header-anchor" href="#see-also" aria-label="Permalink to &quot;&lt;a id=&quot;section7&quot;&gt;&lt;/a&gt;See Also&quot;">​</a></h2><p><a href="./CREATE_VIEW.html">CREATE VIEW</a>, <a href="./DROP_VIEW.html">DROP VIEW</a></p><p><strong>Parent topic:</strong> <a href="./../sql_commands/sql_ref.html">SQL Commands</a></p>`,28)]))}const u=a(o,[["render",i]]);export{E as __pageData,u as default};
