import{_ as t,c as a,o,ag as d}from"./chunks/framework.Ds6Eueu6.js";const g=JSON.parse('{"title":"Understanding the External Table to Foreign Table Mapping","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/admin_guide/external/map_ext_to_foreign.md","filePath":"docs/7x/admin_guide/external/map_ext_to_foreign.md"}'),n={name:"docs/7x/admin_guide/external/map_ext_to_foreign.md"};function s(r,e,l,i,c,p){return o(),a("div",null,e[0]||(e[0]=[d(`<h1 id="understanding-the-external-table-to-foreign-table-mapping" tabindex="-1">Understanding the External Table to Foreign Table Mapping <a class="header-anchor" href="#understanding-the-external-table-to-foreign-table-mapping" aria-label="Permalink to &quot;Understanding the External Table to Foreign Table Mapping&quot;">​</a></h1><hr><p>WarehousePG 7 uses the built-in <code>gp_exttable_fdw</code> foreign-data wrapper module to internally convert an external table that you define with the <a href="./../../ref_guide/sql_commands/CREATE_EXTERNAL_TABLE.html">CREATE EXTERNAL TABLE</a> command to a foreign table.</p><p>In the foreign data paradigm, a foreign-data wrapper (FDW) provides access to an external data source. A foreign server object associated with a specific FDW defines the connection details to a particular remote data source. A foreign table specifies the foreign server with which to access the remote data source. The foreign table also defines the structure of the remote data, just as you would define with an external table. Refer to <a href="./foreign.html">Accessing External Data with Foreign Tables</a> for more information about how to manage external data with FDWs.</p><p>WarehousePG internally maps the information that you provide in the <code>CREATE [WRITABLE] EXTERNAL TABLE</code> command to foreign data objects as follows:</p><table tabindex="0"><thead><tr><th>Foreign Data Object</th><th>Name/Value</th><th>Comments</th></tr></thead><tbody><tr><td>foreign-data wrapper</td><td><code>gp_exttable_fdw</code></td><td>WarehousePG maps all external tables that you create with the <code>CREATE [WRITABLE] EXTERNAL TABLE</code> command to the <code>gp_exttable_fdw</code> FDW. This FDW handles the external to foreign table conversion.</td></tr><tr><td>foreign server</td><td><code>gp_exttable_server</code></td><td>WarehousePG maps all external tables that you create with the <code>CREATE [WRITABLE] EXTERNAL TABLE</code> command to the <code>gp_exttable_server</code> server.</td></tr><tr><td>foreign table</td><td><code>&lt;external_table_name&gt;</code></td><td>WarehousePG maps an external table that you create with the <code>CREATE [WRITABLE] EXTERNAL TABLE</code> command to a foreign table of the same name.</td></tr></tbody></table><p>When <code>gp_exttable_fdw</code> internally creates the foreign table, it maps the clauses and keywords that you provide in the <code>CREATE [WRITABLE] EXTERNAL TABLE</code> command to specific FDW options. In cases where no direct mapping exists, or where there is no equivalent external table clause, default FDW option values are provided.</p><p>The external table clause to foreign table option mapping follows:</p><table tabindex="0"><thead><tr><th>CREATE EXTERNAL TABLE Clause</th><th>FDW Option(s) and Value(s)</th><th>Description</th></tr></thead><tbody><tr><td>CREATE EXTERNAL TABLE</td><td><code>is_writable &#39;false&#39;</code></td><td>Readable external tables are not writable.</td></tr><tr><td>CREATE WRITABLE EXTERNAL TABLE</td><td><code>is_writable &#39;true&#39;</code></td><td>Writable external tables are writable and alterable.</td></tr><tr><td><code>LOCATION (&#39;&lt;location&gt;&#39; [, ...])</code></td><td><code>location_uris &#39;&lt;location&gt;&#39;</code></td><td>The location of the external data. <code>gp_exttable_fdw</code> uses a pipe (\`</td></tr><tr><td><code>FORMAT &#39;TEXT&#39;</code></td><td><code>format &#39;text&#39;</code></td><td>The external data is text format.</td></tr><tr><td><code>FORMAT &#39;CSV&#39;</code></td><td><code>format &#39;csv&#39;</code></td><td>The external data is comma-separated value format.</td></tr><tr><td><code>FORMAT &#39;CUSTOM&#39;</code></td><td><code>format &#39;custom&#39; formatter &#39;&lt;name&gt;&#39;</code></td><td>The external data is of a custom format, and WarehousePG uses the specified formatter to parse the data.</td></tr><tr><td>formatting options</td><td><code>delimiter &lt;value&gt;</code> <code>escape &lt;value&gt;</code> <code>&quot;null&quot; &lt;value&gt;</code> <code>&lt;option1&gt; &lt;value&gt;</code><code>...</code></td><td>Format-dependent formatting options.</td></tr><tr><td><code>OPTIONS &lt;key&gt; &#39;&lt;value&gt;&#39; [, ...]</code></td><td><code>&lt;key&gt; &lt;value&gt;</code><code>...</code></td><td>The data access protocol-specific options.</td></tr><tr><td><code>ENCODING &lt;encoding&gt;</code></td><td><code>encoding &#39;&lt;encoding_str&gt;&#39;</code></td><td>The table encoding (string).</td></tr><tr><td><code>LOG ERRORS</code></td><td><code>log_errors &#39;enable&#39;</code></td><td>Log errors to an error log. <code>gp_exttable_fdw</code> sets this FDW option to <code>log_errors &#39;disable&#39;</code> when the <code>LOG ERRORS</code> clause is not provided.</td></tr><tr><td><code>LOG ERRORS PERSISTENTLY</code></td><td><code>log_errors &#39;persistently&#39;</code></td><td>Log errors to a persistent error log. <code>gp_exttable_fdw</code> sets this FDW option to <code>log_errors &#39;disable&#39;</code> when the <code>LOG ERRORS</code> clause is not provided.</td></tr><tr><td><code>SEGMENT REJECT LIMIT &lt;num_or_pct&gt;</code></td><td><code>reject_limit &#39;&lt;num&gt;&#39; reject_limit_type &#39;&lt;type&gt;&#39;</code></td><td>The number of errored rows (<code>&lt;type&gt;</code> is <code>rows</code>) or the errored row percentage (<code>&lt;type&gt;</code> is <code>percentage</code>) allowed.</td></tr><tr><td>n/a</td><td><code>execute_on &#39;ALL_SEGMENTS&#39;</code></td><td>Utilize the parallel processing inherent in WarehousePG.</td></tr></tbody></table><h2 id="implications" tabindex="-1"><a id="implications"></a>Implications <a class="header-anchor" href="#implications" aria-label="Permalink to &quot;&lt;a id=&quot;implications&quot;&gt;&lt;/a&gt;Implications&quot;">​</a></h2><p>Because WarehousePG 7 converts an external table to a foreign table and uses foreign table structures and catalogs to internally represent external tables:</p><ul><li>External tables are included in the foreign table catalogs. Use the <a href="./../../ref_guide/system_catalogs/pg_foreign_table.html">pg_foreign_table</a> system catalog table and the <code>ftoptions</code> column to view external table definitions.</li><li>Certain command output and error, detail, and notice messages about external tables refer to the table as a foreign table.</li><li>External tables are included when you list or examine foreign tables (for example, the <code>\\det</code> <code>psql</code> meta-command).</li></ul><h2 id="example" tabindex="-1"><a id="example"></a>Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;&lt;a id=&quot;example&quot;&gt;&lt;/a&gt;Example&quot;">​</a></h2><p>Given the following external table definition:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE EXTERNAL TABLE ext_expenses ( name text, date date, amount float4, category text, desc1 varchar )</span></span>
<span class="line"><span>  LOCATION (&#39;gpfdist://etlhost-1:8081/*.txt&#39;, &#39;gpfdist://etlhost-2:8082/*.txt&#39;)</span></span>
<span class="line"><span>FORMAT &#39;TEXT&#39; ( DELIMITER &#39;|&#39; NULL &#39; &#39; )</span></span>
<span class="line"><span>LOG ERRORS SEGMENT REJECT LIMIT 5;</span></span></code></pre></div><p><code>gp_exttable_fdw</code> creates a foreign table whose <code>psql</code> <code>\\d+</code> output follows:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>\\d+ ext_expenses</span></span>
<span class="line"><span>                                         Foreign table &quot;public.ext_expenses&quot;</span></span>
<span class="line"><span>  Column  |       Type        | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description </span></span>
<span class="line"><span>----------+-------------------+-----------+----------+---------+-------------+----------+--------------+-------------</span></span>
<span class="line"><span> name     | text              |           |          |         |             | extended |              | </span></span>
<span class="line"><span> date     | date              |           |          |         |             | plain    |              | </span></span>
<span class="line"><span> amount   | real              |           |          |         |             | plain    |              | </span></span>
<span class="line"><span> category | text              |           |          |         |             | extended |              | </span></span>
<span class="line"><span> desc1    | character varying |           |          |         |             | extended |              | </span></span>
<span class="line"><span>FDW options: (format &#39;text&#39;, delimiter &#39;|&#39;, &quot;null&quot; &#39; &#39;, escape E&#39;\\\\&#39;, location_uris &#39;gpfdist://etlhost-1:8081/\\*.txt|&#39;gpfdist://etlhost-2:8082/\\*.txt&#39;, execute_on &#39;ALL_SEGMENTS&#39;, reject_limit &#39;5&#39;, reject_limit_type &#39;rows&#39;, log_errors &#39;enable&#39;, encoding &#39;UTF8&#39;, is_writable &#39;false&#39;)</span></span></code></pre></div>`,17)]))}const m=t(n,[["render",s]]);export{g as __pageData,m as default};
