import{_ as i,c as s,o as a,ag as t}from"./chunks/framework.Ds6Eueu6.js";const c=JSON.parse('{"title":"GPORCA Limitations","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/admin_guide/query/topics/query-piv-opt-limitations.md","filePath":"docs/7x/admin_guide/query/topics/query-piv-opt-limitations.md"}'),n={name:"docs/7x/admin_guide/query/topics/query-piv-opt-limitations.md"};function l(o,e,r,p,d,h){return a(),s("div",null,e[0]||(e[0]=[t(`<h1 id="gporca-limitations" tabindex="-1">GPORCA Limitations <a class="header-anchor" href="#gporca-limitations" aria-label="Permalink to &quot;GPORCA Limitations&quot;">​</a></h1><hr><p>There are limitations in WarehousePG when using the default GPORCA optimizer. GPORCA and the Postgres-based planner currently coexist in WarehousePG because GPORCA does not support all WarehousePG features.</p><p>This section describes the limitations.</p><ul><li><a href="#topic_kgn_vxl_vp">Unsupported SQL Query Features</a></li><li><a href="#topic_u4t_vxl_vp">Performance Regressions</a></li></ul><p><strong>Parent topic:</strong> <a href="./../../query/topics/query-piv-optimizer.html">About GPORCA</a></p><h2 id="unsupported-sql-query-features" tabindex="-1"><a id="topic_kgn_vxl_vp"></a>Unsupported SQL Query Features <a class="header-anchor" href="#unsupported-sql-query-features" aria-label="Permalink to &quot;&lt;a id=&quot;topic_kgn_vxl_vp&quot;&gt;&lt;/a&gt;Unsupported SQL Query Features&quot;">​</a></h2><p>Certain query features are not supported with the default GPORCA optimizer. When an unsupported query is run, WarehousePG logs this notice along with the query text:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Falling back to Postgres-based planner because GPORCA does not support the following feature: UTILITY command</span></span></code></pre></div><p>These features are unsupported when GPORCA is enabled (the default):</p><ul><li><p>SP-GiST indexing method. GPORCA supports only B-tree, bitmap, GIN, and GiST indexes. GPORCA ignores indexes created with unsupported methods.</p></li><li><p>The <code>SELECT</code> command&#39;s <code>TABLESAMPLE</code> clause.</p></li><li><p>The optional <code>WITH ORDINALITY</code> clause of a function call inside the <code>FROM</code> clause of a <code>SELECT</code> command.</p></li><li><p>Multi-level partitioned tables.</p></li><li><p>Non-uniform partitioned tables.</p></li><li><p>SortMergeJoin (SMJ).</p></li><li><p>Ordered aggregations.</p></li><li><p>Multi-argument <code>DISTINCT</code> qualified aggregates, for example <code>SELECT corr(DISTINCT a, b) FROM tbl1;</code>.</p></li><li><p>Multiple grouping sets specified using a duplicate alias in a null-producing grouping set spec. Such queries fall back to the Postgres-based planner unless you directly coerce the alias to a separate variable as shown in the example below:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TEMP </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tempt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ai1, i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ai2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> generate_series</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)i;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ai1, ai2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tempt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GROUP BY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ai2, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ROLLUP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ai1) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ORDER BY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ai1, ai2;</span></span></code></pre></div></li><li><p>These scalar operators:</p><ul><li>ROW</li><li>ROWCOMPARE</li><li>FIELDSELECT</li></ul></li><li><p>Aggregate functions that take set operators as input arguments.</p></li><li><p>Multiple Distinct Qualified Aggregates, such as <code>SELECT count(DISTINCT a), sum(DISTINCT b) FROM foo</code>, are not supported by default. They can be enabled with the <code>optimizer_enable_multiple_distinct_aggs</code> <a href="./../../../ref_guide/config_params/guc-list.html">Configuration Parameter</a>.</p></li><li><p>percentile_* window functions (ordered-set aggregate functions).</p></li><li><p>Inverse distribution functions.</p></li><li><p>Queries that run functions that are defined with the <code>ON COORDINATOR</code> or <code>ON ALL SEGMENTS</code> attribute.</p></li><li><p>Queries that contain UNICODE characters in metadata names, such as table names, and the characters are not compatible with the host system locale.</p></li><li><p><code>SELECT</code>, <code>UPDATE</code>, and <code>DELETE</code> commands where a table name is qualified by the <code>ONLY</code> keyword.</p></li><li><p>Per-column collation. GPORCA supports collation only when all columns in the query use the same collation. If columns in the query use different collations, then WarehousePG uses the Postgres-based planner.</p></li><li><p>DML and <code>COPY ... FROM</code> operations on foreign tables.</p></li><li><p>Unsupported index-related features include:</p><ul><li>Index scan on AO tables</li><li>Partial dynamic index scan</li><li>Partial indexes</li><li>Forward and backward dynamic index and dynamic index-only scans on partitioned tables</li><li>Indexed expressions (an index defined as an expression based on one or more columns of the table)</li><li>Combined indexes</li></ul></li></ul><h2 id="performance-regressions" tabindex="-1"><a id="topic_u4t_vxl_vp"></a>Performance Regressions <a class="header-anchor" href="#performance-regressions" aria-label="Permalink to &quot;&lt;a id=&quot;topic_u4t_vxl_vp&quot;&gt;&lt;/a&gt;Performance Regressions&quot;">​</a></h2><p>The following features are known performance regressions that occur with GPORCA enabled:</p><ul><li>Short running queries - For GPORCA, short running queries might encounter additional overhead due to GPORCA enhancements for determining an optimal query execution plan.</li><li>ANALYZE - For GPORCA, the ANALYZE command generates root partition statistics for partitioned tables. For the Postgres-based planner, these statistics are not generated.</li><li>DML operations - For GPORCA, DML enhancements including the support of updates on partition and distribution keys might require additional overhead.</li></ul><p>Also, enhanced functionality of the features from previous versions could result in additional time required when GPORCA runs SQL statements with the features.</p>`,15)]))}const g=i(n,[["render",l]]);export{c as __pageData,g as default};
