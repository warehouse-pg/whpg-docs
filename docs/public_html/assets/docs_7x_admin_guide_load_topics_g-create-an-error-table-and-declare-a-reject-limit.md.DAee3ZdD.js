import{_ as r,c as a,o as t,ag as o}from"./chunks/framework.Ds6Eueu6.js";const m=JSON.parse('{"title":"Capture Row Formatting Errors and Declare a Reject Limit","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/admin_guide/load/topics/g-create-an-error-table-and-declare-a-reject-limit.md","filePath":"docs/7x/admin_guide/load/topics/g-create-an-error-table-and-declare-a-reject-limit.md"}'),i={name:"docs/7x/admin_guide/load/topics/g-create-an-error-table-and-declare-a-reject-limit.md"};function n(s,e,d,l,c,p){return t(),a("div",null,e[0]||(e[0]=[o('<h1 id="capture-row-formatting-errors-and-declare-a-reject-limit" tabindex="-1">Capture Row Formatting Errors and Declare a Reject Limit <a class="header-anchor" href="#capture-row-formatting-errors-and-declare-a-reject-limit" aria-label="Permalink to &quot;Capture Row Formatting Errors and Declare a Reject Limit&quot;">â€‹</a></h1><hr><p>The following SQL fragment captures formatting errors internally in WarehousePG and declares a reject limit of 10 rows.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>LOG ERRORS SEGMENT REJECT LIMIT 10 ROWS</span></span></code></pre></div><p>Use the built-in SQL function <code>gp_read_error_log()</code> to read the error log data. For information about viewing log errors, see <a href="./g-viewing-bad-rows-in-the-error-table-or-error-log.html">Viewing Bad Rows in the Error Log</a>.</p><p><strong>Parent topic:</strong> <a href="./../../load/topics/g-handling-load-errors.html">Handling Load Errors</a></p>',6)]))}const _=r(i,[["render",n]]);export{m as __pageData,_ as default};
