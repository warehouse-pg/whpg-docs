import{_ as e,c as d,o,ag as a}from"./chunks/framework.Ds6Eueu6.js";const b=JSON.parse('{"title":"pg_locks","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/ref_guide/system_catalogs/pg_locks.md","filePath":"docs/7x/ref_guide/system_catalogs/pg_locks.md"}'),i={name:"docs/7x/ref_guide/system_catalogs/pg_locks.md"};function c(s,t,r,n,l,h){return o(),d("div",null,t[0]||(t[0]=[a('<h1 id="pg-locks" tabindex="-1">pg_locks <a class="header-anchor" href="#pg-locks" aria-label="Permalink to &quot;pg_locks&quot;">â€‹</a></h1><p>The <code>pg_locks</code> view provides access to information about the locks held by open transactions within WarehousePG.</p><p><code>pg_locks</code> contains one row per active lockable object, requested lock mode, and relevant transaction. Thus, the same lockable object may appear many times if multiple transactions are holding or waiting for locks on it. An object with no current locks on it will not appear in the view at all.</p><p>There are several distinct types of lockable objects: whole relations (such as tables), individual pages of relations, individual tuples of relations, transaction IDs (both virtual and permanent IDs), and general database objects. Also, the right to extend a relation is represented as a separate lockable object.</p><table tabindex="0"><thead><tr><th>column</th><th>type</th><th>references</th><th>description</th></tr></thead><tbody><tr><td><code>locktype</code></td><td>text</td><td></td><td>Type of the lockable object: <code>relation</code>, <code>extend</code>, <code>page</code>, <code>tuple</code>, <code>transactionid</code>, <code>object</code>, <code>userlock</code>, <code>resource queue</code>, or <code>advisory</code></td></tr><tr><td><code>database</code></td><td>oid</td><td>pg_database.oid</td><td>OID of the database in which the object exists, zero if the object is a shared object, or NULL if the object is a transaction ID</td></tr><tr><td><code>relation</code></td><td>oid</td><td>pg_class.oid</td><td>OID of the relation, or NULL if the object is not a relation or part of a relation</td></tr><tr><td><code>page</code></td><td>integer</td><td></td><td>Page number within the relation, or NULL if the object is not a tuple or relation page</td></tr><tr><td><code>tuple</code></td><td>smallint</td><td></td><td>Tuple number within the page, or NULL if the object is not a tuple</td></tr><tr><td><code>virtualxid</code></td><td>text</td><td></td><td>Virtual ID of a transaction, or NULL if the object is not a virtual transaction ID</td></tr><tr><td><code>transactionid</code></td><td>xid</td><td></td><td>ID of a transaction, or NULL if the object is not a transaction ID</td></tr><tr><td><code>classid</code></td><td>oid</td><td>pg_class.oid</td><td>OID of the system catalog containing the object, or NULL if the object is not a general database object</td></tr><tr><td><code>objid</code></td><td>oid</td><td>any OID column</td><td>OID of the object within its system catalog, or NULL if the object is not a general database object</td></tr><tr><td><code>objsubid</code></td><td>smallint</td><td></td><td>For a table column, this is the column number (the classid and objid refer to the table itself). For all other object types, this column is zero. NULL if the object is not a general database object</td></tr><tr><td><code>virtualtransaction</code></td><td>text</td><td></td><td>Virtual ID of the transaction that is holding or awaiting this lock</td></tr><tr><td><code>pid</code></td><td>integer</td><td></td><td>Process ID of the server process holding or awaiting this lock. NULL if the lock is held by a prepared transaction</td></tr><tr><td><code>mode</code></td><td>text</td><td></td><td>Name of the lock mode held or desired by this process</td></tr><tr><td><code>granted</code></td><td>boolean</td><td></td><td>True if lock is held, false if lock is awaited.</td></tr><tr><td><code>fastpath</code></td><td>boolean</td><td></td><td>True if lock was taken via fastpath, false if lock is taken via main lock table.</td></tr><tr><td><code>mppsessionid</code></td><td>integer</td><td></td><td>The id of the client session associated with this lock.</td></tr><tr><td><code>mppiswriter</code></td><td>boolean</td><td></td><td>Specifies whether the lock is held by a writer process.</td></tr><tr><td><code>gp_segment_id</code></td><td>integer</td><td></td><td>The WarehousePG segment id (<code>dbid</code>) where the lock is held.</td></tr></tbody></table><p><strong>Parent topic:</strong> <a href="./../system_catalogs/catalog_ref-html.html">System Catalogs Definitions</a></p>',6)]))}const f=e(i,[["render",c]]);export{b as __pageData,f as default};
