import{_ as a,c as t,o as n,ag as o}from"./chunks/framework.Ds6Eueu6.js";const p=JSON.parse('{"title":"Character Encoding","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/admin_guide/load/topics/g-character-encoding.md","filePath":"docs/7x/admin_guide/load/topics/g-character-encoding.md"}'),i={name:"docs/7x/admin_guide/load/topics/g-character-encoding.md"};function c(s,e,r,d,h,l){return n(),t("div",null,e[0]||(e[0]=[o('<h1 id="character-encoding" tabindex="-1">Character Encoding <a class="header-anchor" href="#character-encoding" aria-label="Permalink to &quot;Character Encoding&quot;">​</a></h1><hr><p>Character encoding systems consist of a code that pairs each character from a character set with something else, such as a sequence of numbers or octets, to facilitate data transmission and storage. WarehousePG supports a variety of character sets, including single-byte character sets such as the ISO 8859 series and multiple-byte character sets such as EUC (Extended UNIX Code), UTF-8, and Mule internal code. The server-side character set is defined during database initialization, UTF-8 is the default and can be changed. Clients can use all supported character sets transparently, but a few are not supported for use within the server as a server-side encoding. When loading or inserting data into WarehousePG, WarehousePG transparently converts the data from the specified client encoding into the server encoding. When sending data back to the client, WarehousePG converts the data from the server character encoding into the specified client encoding.</p><p>Data files must be in a character encoding recognized by WarehousePG. See the <em>WarehousePG Reference Guide</em> for the supported character sets.Data files that contain invalid or unsupported encoding sequences encounter errors when loading into WarehousePG.</p><blockquote><p><strong>Note</strong> On data files generated on a Microsoft Windows operating system, run the <code>dos2unix</code> system command to remove any Windows-only characters before loading into WarehousePG.</p></blockquote><blockquote><p><strong>Note</strong> If you <em>change</em> the <code>ENCODING</code> value in an existing <code>gpload</code> control file, you must manually drop any external tables that were creating using the previous <code>ENCODING</code> configuration. <code>gpload</code> does not drop and recreate external tables to use the new <code>ENCODING</code> if <code>REUSE_TABLES</code> is set to <code>true</code>.</p></blockquote><p><strong>Parent topic:</strong> <a href="./../../load/topics/g-formatting-data-files.html">Formatting Data Files</a></p><h2 id="changing-the-client-side-character-encoding" tabindex="-1"><a id="topic103"></a>Changing the Client-Side Character Encoding <a class="header-anchor" href="#changing-the-client-side-character-encoding" aria-label="Permalink to &quot;&lt;a id=&quot;topic103&quot;&gt;&lt;/a&gt;Changing the Client-Side Character Encoding&quot;">​</a></h2><p>The client-side character encoding can be changed for a session by setting the server configuration parameter <code>client_encoding</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SET client_encoding TO &#39;latin1&#39;;</span></span></code></pre></div><p>Change the client-side character encoding back to the default value:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>RESET client_encoding;</span></span></code></pre></div><p>Show the current client-side character encoding setting:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SHOW client_encoding;</span></span></code></pre></div>',14)]))}const u=a(i,[["render",c]]);export{p as __pageData,u as default};
