import{_ as e,c as a,o as d,ag as r}from"./chunks/framework.Ds6Eueu6.js";const n=JSON.parse('{"title":"pg_auth_members","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/ref_guide/system_catalogs/pg_auth_members.md","filePath":"docs/7x/ref_guide/system_catalogs/pg_auth_members.md"}'),o={name:"docs/7x/ref_guide/system_catalogs/pg_auth_members.md"};function s(m,t,_,i,h,c){return d(),a("div",null,t[0]||(t[0]=[r('<h1 id="pg-auth-members" tabindex="-1">pg_auth_members <a class="header-anchor" href="#pg-auth-members" aria-label="Permalink to &quot;pg_auth_members&quot;">â€‹</a></h1><p>The <code>pg_auth_members</code> system catalog table shows the membership relations between roles. Any non-circular set of relationships is allowed. Because roles are system-wide, <code>pg_auth_members</code> is shared across all databases of a WarehousePG cluster.</p><table tabindex="0"><thead><tr><th>column</th><th>type</th><th>references</th><th>description</th></tr></thead><tbody><tr><td><code>roleid</code></td><td>oid</td><td>pg_authid.oid</td><td>ID of the parent-level (group) role</td></tr><tr><td><code>member</code></td><td>oid</td><td>pg_authid.oid</td><td>ID of a member role</td></tr><tr><td><code>grantor</code></td><td>oid</td><td>pg_authid.oid</td><td>ID of the role that granted this membership</td></tr><tr><td><code>admin_option</code></td><td>boolean</td><td></td><td>True if role member may grant membership to others</td></tr></tbody></table><p><strong>Parent topic:</strong> <a href="./../system_catalogs/catalog_ref-html.html">System Catalogs Definitions</a></p>',4)]))}const p=e(o,[["render",s]]);export{n as __pageData,p as default};
