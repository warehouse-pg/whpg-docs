import{_ as s,c as a,o as t,ag as n}from"./chunks/framework.Ds6Eueu6.js";const u=JSON.parse('{"title":"Security","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/best_practices/security.md","filePath":"docs/7x/best_practices/security.md"}'),i={name:"docs/7x/best_practices/security.md"};function o(r,e,p,c,l,d){return t(),a("div",null,e[0]||(e[0]=[n(`<h1 id="security" tabindex="-1">Security <a class="header-anchor" href="#security" aria-label="Permalink to &quot;Security&quot;">​</a></h1><hr><p>Best practices to ensure the highest level of system security.</p><h2 id="basic-security-best-practices" tabindex="-1"><a id="secbp"></a>Basic Security Best Practices <a class="header-anchor" href="#basic-security-best-practices" aria-label="Permalink to &quot;&lt;a id=&quot;secbp&quot;&gt;&lt;/a&gt;Basic Security Best Practices&quot;">​</a></h2><ul><li>Secure the <code>gpadmin</code> system user. WarehousePG requires a UNIX user id to install and initialize the WarehousePG cluster. This system user is referred to as <code>gpadmin</code> in the WarehousePG documentation. The <code>gpadmin</code> user is the default database superuser in WarehousePG, as well as the file system owner of the WarehousePG installation and its underlying data files. The default administrator account is fundamental to the design of WarehousePG. The system cannot run without it, and there is no way to limit the access of the <code>gpadmin</code> user id. This <code>gpadmin</code> user can bypass all security features of WarehousePG. Anyone who logs on to a WarehousePG host with this user id can read, alter, or delete any data, including system catalog data and database access rights. Therefore, it is very important to secure the <code>gpadmin</code> user id and only allow essential system administrators access to it. Administrators should only log in to WarehousePG as <code>gpadmin</code> when performing certain system maintenance tasks (such as upgrade or expansion). Database users should never log on as <code>gpadmin</code>, and ETL or production workloads should never run as <code>gpadmin</code>.</li><li>Assign a distinct role to each user who logs in. For logging and auditing purposes, each user who is allowed to log in to WarehousePG should be given their own database role. For applications or web services, consider creating a distinct role for each application or service. See &quot;Creating New Roles (Users)&quot; in the <em>WarehousePG Administrator Guide</em>.</li><li>Use groups to manage access privileges. See &quot;Creating Groups (Role Membership)&quot; in the <em>WarehousePG Administrator Guide</em>.</li><li>Limit users who have the <code>SUPERUSER</code> role attribute. Roles that are superusers bypass all access privilege checks in WarehousePG, as well as resource queuing. Only system administrators should be given superuser rights. See &quot;Altering Role Attributes&quot; in the <em>WarehousePG Administrator Guide</em>.</li></ul><h2 id="password-strength-guidelines" tabindex="-1"><a id="password-strength-recommendations"></a>Password Strength Guidelines <a class="header-anchor" href="#password-strength-guidelines" aria-label="Permalink to &quot;&lt;a id=&quot;password-strength-recommendations&quot;&gt;&lt;/a&gt;Password Strength Guidelines&quot;">​</a></h2><p>To protect the network from intrusion, system administrators should verify the passwords used within an organization are strong ones. The following recommendations can strengthen a password:</p><ul><li>Minimum password length recommendation: At least 9 characters. MD5 passwords should be 15 characters or longer.</li><li>Mix upper and lower case letters.</li><li>Mix letters and numbers.</li><li>Include non-alphanumeric characters.</li><li>Pick a password you can remember.</li></ul><p>The following are recommendations for password cracker software that you can use to determine the strength of a password.</p><ul><li>John The Ripper. A fast and flexible password cracking program. It allows the use of multiple word lists and is capable of brute-force password cracking. It is available online at <a href="http://www.commoncriteriaportal.org/products/?expand#ALL" target="_blank" rel="noreferrer">http://www.openwall.com/john/</a>.</li><li>Crack. Perhaps the most well-known password cracking software, Crack is also very fast, though not as easy to use as John The Ripper. It can be found online at <a href="http://www.commoncriteriaportal.org/products/?expand#ALL" target="_blank" rel="noreferrer">http://www.crypticide.com/alecm/security/crack/c50-faq.html</a>.</li></ul><p>The security of the entire system depends on the strength of the root password. This password should be at least 12 characters long and include a mix of capitalized letters, lowercase letters, special characters, and numbers. It should not be based on any dictionary word.</p><p>Password expiration parameters should be configured. The following commands must be run as <code>root</code> or using <code>sudo</code>.</p><p>Ensure the following line exists within the file <code>/etc/libuser.conf</code> under the <code>[import]</code> section.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>login_defs = /etc/login.defs</span></span></code></pre></div><p>Ensure no lines in the <code>[userdefaults]</code> section begin with the following text, as these words override settings from <code>/etc/login.defs</code>:</p><ul><li><code>LU_SHADOWMAX</code></li><li><code>LU_SHADOWMIN</code></li><li><code>LU_SHADOWWARNING</code></li></ul><p>Ensure the following command produces no output. Any accounts listed by running this command should be locked.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>grep &quot;^+:&quot; /etc/passwd /etc/shadow /etc/group</span></span></code></pre></div><p>Note: We strongly recommend that customers change their passwords after initial setup.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>cd /etc</span></span>
<span class="line"><span>chown root:root passwd shadow group gshadow</span></span>
<span class="line"><span>chmod 644 passwd group</span></span>
<span class="line"><span>chmod 400 shadow gshadow</span></span></code></pre></div><p>Find all the files that are world-writable and that do not have their sticky bits set.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>find / -xdev -type d \\( -perm -0002 -a ! -perm -1000 \\) -print</span></span></code></pre></div><p>Set the sticky bit (<code># chmod +t {dir}</code>) for all the directories that result from running the previous command.</p><p>Find all the files that are world-writable and fix each file listed.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>find / -xdev -type f -perm -0002 -print</span></span></code></pre></div><p>Set the right permissions (<code># chmod o-w {file}</code>) for all the files generated by running the aforementioned command.</p><p>Find all the files that do not belong to a valid user or group and either assign an owner or remove the file, as appropriate.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>find / -xdev \\( -nouser -o -nogroup \\) -print</span></span></code></pre></div><p>Find all the directories that are world-writable and ensure they are owned by either root or a system account (assuming only system accounts have a User ID lower than 500). If the command generates any output, verify the assignment is correct or reassign it to root.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>find / -xdev -type d -perm -0002 -uid +500 -print</span></span></code></pre></div><p>Authentication settings such as password quality, password expiration policy, password reuse, password retry attempts, and more can be configured using the Pluggable Authentication Modules (PAM) framework. PAM looks in the directory <code>/etc/pam.d</code> for application-specific configuration information. Running <code>authconfig</code> or <code>system-config-authentication</code> will re-write the PAM configuration files, destroying any manually made changes and replacing them with system defaults.</p><p>The default <code>pam_cracklib</code> PAM module provides strength checking for passwords. To configure <code>pam_cracklib</code> to require at least one uppercase character, lowercase character, digit, and special character, as recommended by the U.S. Department of Defense guidelines, edit the file <code>/etc/pam.d/system-auth</code> to include the following parameters in the line corresponding to password requisite <code>pam_cracklib.so try_first_pass</code>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>retry=3:</span></span>
<span class="line"><span>dcredit=-1. Require at least one digit</span></span>
<span class="line"><span>ucredit=-1. Require at least one upper case character</span></span>
<span class="line"><span>ocredit=-1. Require at least one special character</span></span>
<span class="line"><span>lcredit=-1. Require at least one lower case character</span></span>
<span class="line"><span>minlen-14. Require a minimum password length of 14.</span></span></code></pre></div><p>For example:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>password required pam_cracklib.so try_first_pass retry=3\\minlen=14 dcredit=-1 ucredit=-1 ocredit=-1 lcredit=-1</span></span></code></pre></div><p>These parameters can be set to reflect your security policy requirements. Note that the password restrictions are not applicable to the root password.</p><p>The <code>pam_tally2</code> PAM module provides the capability to lock out user accounts after a specified number of failed login attempts. To enforce password lockout, edit the file <code>/etc/pam.d/system-auth</code> to include the following lines:</p><ul><li><p>The first of the auth lines should include:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>auth required pam_tally2.so deny=5 onerr=fail unlock_time=900</span></span></code></pre></div></li><li><p>The first of the account lines should include:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>account required pam_tally2.so</span></span></code></pre></div></li></ul><p>Here, the deny parameter is set to limit the number of retries to 5 and the <code>unlock_time</code> has been set to 900 seconds to keep the account locked for 900 seconds before it is unlocked. These parameters may be configured appropriately to reflect your security policy requirements. A locked account can be manually unlocked using the <code>pam_tally2</code> utility:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>/sbin/pam_tally2 --user {username} --reset</span></span></code></pre></div><p>You can use PAM to limit the reuse of recent passwords. The remember option for the <code>pam_unix</code> module can be set to remember the recent passwords and prevent their reuse. To accomplish this, edit the appropriate line in <code>/etc/pam.d/system-auth</code> to include the remember option.</p><p>For example:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>password sufficient pam_unix.so [ … existing_options …] </span></span>
<span class="line"><span>remember=5</span></span></code></pre></div><p>You can set the number of previous passwords to remember to appropriately reflect your security policy requirements.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>cd /etc</span></span>
<span class="line"><span>chown root:root passwd shadow group gshadow</span></span>
<span class="line"><span>chmod 644 passwd group</span></span>
<span class="line"><span>chmod 400 shadow gshadow</span></span></code></pre></div><p><strong>Parent topic:</strong> <a href="./intro.html">WarehousePG Best Practices</a></p>`,46)]))}const g=s(i,[["render",o]]);export{u as __pageData,g as default};
