import{_ as a,c as t,o as r,ag as o}from"./chunks/framework.Ds6Eueu6.js";const u=JSON.parse('{"title":"Accessing External Data with Foreign Tables","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/admin_guide/external/foreign.md","filePath":"docs/7x/admin_guide/external/foreign.md"}'),s={name:"docs/7x/admin_guide/external/foreign.md"};function i(n,e,d,c,h,p){return r(),t("div",null,e[0]||(e[0]=[o('<h1 id="accessing-external-data-with-foreign-tables" tabindex="-1">Accessing External Data with Foreign Tables <a class="header-anchor" href="#accessing-external-data-with-foreign-tables" aria-label="Permalink to &quot;Accessing External Data with Foreign Tables&quot;">​</a></h1><hr><p>WarehousePG implements portions of the SQL/MED specification, allowing you to access data that resides outside of WarehousePG using regular SQL queries. Such data is referred to as <em>foreign</em> or external data.</p><p>You can access foreign data with help from a <em>foreign-data wrapper</em>. A foreign-data wrapper is a library that communicates with a remote data source. This library hides the source-specific connection and data access details.</p><p>The WarehousePG distribution includes the <a href="./../../ref_guide/modules/greenplum_fdw.html">greenplum_fdw</a> and <a href="./../../ref_guide/modules/postgres_fdw.html">postgres_fdw</a> foreign data wrappers.</p><p>If none of the existing PostgreSQL or WarehousePG foreign-data wrappers suit your needs, you can write your own as described in <a href="./devel-fdw.html">Writing a Foreign Data Wrapper</a>.</p><p>To access foreign data, you create a <em>foreign server</em> object, which defines how to connect to a particular remote data source according to the set of options used by its supporting foreign-data wrapper. Then you create one or more <em>foreign tables</em>, which define the structure of the remote data. A foreign table can be used in queries just like a normal table, but a foreign table has no storage in the WarehousePG server. Whenever a foreign table is accessed, WarehousePG asks the foreign-data wrapper to fetch data from, or update data in (if supported by the wrapper), the remote source.</p><p>Accessing remote data may require authenticating to the remote data source. This information can be provided by a <em>user mapping</em>, which can provide additional data such as a user name and password based on the current WarehousePG role.</p><p>For additional information, refer to the <a href="./../../ref_guide/sql_commands/CREATE_FOREIGN_DATA_WRAPPER.html">CREATE FOREIGN DATA WRAPPER</a>, <a href="./../../ref_guide/sql_commands/CREATE_SERVER.html">CREATE SERVER</a>, <a href="./../../ref_guide/sql_commands/CREATE_USER_MAPPING.html">CREATE USER MAPPING</a>, and <a href="./../../ref_guide/sql_commands/CREATE_FOREIGN_TABLE.html">CREATE FOREIGN TABLE</a> SQL reference pages.</p><h2 id="using-foreign-data-wrappers-with-warehousepg" tabindex="-1"><a id="greenplum"></a>Using Foreign-Data Wrappers with WarehousePG <a class="header-anchor" href="#using-foreign-data-wrappers-with-warehousepg" aria-label="Permalink to &quot;&lt;a id=&quot;greenplum&quot;&gt;&lt;/a&gt;Using Foreign-Data Wrappers with WarehousePG&quot;">​</a></h2><p>Most PostgreSQL foreign-data wrappers should work with WarehousePG. However, PostgreSQL foreign-data wrappers connect only through the WarehousePG coordinator by default and do not access the WarehousePG segment instances directly.</p><p>WarehousePG adds an <code>mpp_execute</code> option to FDW-related SQL commands. If the foreign-data wrapper supports it, you can specify <code>mpp_execute &#39;&lt;value&gt;&#39;</code> in the <code>OPTIONS</code> clause when you create the FDW, server, or foreign table to identify the WarehousePG host from which the foreign-data wrapper reads or writes data. Valid <code>&lt;value&gt;</code>s are:</p><ul><li><code>coordinator</code> (the default) - Read or write data from the coordinator host.</li><li><code>any</code> - Read data from either the coordinator host or any one segment, depending on which path costs less.</li><li><code>all segments</code> - Read or write data from all segments. If a foreign-data wrapper supports this value, for correct results it should have a policy that matches segments to data.</li></ul><p>(A PostgreSQL foreign-data wrapper may work with the various <code>mpp_execute</code> option settings, but the results are not guaranteed to be correct. For example, a segment may not be able to connect to the foriegn server, or segments may receive overlapping results resulting in duplicate rows.)</p><p><strong>Parent topic:</strong> <a href="./../external/working-with-file-based-ext-tables.html">Working with External Data</a></p>',15)]))}const g=a(s,[["render",i]]);export{u as __pageData,g as default};
