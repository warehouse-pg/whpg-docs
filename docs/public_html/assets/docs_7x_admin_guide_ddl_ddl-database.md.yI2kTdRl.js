import{_ as e,c as t,o as s,ag as o}from"./chunks/framework.Ds6Eueu6.js";const b=JSON.parse('{"title":"Creating and Managing Databases","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/admin_guide/ddl/ddl-database.md","filePath":"docs/7x/admin_guide/ddl/ddl-database.md"}'),n={name:"docs/7x/admin_guide/ddl/ddl-database.md"};function d(i,a,r,l,c,p){return s(),t("div",null,a[0]||(a[0]=[o(`<h1 id="creating-and-managing-databases" tabindex="-1">Creating and Managing Databases <a class="header-anchor" href="#creating-and-managing-databases" aria-label="Permalink to &quot;Creating and Managing Databases&quot;">​</a></h1><hr><p>A WarehousePG cluster is a single instance of WarehousePG. There can be several separate WarehousePG clusters installed, but usually just one is selected by environment variable settings. See your WarehousePG administrator for details.</p><p>There can be multiple databases in a WarehousePG cluster. This is different from some database management systems (such as Oracle) where the database instance <em>is</em> the database. Although you can create many databases in a WarehousePG cluster, client programs can connect to and access only one database at a time — you cannot cross-query between databases.</p><p><strong>Parent topic:</strong> <a href="./../ddl/ddl.html">DDL: Defining Database Objects</a></p><h2 id="about-template-and-default-databases" tabindex="-1"><a id="topic3"></a>About Template and Default Databases <a class="header-anchor" href="#about-template-and-default-databases" aria-label="Permalink to &quot;&lt;a id=&quot;topic3&quot;&gt;&lt;/a&gt;About Template and Default Databases&quot;">​</a></h2><p>WarehousePG provides some template databases and a default database, <em>template1</em>, <em>template0</em>, and <em>postgres</em>.</p><p>By default, each new database you create is based on a <em>template</em> database. WarehousePG uses <em>template1</em> to create databases unless you specify another template. Creating objects in <em>template1</em> is not recommended. The objects will be in every database you create using the default template database.</p><p>WarehousePG uses another database template, <em>template0</em>, internally. Do not drop or modify <em>template0</em>. You can use <em>template0</em> to create a completely clean database containing only the standard objects predefined by WarehousePG at initialization.</p><p>You can use the <em>postgres</em> database to connect to WarehousePG for the first time. WarehousePG uses <em>postgres</em> as the default database for administrative connections. For example, <em>postgres</em> is used by startup processes, the Global Deadlock Detector process, and the FTS (Fault Tolerance Server) process for catalog access.</p><h2 id="creating-a-database" tabindex="-1"><a id="topic4"></a>Creating a Database <a class="header-anchor" href="#creating-a-database" aria-label="Permalink to &quot;&lt;a id=&quot;topic4&quot;&gt;&lt;/a&gt;Creating a Database&quot;">​</a></h2><p>The <code>CREATE DATABASE</code> command creates a new database. For example:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>=&gt; CREATE DATABASE &lt;new_dbname&gt;;</span></span></code></pre></div><p>To create a database, you must have privileges to create a database or be a WarehousePG superuser. If you do not have the correct privileges, you cannot create a database. Contact your WarehousePG administrator to either give you the necessary privilege or to create a database for you.</p><p>You can also use the client program <code>createdb</code> to create a database. For example, running the following command in a command line terminal connects to WarehousePG using the provided host name and port and creates a database named <em>mydatabase</em>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ createdb -h coordinator_host -p 5432 mydatabase</span></span></code></pre></div><p>The host name and port must match the host name and port of the installed WarehousePG cluster.</p><p>Some objects, such as roles, are shared by all the databases in a WarehousePG cluster. Other objects, such as tables that you create, are known only in the database in which you create them.</p><blockquote><p><strong>Caution</strong> The <code>CREATE DATABASE</code> command is not transactional.</p></blockquote><h3 id="cloning-a-database" tabindex="-1"><a id="topic5"></a>Cloning a Database <a class="header-anchor" href="#cloning-a-database" aria-label="Permalink to &quot;&lt;a id=&quot;topic5&quot;&gt;&lt;/a&gt;Cloning a Database&quot;">​</a></h3><p>By default, a new database is created by cloning the standard system database template, <em>template1</em>. Any database can be used as a template when creating a new database, thereby providing the capability to &#39;clone&#39; or copy an existing database and all objects and data within that database. For example:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>=&gt; CREATE DATABASE &lt;new_dbname&gt; TEMPLATE &lt;old_dbname&gt;;</span></span></code></pre></div><h3 id="creating-a-database-with-a-different-owner" tabindex="-1"><a id="topic6"></a>Creating a Database with a Different Owner <a class="header-anchor" href="#creating-a-database-with-a-different-owner" aria-label="Permalink to &quot;&lt;a id=&quot;topic6&quot;&gt;&lt;/a&gt;Creating a Database with a Different Owner&quot;">​</a></h3><p>Another database owner can be assigned when a database is created:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>=&gt; CREATE DATABASE &lt;new_dbname&gt; WITH &lt;owner=new_user&gt;;</span></span></code></pre></div><h2 id="viewing-the-list-of-databases" tabindex="-1"><a id="topic7"></a>Viewing the List of Databases <a class="header-anchor" href="#viewing-the-list-of-databases" aria-label="Permalink to &quot;&lt;a id=&quot;topic7&quot;&gt;&lt;/a&gt;Viewing the List of Databases&quot;">​</a></h2><p>If you are working in the <code>psql</code> client program, you can use the <code>\\l</code> meta-command to show the list of databases and templates in your WarehousePG cluster. If using another client program and you are a superuser, you can query the list of databases from the <code>pg_database</code> system catalog table. For example:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>=&gt; SELECT datname from pg_database;</span></span></code></pre></div><h2 id="altering-a-database" tabindex="-1"><a id="topic8"></a>Altering a Database <a class="header-anchor" href="#altering-a-database" aria-label="Permalink to &quot;&lt;a id=&quot;topic8&quot;&gt;&lt;/a&gt;Altering a Database&quot;">​</a></h2><p>The ALTER DATABASE command changes database attributes such as owner, name, or default configuration attributes. For example, the following command alters a database by setting its default schema search path (the <code>search_path</code> configuration parameter):</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>=&gt; ALTER DATABASE mydatabase SET search_path TO myschema, public, pg_catalog;</span></span></code></pre></div><p>To alter a database, you must be the owner of the database or a superuser.</p><h2 id="dropping-a-database" tabindex="-1"><a id="topic9"></a>Dropping a Database <a class="header-anchor" href="#dropping-a-database" aria-label="Permalink to &quot;&lt;a id=&quot;topic9&quot;&gt;&lt;/a&gt;Dropping a Database&quot;">​</a></h2><p>The <code>DROP DATABASE</code> command drops (or deletes) a database. It removes the system catalog entries for the database and deletes the database directory on disk that contains the data. You must be the database owner or a superuser to drop a database, and you cannot drop a database while you or anyone else is connected to it. Connect to <code>postgres</code> (or another database) before dropping a database. For example:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>=&gt; \\c postgres</span></span>
<span class="line"><span>=&gt; DROP DATABASE mydatabase;</span></span></code></pre></div><p>You can also use the client program <code>dropdb</code> to drop a database. For example, the following command connects to WarehousePG using the provided host name and port and drops the database <em>mydatabase</em>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ dropdb -h coordinator_host -p 5432 mydatabase</span></span></code></pre></div><blockquote><p><strong>Caution</strong> Dropping a database cannot be undone.</p></blockquote><p>The <code>DROP DATABASE</code> command is not transactional.</p>`,39)]))}const u=e(n,[["render",d]]);export{b as __pageData,u as default};
