import{_ as t,c as a,o as n,ag as s}from"./chunks/framework.Ds6Eueu6.js";const u=JSON.parse('{"title":"CREATE TEXT SEARCH PARSER","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/ref_guide/sql_commands/CREATE_TEXT_SEARCH_PARSER.md","filePath":"docs/7x/ref_guide/sql_commands/CREATE_TEXT_SEARCH_PARSER.md"}'),i={name:"docs/7x/ref_guide/sql_commands/CREATE_TEXT_SEARCH_PARSER.md"};function o(r,e,c,p,l,h){return n(),a("div",null,e[0]||(e[0]=[s(`<h1 id="create-text-search-parser" tabindex="-1">CREATE TEXT SEARCH PARSER <a class="header-anchor" href="#create-text-search-parser" aria-label="Permalink to &quot;CREATE TEXT SEARCH PARSER&quot;">​</a></h1><h2 id="description" tabindex="-1"><a id="Description"></a>Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;&lt;a id=&quot;Description&quot;&gt;&lt;/a&gt;Description&quot;">​</a></h2><p>Defines a new text search parser.</p><h2 id="synopsis" tabindex="-1"><a id="Synopsis"></a>Synopsis <a class="header-anchor" href="#synopsis" aria-label="Permalink to &quot;&lt;a id=&quot;Synopsis&quot;&gt;&lt;/a&gt;Synopsis&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE TEXT SEARCH PARSER &lt;name&gt; (</span></span>
<span class="line"><span>    START = &lt;start_function&gt; ,</span></span>
<span class="line"><span>    GETTOKEN = &lt;gettoken_function&gt; ,</span></span>
<span class="line"><span>    END = &lt;end_function&gt; ,</span></span>
<span class="line"><span>    LEXTYPES = &lt;lextypes_function&gt;</span></span>
<span class="line"><span>    [, HEADLINE = &lt;headline_function&gt; ]</span></span>
<span class="line"><span>)</span></span></code></pre></div><h2 id="description-1" tabindex="-1"><a id="section3"></a>Description <a class="header-anchor" href="#description-1" aria-label="Permalink to &quot;&lt;a id=&quot;section3&quot;&gt;&lt;/a&gt;Description&quot;">​</a></h2><p><code>CREATE TEXT SEARCH PARSER</code> creates a new text search parser. A text search parser defines a method for splitting a text string into tokens and assigning types (categories) to the tokens. A parser is not particularly useful by itself, but must be bound into a text search configuration along with some text search dictionaries to be used for searching.</p><p>If a schema name is given then the text search parser is created in the specified schema. Otherwise it is created in the current schema.</p><p>You must be a superuser to use <code>CREATE TEXT SEARCH PARSER</code>. (This restriction is made because an erroneous text search parser definition could confuse or even crash the server.)</p><p>Refer to <a href="./../../admin_guide/textsearch/full-text-search.html#full-text-search">Using Full Text Search</a> for further information.</p><h2 id="parameters" tabindex="-1"><a id="section4"></a>Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;&lt;a id=&quot;section4&quot;&gt;&lt;/a&gt;Parameters&quot;">​</a></h2><p>name : The name of the text search parser to be created. The name can be schema-qualified.</p><p>start_function : The name of the start function for the parser.</p><p>gettoken_function : The name of the get-next-token function for the parser.</p><p>end_function : The name of the end function for the parser.</p><p>lextypes_function : The name of the lextypes function for the parser (a function that returns information about the set of token types it produces).</p><p>headline_function : The name of the headline function for the parser (a function that summarizes a set of tokens).</p><p>The function names can be schema-qualified if necessary. Argument types are not given, since the argument list for each type of function is predetermined. All except the headline function are required.</p><p>The arguments can appear in any order, not only the one shown above.</p><h2 id="compatibility" tabindex="-1"><a id="section7"></a>Compatibility <a class="header-anchor" href="#compatibility" aria-label="Permalink to &quot;&lt;a id=&quot;section7&quot;&gt;&lt;/a&gt;Compatibility&quot;">​</a></h2><p>There is no <code>CREATE TEXT SEARCH PARSER</code> statement in the SQL standard.</p><h2 id="see-also" tabindex="-1"><a id="section8"></a>See Also <a class="header-anchor" href="#see-also" aria-label="Permalink to &quot;&lt;a id=&quot;section8&quot;&gt;&lt;/a&gt;See Also&quot;">​</a></h2><p><a href="./ALTER_TEXT_SEARCH_PARSER.html">ALTER TEXT SEARCH PARSER</a>, <a href="./DROP_TEXT_SEARCH_PARSER.html">DROP TEXT SEARCH PARSER</a></p><p><strong>Parent topic:</strong> <a href="./../sql_commands/sql_ref.html">SQL Commands</a></p>`,24)]))}const f=t(i,[["render",o]]);export{u as __pageData,f as default};
