import{_ as i,c as a,o as r,ag as s}from"./chunks/framework.Ds6Eueu6.js";const g=JSON.parse('{"title":"Managing Spill Files Generated by Queries","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/admin_guide/query/topics/spill-files.md","filePath":"docs/7x/admin_guide/query/topics/spill-files.md"}'),t={name:"docs/7x/admin_guide/query/topics/spill-files.md"};function o(n,e,l,u,m,c){return r(),a("div",null,e[0]||(e[0]=[s('<h1 id="managing-spill-files-generated-by-queries" tabindex="-1">Managing Spill Files Generated by Queries <a class="header-anchor" href="#managing-spill-files-generated-by-queries" aria-label="Permalink to &quot;Managing Spill Files Generated by Queries&quot;">â€‹</a></h1><hr><p>WarehousePG creates spill files, also known as workfiles, on disk if it does not have sufficient memory to run an SQL query in memory.</p><p>The maximum number of spill files for a given query is governed by the <a href="./../../../ref_guide/config_params/guc-list.html">gp_workfile_limit_files_per_query</a> server configuration parameter setting. The default value of 100,000 spill files is sufficient for the majority of queries.</p><p>If a query creates more than the configured number of spill files, WarehousePG returns this error:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ERROR: number of workfiles per query limit exceeded</span></span></code></pre></div><p>WarehousePG may generate a large number of spill files when:</p><ul><li>Data skew is present in the queried data. To check for data skew, see <a href="./../../managing/monitor.html">Checking for Data Distribution Skew</a>.</li><li>The amount of memory allocated for the query is too low. You control the maximum amount of memory that can be used by a query with the WarehousePG server configuration parameters <a href="./../../../ref_guide/config_params/guc-list.html">max_statement_mem</a> and <a href="./../../../ref_guide/config_params/guc-list.html">statement_mem</a>, or through resource group or resource queue configuration.</li></ul><p>You might be able to run the query successfully by changing the query, changing the data distribution, or changing the system memory configuration. The <code>gp_toolkit</code> <em>gp_workfile_*</em> views display spill file usage information. You can use this information to troubleshoot and tune queries. The <em>gp_workfile_*</em> views are described in <a href="./../../../ref_guide/gp_toolkit.html">Checking Query Disk Spill Space Usage</a>.</p><p>Additional documentation resources:</p><ul><li><a href="./../../../ref_guide/config_params/guc_category-list.html">Memory Consumption Parameters</a> identifies the memory-related spill file server configuration parameters.</li><li><a href="./../../workload_mgmt_resgroups.html">Using Resource Groups</a> describes memory and spill considerations when resource group-based resource management is active.</li><li><a href="./../../workload_mgmt.html">Using Resource Queues</a> describes memory and spill considerations when resource queue-based resource management is active.</li></ul><p><strong>Parent topic:</strong> <a href="./../../query/topics/query.html">SQL: Querying Data</a></p>',12)]))}const d=i(t,[["render",o]]);export{g as __pageData,d as default};
