import{_ as o,c as e,o as s,ag as n}from"./chunks/framework.Ds6Eueu6.js";const T=JSON.parse('{"title":"Example Custom Data Access Protocol","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/admin_guide/load/topics/g-example-custom-data-access-protocol.md","filePath":"docs/7x/admin_guide/load/topics/g-example-custom-data-access-protocol.md"}'),t={name:"docs/7x/admin_guide/load/topics/g-example-custom-data-access-protocol.md"};function c(p,a,l,i,r,d){return s(),e("div",null,a[0]||(a[0]=[n(`<h1 id="example-custom-data-access-protocol" tabindex="-1">Example Custom Data Access Protocol <a class="header-anchor" href="#example-custom-data-access-protocol" aria-label="Permalink to &quot;Example Custom Data Access Protocol&quot;">​</a></h1><hr><p>The following is the API for the WarehousePG custom data access protocol. The example protocol implementation <a href="./g-gpextprotocalc.html">gpextprotocal.c</a> is written in C and shows how the API can be used. For information about accessing a custom data access protocol, see <a href="./g-using-a-custom-protocol.html">Using a Custom Protocol</a>.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>/* ---- Read/Write function API ------*/</span></span>
<span class="line"><span>CALLED_AS_EXTPROTOCOL(fcinfo)</span></span>
<span class="line"><span>EXTPROTOCOL_GET_URL(fcinfo)(fcinfo) </span></span>
<span class="line"><span>EXTPROTOCOL_GET_DATABUF(fcinfo) </span></span>
<span class="line"><span>EXTPROTOCOL_GET_DATALEN(fcinfo) </span></span>
<span class="line"><span>EXTPROTOCOL_GET_SCANQUALS(fcinfo) </span></span>
<span class="line"><span>EXTPROTOCOL_GET_USER_CTX(fcinfo) </span></span>
<span class="line"><span>EXTPROTOCOL_IS_LAST_CALL(fcinfo) </span></span>
<span class="line"><span>EXTPROTOCOL_SET_LAST_CALL(fcinfo) </span></span>
<span class="line"><span>EXTPROTOCOL_SET_USER_CTX(fcinfo, p)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>/* ------ Validator function API ------*/</span></span>
<span class="line"><span>CALLED_AS_EXTPROTOCOL_VALIDATOR(fcinfo)</span></span>
<span class="line"><span>EXTPROTOCOL_VALIDATOR_GET_URL_LIST(fcinfo) </span></span>
<span class="line"><span>EXTPROTOCOL_VALIDATOR_GET_NUM_URLS(fcinfo) </span></span>
<span class="line"><span>EXTPROTOCOL_VALIDATOR_GET_NTH_URL(fcinfo, n) </span></span>
<span class="line"><span>EXTPROTOCOL_VALIDATOR_GET_DIRECTION(fcinfo)</span></span></code></pre></div><h2 id="notes" tabindex="-1"><a id="notes1"></a>Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;&lt;a id=&quot;notes1&quot;&gt;&lt;/a&gt;Notes&quot;">​</a></h2><p>The protocol corresponds to the example described in <a href="./g-using-a-custom-protocol.html">Using a Custom Protocol</a>. The source code file name and shared object are <code>gpextprotocol.c</code> and <code>gpextprotocol.so</code>.</p><p>The protocol has the following properties:</p><ul><li><p>The name defined for the protocol is <code>myprot</code>.</p></li><li><p>The protocol has the following simple form: the protocol name and a path, separated by <code>://</code>.</p><p><code>myprot://</code> <code>path</code></p></li><li><p>Three functions are implemented:</p><ul><li><code>myprot_import()</code> a read function</li><li><code>myprot_export()</code> a write function</li><li><code>myprot_validate_urls()</code> a validation function These functions are referenced in the <code>CREATE PROTOCOL</code> statement when the protocol is created and declared in the database.</li></ul></li></ul><p>The example implementation <a href="./g-gpextprotocalc.html">gpextprotocal.c</a> uses <code>fopen()</code> and <code>fread()</code> to simulate a simple protocol that reads local files. In practice, however, the protocol would implement functionality such as a remote connection to some process over the network.</p><ul><li><strong><a href="./../../load/topics/g-installing-the-external-table-protocol.html">Installing the External Table Protocol</a></strong></li></ul><p><strong>Parent topic:</strong> <a href="./../../load/topics/g-loading-and-unloading-data.html">Loading and Unloading Data</a></p>`,11)]))}const h=o(t,[["render",c]]);export{T as __pageData,h as default};
