import{_ as o,c as n,o as i,ag as t,j as e,a as s}from"./chunks/framework.Ds6Eueu6.js";const b=JSON.parse('{"title":"Geospatial Analytics","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/analytics/postGIS.md","filePath":"docs/7x/analytics/postGIS.md"}'),p={name:"docs/7x/analytics/postGIS.md"};function r(l,a,d,c,h,u){return i(),n("div",null,a[0]||(a[0]=[t('<h1 id="geospatial-analytics" tabindex="-1">Geospatial Analytics <a class="header-anchor" href="#geospatial-analytics" aria-label="Permalink to &quot;Geospatial Analytics&quot;">​</a></h1><hr><p>PostGIS is a spatial database extension for PostgreSQL that allows you to store GIS (Geographic Information Systems) objects in the database. The WarehousePG PostGIS extension supports some PostGIS optional extensions such as GiST-based R-Tree spatial indexes, and functions for analysis and processing of GIS objects. It also includes support for the PostGIS <code>raster</code> data type. With the PostGIS Raster objects, the PostGIS <code>geometry</code> data type offers a single set of overlay SQL functions (such as <code>ST_Intersects</code>) operating seamlessly on vector and raster geospatial data. PostGIS Raster uses the GDAL (Geospatial Data Abstraction Library) translator library for raster geospatial data formats that presents a <a href="https://gdal.org/user/raster_data_model.html" target="_blank" rel="noreferrer">single raster abstract data model</a> to a calling application.</p><p>For information about WarehousePG PostGIS extension support, see <a href="#postgis_support">PostGIS Extension Support and Limitations</a>.</p><p>For information about PostGIS, see <a href="https://postgis.net/" target="_blank" rel="noreferrer">https://postgis.net/</a></p><p>For information about GDAL, see <a href="https://gdal.org/" target="_blank" rel="noreferrer">https://gdal.org/</a>.</p><h2 id="warehousepg-postgis-extension" tabindex="-1"><a id="topic3"></a>WarehousePG PostGIS Extension <a class="header-anchor" href="#warehousepg-postgis-extension" aria-label="Permalink to &quot;&lt;a id=&quot;topic3&quot;&gt;&lt;/a&gt;WarehousePG PostGIS Extension&quot;">​</a></h2><p>The WarehousePG PostGIS extension package is available for download.After you download the package, you can follow the instructions in <a href="./../install_guide/verify_sw.html">Verifying the WarehousePG Software Download</a> to verify the integrity of the download.</p><p>WarehousePG supports the PostGIS extension with these component versions:</p><ul><li>PostGIS 3.3.2</li><li>Proj 8.2.1</li><li>Geos 3.10.2</li><li>GDAL 3.6.3</li><li>Json 0.12</li><li>Expat 2.5.0</li></ul><p>For information about the supported WarehousePG extension packages and software versions, see <a href="./../install_guide/platform-requirements.html#topic_eyc_l2h_zz">Extensions</a>.</p><p>There are significant changes in PostGIS 3.3.2 compared with earlier versions. For a list of new and enhanced functions in PostGIS 3.3, see the PostGIS documentation <a href="https://postgis.net/docs/manual-3.3/PostGIS_Special_Functions_Index.html#NewFunctions_3_3" target="_blank" rel="noreferrer">PostGIS Functions new or enhanced in 3.3</a> and <a href="https://postgis.net/docs/manual-3.3/release_notes.html#idm44622" target="_blank" rel="noreferrer">Release 3.3.2</a>.</p><p>This table lists the PostGIS extensions support by WarehousePG PostGIS.</p>',13),e("div",{class:"tablenoborder"},[e("table",{cellpadding:"4",cellspacing:"0",summary:"",id:"topic3__table_owt_4ml_xlb",class:"table",frame:"border",border:"1",rules:"all"},[e("caption",null,[e("span",{class:"tablecap"},[e("span",{class:"table--title-label"},"Table 1. "),s("WarehousePG PostGIS Extensions")])]),e("colgroup",null,[e("col",{style:{width:"32.786885245901644%"}}),e("col",{style:{width:"67.21311475409836%"}})]),e("thead",{class:"thead",style:{"text-align":"left"}},[e("tr",{class:"row"},[e("th",{class:"entry cellrowborder",style:{"vertical-align":"top"},id:"d47208e208"},"PostGIS Extension"),e("th",{class:"entry cellrowborder",style:{"vertical-align":"top"},id:"d47208e211"},"WarehousePG PostGIS Notes")])]),e("tbody",{class:"tbody"},[e("tr",{class:"row"},[e("td",{class:"entry cellrowborder",style:{"vertical-align":"top"},headers:"d47208e208 "},[e("code",{class:"ph codeph"},"postgis"),e("p",{dir:"ltr",class:"p"},"PostGIS and PostGIS Raster support")]),e("td",{class:"entry cellrowborder",style:{"vertical-align":"top"},headers:"d47208e211 "},[s("Supported. Both PostGIS and PostGIS Raster are enabled when the WarehousePG "),e("code",{class:"ph codeph"},"postgis"),s(" extension is enabled.")])]),e("tr",{class:"row"},[e("td",{class:"entry cellrowborder",style:{"vertical-align":"top"},headers:"d47208e208 "},[e("code",{class:"ph codeph"},"postgis_tiger_geocoder"),e("p",{class:"p"},"The US TIGER geocoder")]),e("td",{class:"entry cellrowborder",style:{"vertical-align":"top"},headers:"d47208e211 "},[s("Supported. Installed with WarehousePG PostGIS. "),e("p",{class:"p"},[s("Requires the "),e("code",{class:"ph codeph"},"postgis"),s(" and "),e("code",{class:"ph codeph"},"fuzzystrmatch"),s(" extensions.")]),e("p",{class:"p"},"The US TIGER geocoder converts addresses (like a street address) to geographic coordinates.")])]),e("tr",{class:"row"},[e("td",{class:"entry cellrowborder",style:{"vertical-align":"top"},headers:"d47208e208 "},[e("code",{class:"ph codeph"},"address_standardizer"),e("p",{class:"p"},"Rule-based address standardizer")]),e("td",{class:"entry cellrowborder",style:{"vertical-align":"top"},headers:"d47208e211 "},[s("Supported. Installed but not enabled with WarehousePG PostGIS. "),e("p",{class:"p"},"Can be used with TIGER geocoder."),e("p",{class:"p"},[s("A single line address parser that takes an input address and normalizes it based on a set of rules stored in a table and helper "),e("code",{class:"ph codeph"},"lex"),s(" and "),e("code",{class:"ph codeph"},"gaz"),s(" tables.")])])]),e("tr",{class:"row"},[e("td",{class:"entry cellrowborder",style:{"vertical-align":"top"},headers:"d47208e208 "},[e("code",{class:"ph codeph"},"address_standardizer_data_us"),e("p",{class:"p"},"Sample rules tables for US address data")]),e("td",{class:"entry cellrowborder",style:{"vertical-align":"top"},headers:"d47208e211 "},[s("Supported. Installed but not enabled with WarehousePG PostGIS."),e("p",{class:"p"},"Can be used with the address standardizer."),e("p",{class:"p"},[s("The extension contains "),e("code",{class:"ph codeph"},"gaz"),s(", "),e("code",{class:"ph codeph"},"lex"),s(", and "),e("code",{class:"ph codeph"},"rules"),s(" tables for US address data. If you are using other types of tables, see "),e("a",{class:"xref",href:"#topic_wy2_rkb_3p"},"PostGIS Extension Limitations"),s(".")])])]),e("tr",{class:"row"},[e("td",{class:"entry cellrowborder",style:{"vertical-align":"top"},headers:"d47208e208 "},[e("code",{class:"ph codeph"},"fuzzystrmatch"),e("p",{class:"p"},"Fuzzy string matching")]),e("td",{class:"entry cellrowborder",style:{"vertical-align":"top"},headers:"d47208e211 "},[s("Supported. This extension is bundled but not enabled with WarehousePG Database."),e("p",{class:"p"},"Required for the PostGIS TIGER geocoder.")])])])])],-1),t(`<blockquote><p><strong>Note</strong> The PostGIS topology extension <code>postgis_topology</code> and the PostGIS 3D and geoprocessing extension <code>postgis_sfcgal</code> are not supported by WarehousePG PostGIS and are not included in the WarehousePG PostGIS extension package.</p></blockquote><p>For information about the PostGIS extensions, see the <a href="https://postgis.net/documentation/" target="_blank" rel="noreferrer">PostGIS documentation</a>.</p><p>For information about WarehousePG PostGIS feature support, see <a href="#postgis_support">PostGIS Extension Support and Limitations</a>.</p><h2 id="enabling-and-removing-postgis-support" tabindex="-1"><a id="topic_b2l_hzw_q1b"></a>Enabling and Removing PostGIS Support <a class="header-anchor" href="#enabling-and-removing-postgis-support" aria-label="Permalink to &quot;&lt;a id=&quot;topic_b2l_hzw_q1b&quot;&gt;&lt;/a&gt;Enabling and Removing PostGIS Support&quot;">​</a></h2><p>This section describes how to enable and remove PostGIS and the supported PostGIS extensions, and how to configure PostGIS Raster.</p><h3 id="enabling-postgis-support" tabindex="-1"><a id="topic_ln5_xcl_r1b"></a>Enabling PostGIS Support <a class="header-anchor" href="#enabling-postgis-support" aria-label="Permalink to &quot;&lt;a id=&quot;topic_ln5_xcl_r1b&quot;&gt;&lt;/a&gt;Enabling PostGIS Support&quot;">​</a></h3><p>To enable PostGIS support, install the WarehousePG PostGIS extension package into the WarehousePG cluster, and then use the <code>CREATE EXTENSION</code> command to enable PostGIS support for an individual database.</p><h4 id="installing-the-warehousepg-postgis-extension-package" tabindex="-1"><a id="section_dlv_xv1_rqb"></a>Installing the WarehousePG PostGIS Extension Package <a class="header-anchor" href="#installing-the-warehousepg-postgis-extension-package" aria-label="Permalink to &quot;&lt;a id=&quot;section_dlv_xv1_rqb&quot;&gt;&lt;/a&gt;Installing the WarehousePG PostGIS Extension Package&quot;">​</a></h4><p>Install WarehousePG PostGIS extension package with the <code>gppkg</code> utility. For example, this command installs the package for RHEL 7.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>gppkg install postgis-3.3.2+pivotal.1.build.1-gp7-rhel8-x86_64.gppkg</span></span></code></pre></div><p>After installing the package, source the <code>greenplum_path.sh</code> file and restart WarehousePG. This command restarts WarehousePG.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>gpstop -ra</span></span></code></pre></div><p>Installing the WarehousePG PostGIS extension package updates the WarehousePG cluster, including installing the supported PostGIS extensions to the system and updating <code>greenplum_path.sh</code> file with these lines for PostGIS Raster support.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>export GDAL_DATA=$GPHOME/share/gdal</span></span>
<span class="line"><span>export POSTGIS_ENABLE_OUTDB_RASTERS=0</span></span>
<span class="line"><span>export POSTGIS_GDAL_ENABLED_DRIVERS=DISABLE_ALL</span></span></code></pre></div><h4 id="using-the-create-extension-command" tabindex="-1"><a id="enable_postgis_cmd"></a>Using the CREATE EXTENSION Command <a class="header-anchor" href="#using-the-create-extension-command" aria-label="Permalink to &quot;&lt;a id=&quot;enable_postgis_cmd&quot;&gt;&lt;/a&gt;Using the CREATE EXTENSION Command&quot;">​</a></h4><p>These steps enable the PostGIS extension and the extensions that are used with PostGIS.</p><ol><li><p>To enable PostGIS and PostGIS Raster in a database, run this command after logging into the database.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE EXTENSION postgis ;</span></span></code></pre></div><p>To enable PostGIS and PostGIS Raster in a specific schema, create the schema, set the <code>search_path</code> to the PostGIS schema, and then enable the <code>postgis</code> extension with the <code>WITH SCHEMA</code> clause.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SHOW search_path ; -- display the current search_path</span></span>
<span class="line"><span>CREATE SCHEMA &lt;schema_name&gt; ;</span></span>
<span class="line"><span>SET search_path TO &lt;schema_name&gt; ;</span></span>
<span class="line"><span>CREATE EXTENSION postgis WITH SCHEMA &lt;schema_name&gt; ;</span></span></code></pre></div><p>After enabling the extension, reset the <code>search_path</code> and include the PostGIS schema in the <code>search_path</code> if needed.</p></li><li><p>If needed, enable the PostGIS TIGER geocoder after enabling the <code>postgis</code> extension.</p><p>To enable the PostGIS TIGER geocoder, you must enable the <code>fuzzystrmatch</code> extension before enabling <code>postgis_tiger_geocoder</code>. These two commands enable the extensions.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE EXTENSION fuzzystrmatch ;</span></span>
<span class="line"><span>CREATE EXTENSION postgis_tiger_geocoder ;</span></span></code></pre></div></li><li><p>If needed, enable the rules-based address standardizer and add rules tables for the standardizer. These commands enable the extensions.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE EXTENSION address_standardizer ;</span></span>
<span class="line"><span>CREATE EXTENSION address_standardizer_data_us ;</span></span></code></pre></div></li></ol><h3 id="enabling-gdal-raster-drivers" tabindex="-1"><a id="topic_ydr_q5l_ybb"></a>Enabling GDAL Raster Drivers <a class="header-anchor" href="#enabling-gdal-raster-drivers" aria-label="Permalink to &quot;&lt;a id=&quot;topic_ydr_q5l_ybb&quot;&gt;&lt;/a&gt;Enabling GDAL Raster Drivers&quot;">​</a></h3><p>PostGIS uses GDAL raster drivers when processing raster data with commands such as <code>ST_AsJPEG()</code>. As the default, PostGIS deactivates all raster drivers. You enable raster drivers by setting the value of the <code>POSTGIS_GDAL_ENABLED_DRIVERS</code> environment variable in the <code>greenplum_path.sh</code> file on all WarehousePG hosts.</p><p>Alternatively, you can do it at the session level by setting <code>postgis.gdal_enabled_drivers</code>. For a WarehousePG session, this example <code>SET</code> command enables three GDAL raster drivers.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SET postgis.gdal_enabled_drivers TO &#39;GTiff PNG JPEG&#39;;</span></span></code></pre></div><p>This <code>SET</code> command sets the enabled drivers to the default for a session.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SET postgis.gdal_enabled_drivers = default;</span></span></code></pre></div><p>To see the list of supported GDAL raster drivers for a WarehousePG cluster, run the <code>raster2pgsql</code> utility with the <code>-G</code> option on the WarehousePG coordinator.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>raster2pgsql -G</span></span></code></pre></div><p>The command lists the driver long format name. The <em>GDAL Raster</em> table at <a href="https://gdal.org/drivers/raster/index.html" target="_blank" rel="noreferrer">https://gdal.org/drivers/raster/index.html</a> lists the long format names and the corresponding codes that you specify as the value of the environment variable. For example, the code for the long name Portable Network Graphics is <code>PNG</code>. This example <code>export</code> line enables four GDAL raster drivers.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>export POSTGIS_GDAL_ENABLED_DRIVERS=&quot;GTiff PNG JPEG GIF&quot;</span></span></code></pre></div><p>The <code>gpstop -r</code> command restarts the WarehousePG cluster to use the updated settings in the <code>greenplum_path.sh</code> file.</p><p>After you have updated the <code>greenplum_path.sh</code> file on all hosts, and have restarted the WarehousePG cluster, you can display the enabled raster drivers with the <code>ST_GDALDrivers()</code> function. This <code>SELECT</code> command lists the enabled raster drivers.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SELECT short_name, long_name FROM ST_GDALDrivers();</span></span></code></pre></div><h3 id="enabling-out-of-database-rasters" tabindex="-1"><a id="topic_fx2_fpx_llb"></a>Enabling Out-of-Database Rasters <a class="header-anchor" href="#enabling-out-of-database-rasters" aria-label="Permalink to &quot;&lt;a id=&quot;topic_fx2_fpx_llb&quot;&gt;&lt;/a&gt;Enabling Out-of-Database Rasters&quot;">​</a></h3><p>After installing PostGIS, the default setting <code>POSTGIS_ENABLE_OUTDB_RASTERS=0</code> in the <code>greenplum_path.sh</code> file deactivates support for out-of-database rasters. To enable this feature, you can set the value to true (a non-zero value) on all hosts and restart the WarehousePG cluster.</p><p>You can also activate or deactivate this feature for a WarehousePG session. For example, this <code>SET</code> command enables the feature for the current session.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SET postgis.enable_outdb_rasters = true;</span></span></code></pre></div><blockquote><p><strong>Note</strong> When the feature is enabled, the server configuration parameter <code>postgis.gdal_enabled_drivers</code> determines the accessible raster formats.</p></blockquote><h3 id="removing-postgis-support" tabindex="-1"><a id="topic_bgz_vcl_r1b"></a>Removing PostGIS Support <a class="header-anchor" href="#removing-postgis-support" aria-label="Permalink to &quot;&lt;a id=&quot;topic_bgz_vcl_r1b&quot;&gt;&lt;/a&gt;Removing PostGIS Support&quot;">​</a></h3><p>You use the <code>DROP EXTENSION</code> command to remove support for the PostGIS extension and the extensions that are used with PostGIS.</p><p>Removing PostGIS support from a database does not remove these PostGIS Raster environment variables from the <code>greenplum_path.sh</code> file: <code>GDAL_DATA</code>, <code>POSTGIS_ENABLE_OUTDB_RASTERS</code>, <code>POSTGIS_GDAL_ENABLED_DRIVERS</code>. The environment variables are removed when you uninstall the PostGIS extension package.</p><blockquote><p><strong>Caution</strong> Removing PostGIS support from a database drops PostGIS database objects from the database without warning. Users accessing PostGIS objects might interfere with the dropping of PostGIS objects. See <a href="#postgis_note">Notes</a>.</p></blockquote><h4 id="using-the-drop-extension-command" tabindex="-1"><a id="drop_postgis_cmd"></a>Using the DROP EXTENSION Command <a class="header-anchor" href="#using-the-drop-extension-command" aria-label="Permalink to &quot;&lt;a id=&quot;drop_postgis_cmd&quot;&gt;&lt;/a&gt;Using the DROP EXTENSION Command&quot;">​</a></h4><p>Depending on the extensions you enabled for PostGIS, drop support for the extensions in the database.</p><ol><li><p>If you enabled the address standardizer and sample rules tables, these commands drop support for those extensions from the current database.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>DROP EXTENSION IF EXISTS address_standardizer_data_us;</span></span>
<span class="line"><span>DROP EXTENSION IF EXISTS address_standardizer;</span></span></code></pre></div></li><li><p>If you enabled the TIGER geocoder and the <code>fuzzystrmatch</code> extension to use the TIGER geocoder, these commands drop support for those extensions.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>DROP EXTENSION IF EXISTS postgis_tiger_geocoder;</span></span>
<span class="line"><span>DROP EXTENSION IF EXISTS fuzzystrmatch;</span></span></code></pre></div></li><li><p>Drop support for PostGIS and PostGIS Raster. This command drops support for those extensions.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>DROP EXTENSION IF EXISTS postgis;</span></span></code></pre></div><p>If you enabled support for PostGIS and specified a specific schema with the <code>CREATE EXTENSION</code> command, you can update the <code>search_path</code> and drop the PostGIS schema if required.</p></li></ol><h4 id="uninstalling-the-warehousepg-postgis-extension-package" tabindex="-1"><a id="section_wvr_wv1_rqb"></a>Uninstalling the WarehousePG PostGIS Extension Package <a class="header-anchor" href="#uninstalling-the-warehousepg-postgis-extension-package" aria-label="Permalink to &quot;&lt;a id=&quot;section_wvr_wv1_rqb&quot;&gt;&lt;/a&gt;Uninstalling the WarehousePG PostGIS Extension Package&quot;">​</a></h4><p>After PostGIS support has been removed from all databases in the WarehousePG cluster, you can remove the PostGIS extension package. For example, this <code>gppkg</code> command removes the PostGIS extension package.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>gppkg remove postgis-3.3.2+pivotal.1</span></span></code></pre></div><p>After removing the package, ensure that these lines for PostGIS Raster support are removed from the <code>greenplum_path.sh</code> file.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>export GDAL_DATA=$GPHOME/share/gdal</span></span>
<span class="line"><span>export POSTGIS_ENABLE_OUTDB_RASTERS=0</span></span>
<span class="line"><span>export POSTGIS_GDAL_ENABLED_DRIVERS=DISABLE_ALL</span></span></code></pre></div><p>Source the <code>greenplum_path.sh</code> file and restart WarehousePG. This command restarts WarehousePG.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>gpstop -ra</span></span></code></pre></div><h4 id="notes" tabindex="-1"><a id="postgis_note"></a>Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;&lt;a id=&quot;postgis_note&quot;&gt;&lt;/a&gt;Notes&quot;">​</a></h4><p>Removing PostGIS support from a database drops PostGIS objects from the database. Dropping the PostGIS objects cascades to objects that reference the PostGIS objects. Before removing PostGIS support, ensure that no users are accessing the database. Users accessing PostGIS objects might interfere with dropping PostGIS objects.</p><p>For example, this <code>CREATE TABLE</code> command creates a table with column <code>b</code> that is defined with the PostGIS <code>geometry</code> data type.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE TABLE test(a int, b geometry) DISTRIBUTED RANDOMLY;</span></span></code></pre></div><p>This is the table definition in a database with PostGIS enabled.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>\\d test</span></span>
<span class="line"><span> Table &quot;public.test&quot;</span></span>
<span class="line"><span> Column |   Type   | Modifiers</span></span>
<span class="line"><span>--------+----------+-----------</span></span>
<span class="line"><span> a      | integer  |</span></span>
<span class="line"><span> b      | geometry |</span></span>
<span class="line"><span>Distributed randomly</span></span></code></pre></div><p>This is the table definition in a database after PostGIS support has been removed.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>\\d test</span></span>
<span class="line"><span>  Table &quot;public.test&quot;</span></span>
<span class="line"><span> Column |  Type   | Modifiers</span></span>
<span class="line"><span>--------+---------+-----------</span></span>
<span class="line"><span> a      | integer |</span></span>
<span class="line"><span>Distributed randomly</span></span></code></pre></div><h2 id="usage" tabindex="-1"><a id="topic7"></a>Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;&lt;a id=&quot;topic7&quot;&gt;&lt;/a&gt;Usage&quot;">​</a></h2><p>The following example SQL statements create non-OpenGIS tables and geometries.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE TABLE geom_test ( gid int4, geom geometry, </span></span>
<span class="line"><span>  name varchar(25) );</span></span>
<span class="line"><span></span></span>
<span class="line"><span>INSERT INTO geom_test ( gid, geom, name )</span></span>
<span class="line"><span>  VALUES ( 1, &#39;POLYGON((0 0 0,0 5 0,5 5 0,5 0 0,0 0 0))&#39;, &#39;3D Square&#39;);</span></span>
<span class="line"><span>INSERT INTO geom_test ( gid, geom, name ) </span></span>
<span class="line"><span>  VALUES ( 2, &#39;LINESTRING(1 1 1,5 5 5,7 7 5)&#39;, &#39;3D Line&#39; );</span></span>
<span class="line"><span>INSERT INTO geom_test ( gid, geom, name )</span></span>
<span class="line"><span>  VALUES ( 3, &#39;MULTIPOINT(3 4,8 9)&#39;, &#39;2D Aggregate Point&#39; );</span></span>
<span class="line"><span></span></span>
<span class="line"><span>SELECT * from geom_test WHERE geom &amp;&amp;</span></span>
<span class="line"><span>  Box3D(ST_GeomFromEWKT(&#39;LINESTRING(2 2 0, 3 3 0)&#39;));</span></span></code></pre></div><p>The following example SQL statements create a table and add a geometry column to the table with a SRID integer value that references an entry in the <code>SPATIAL_REF_SYS</code> table. The <code>INSERT</code> statements add two geopoints to the table.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE TABLE geotest (id INT4, name VARCHAR(32) );</span></span>
<span class="line"><span>SELECT AddGeometryColumn(&#39;geotest&#39;,&#39;geopoint&#39;, 4326,&#39;POINT&#39;,2);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>INSERT INTO geotest (id, name, geopoint)</span></span>
<span class="line"><span>  VALUES (1, &#39;Olympia&#39;, ST_GeometryFromText(&#39;POINT(-122.90 46.97)&#39;, 4326));</span></span>
<span class="line"><span>INSERT INTO geotest (id, name, geopoint)</span></span>
<span class="line"><span>  VALUES (2, &#39;Renton&#39;, ST_GeometryFromText(&#39;POINT(-122.22 47.50)&#39;, 4326));</span></span>
<span class="line"><span></span></span>
<span class="line"><span>SELECT name,ST_AsText(geopoint) FROM geotest;</span></span></code></pre></div><h3 id="spatial-indexes" tabindex="-1"><a id="topic8"></a>Spatial Indexes <a class="header-anchor" href="#spatial-indexes" aria-label="Permalink to &quot;&lt;a id=&quot;topic8&quot;&gt;&lt;/a&gt;Spatial Indexes&quot;">​</a></h3><p>PostgreSQL provides support for GiST spatial indexing. The GiST scheme offers indexing even on large objects. It uses a system of lossy indexing in which smaller objects act as proxies for larger ones in the index. In the PostGIS indexing system, all objects use their bounding boxes as proxies in the index.</p><h4 id="building-a-spatial-index" tabindex="-1"><a id="topic9"></a>Building a Spatial Index <a class="header-anchor" href="#building-a-spatial-index" aria-label="Permalink to &quot;&lt;a id=&quot;topic9&quot;&gt;&lt;/a&gt;Building a Spatial Index&quot;">​</a></h4><p>You can build a GiST index as follows:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE INDEX indexname</span></span>
<span class="line"><span>  ON tablename</span></span>
<span class="line"><span>  USING GIST ( geometryfield );</span></span></code></pre></div><h2 id="postgis-extension-support-and-limitations" tabindex="-1"><a id="postgis_support"></a>PostGIS Extension Support and Limitations <a class="header-anchor" href="#postgis-extension-support-and-limitations" aria-label="Permalink to &quot;&lt;a id=&quot;postgis_support&quot;&gt;&lt;/a&gt;PostGIS Extension Support and Limitations&quot;">​</a></h2><p>This section describes WarehousePG PostGIS extension feature support and limitations. In general, the WarehousePG PostGIS extension does not support the following features:</p><ul><li>The PostGIS topology extension <code>postgis_topology</code></li><li>The PostGIS 3D and geoprocessing extension <code>postgis_sfcgal</code></li><li>A small number of user defined functions and aggregates</li><li>PostGIS long transactions</li></ul><p>For the PostGIS extensions supported by WarehousePG PostGIS, see <a href="#topic3">WarehousePG PostGIS Extension</a>.</p><h3 id="supported-postgis-data-types" tabindex="-1"><a id="topic_g2d_hkb_3p"></a>Supported PostGIS Data Types <a class="header-anchor" href="#supported-postgis-data-types" aria-label="Permalink to &quot;&lt;a id=&quot;topic_g2d_hkb_3p&quot;&gt;&lt;/a&gt;Supported PostGIS Data Types&quot;">​</a></h3><p>WarehousePG PostGIS extension supports these PostGIS data types:</p><ul><li>box2d</li><li>box3d</li><li>geometry</li><li>geography</li></ul><p>For a list of PostGIS data types, operators, and functions, see the <a href="https://postgis.net/docs/manual-3.3/reference.html" target="_blank" rel="noreferrer">PostGIS reference documentation</a>.</p><h3 id="supported-postgis-raster-data-types" tabindex="-1"><a id="topic_bl3_4vy_d1b"></a>Supported PostGIS Raster Data Types <a class="header-anchor" href="#supported-postgis-raster-data-types" aria-label="Permalink to &quot;&lt;a id=&quot;topic_bl3_4vy_d1b&quot;&gt;&lt;/a&gt;Supported PostGIS Raster Data Types&quot;">​</a></h3><p>WarehousePG PostGIS supports these PostGIS Raster data types.</p><ul><li>geomval</li><li>addbandarg</li><li>rastbandarg</li><li>raster</li><li>reclassarg</li><li>summarystats</li><li>unionarg</li></ul><p>For information about PostGIS Raster data Management, queries, and applications, see the <a href="https://postgis.net/docs/manual-3.3/using_raster_dataman.html" target="_blank" rel="noreferrer">PostGIS documentation</a>.</p><p>For a list of PostGIS Raster data types, operators, and functions, see the <a href="https://postgis.net/docs/manual-3.3/RT_reference.html" target="_blank" rel="noreferrer">PostGIS Raster reference documentation</a>.</p><h3 id="supported-postgis-index" tabindex="-1"><a id="topic_y5z_nkb_3p"></a>Supported PostGIS Index <a class="header-anchor" href="#supported-postgis-index" aria-label="Permalink to &quot;&lt;a id=&quot;topic_y5z_nkb_3p&quot;&gt;&lt;/a&gt;Supported PostGIS Index&quot;">​</a></h3><p>WarehousePG PostGIS extension supports the GiST (Generalized Search Tree) index.</p><h3 id="postgis-extension-limitations" tabindex="-1"><a id="topic_wy2_rkb_3p"></a>PostGIS Extension Limitations <a class="header-anchor" href="#postgis-extension-limitations" aria-label="Permalink to &quot;&lt;a id=&quot;topic_wy2_rkb_3p&quot;&gt;&lt;/a&gt;PostGIS Extension Limitations&quot;">​</a></h3><p>This section lists the WarehousePG PostGIS extension limitations for user-defined functions (UDFs), data types, and aggregates.</p><ul><li><p>Data types and functions related to PostGIS topology functionality, such as TopoGeometry, are not supported by WarehousePG.</p></li><li><p>These PostGIS aggregates are not supported by WarehousePG:</p><ul><li>ST_Collect</li><li>ST_MakeLine</li></ul><p>On a WarehousePG with multiple segments, the aggregate might return different answers if it is called several times repeatedly.</p></li><li><p>WarehousePG does not support PostGIS long transactions.</p><p>PostGIS relies on triggers and the PostGIS table <code>public.authorization_table</code> for long transaction support. When PostGIS attempts to acquire locks for long transactions, WarehousePG reports errors citing that the function cannot access the relation, <code>authorization_table</code>.</p></li><li><p>The <code>_postgis_index_extent</code> function is not supported on WarehousePG 7 due to its dependence on spatial index operations.</p></li><li><p>The <code>&lt;-&gt;</code> operator (<code>geometry &lt;-&gt; geometry</code>) returns the centroid/centroid distance for WarehousePG 7.</p></li><li><p>The TIGER geocoder extension is supported. However, upgrading the TIGER geocoder extension is not supported.</p></li><li><p>The <code>standardize_address()</code> function uses <code>lex</code>, <code>gaz</code> or <code>rules</code> tables as parameters. If you are using tables apart from <code>us_lex</code>, <code>us_gaz</code> or <code>us_rules</code>, you should create them with the distribution policy <code>DISTRIBUTED REPLICATED</code> to work for WarehousePG.</p></li></ul>`,85)]))}const m=o(p,[["render",r]]);export{b as __pageData,m as default};
