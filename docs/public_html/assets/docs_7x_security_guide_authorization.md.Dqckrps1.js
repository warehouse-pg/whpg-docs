import{_ as a,c as t,o as s,ag as n}from"./chunks/framework.Ds6Eueu6.js";const u=JSON.parse('{"title":"Configuring Database Authorization","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/security_guide/authorization.md","filePath":"docs/7x/security_guide/authorization.md"}'),o={name:"docs/7x/security_guide/authorization.md"};function i(d,e,r,l,c,p){return s(),t("div",null,e[0]||(e[0]=[n(`<h1 id="configuring-database-authorization" tabindex="-1">Configuring Database Authorization <a class="header-anchor" href="#configuring-database-authorization" aria-label="Permalink to &quot;Configuring Database Authorization&quot;">​</a></h1><p>Describes how to restrict authorization access to database data at the user level by using roles and permissions.</p><p><strong>Parent topic:</strong> <a href="./../security_guide/">WarehousePG Security Configuration Guide</a></p><h2 id="access-permissions-and-roles" tabindex="-1"><a id="topic_k35_qtx_kr"></a>Access Permissions and Roles <a class="header-anchor" href="#access-permissions-and-roles" aria-label="Permalink to &quot;&lt;a id=&quot;topic_k35_qtx_kr&quot;&gt;&lt;/a&gt;Access Permissions and Roles&quot;">​</a></h2><p>WarehousePG manages database access permissions using <em>roles</em>. The concept of roles subsumes the concepts of users and groups. A role can be a database user, a group, or both. Roles can own database objects (for example, tables) and can assign privileges on those objects to other roles to control access to the objects. Roles can be members of other roles, thus a member role can inherit the object privileges of its parent role.</p><p>Every WarehousePG cluster contains a set of database roles (users and groups). Those roles are separate from the users and groups managed by the operating system on which the server runs. However, for convenience you may want to maintain a relationship between operating system user names and WarehousePG role names, since many of the client applications use the current operating system user name as the default.</p><p>In WarehousePG, users log in and connect through the coordinator instance, which verifies their role and access privileges. The coordinator then issues out commands to the segment instances behind the scenes using the currently logged in role.</p><p>Roles are defined at the system level, so they are valid for all databases in the system.</p><p>To bootstrap the WarehousePG cluster, a freshly initialized system always contains one predefined superuser role (also referred to as the system user). This role will have the same name as the operating system user that initialized the WarehousePG cluster. Customarily, this role is named <code>gpadmin</code>. To create more roles you first must connect as this initial role.</p><h2 id="managing-object-privileges" tabindex="-1"><a id="managing_obj_priv"></a>Managing Object Privileges <a class="header-anchor" href="#managing-object-privileges" aria-label="Permalink to &quot;&lt;a id=&quot;managing_obj_priv&quot;&gt;&lt;/a&gt;Managing Object Privileges&quot;">​</a></h2><p>When an object (table, view, sequence, database, function, language, schema, or tablespace) is created, it is assigned an owner. The owner is normally the role that ran the creation statement. For most kinds of objects, the initial state is that only the owner (or a superuser) can do anything with the object. To allow other roles to use it, privileges must be granted. WarehousePG supports the following privileges for each object type:</p><table tabindex="0"><thead><tr><th style="text-align:left;">Object Type</th><th style="text-align:left;">Privileges</th></tr></thead><tbody><tr><td style="text-align:left;">Tables, Views, Sequences</td><td style="text-align:left;"><code>SELECT</code><br><code>INSERT</code><br><code>UPDATE</code><br><code>DELETE</code><br><code>RULE</code><br><code>ALL</code></td></tr><tr><td style="text-align:left;">External Tables</td><td style="text-align:left;"><code>SELECT</code><br><code>RULE</code><br><code>ALL</code></td></tr><tr><td style="text-align:left;">Databases</td><td style="text-align:left;"><code>CONNECT</code><br><code>CREATE</code><br><code>TEMPORARY</code> or <code>TEMP</code><br><code>ALL</code></td></tr><tr><td style="text-align:left;">Functions</td><td style="text-align:left;"><code>EXECUTE</code></td></tr><tr><td style="text-align:left;">Procedural Languages</td><td style="text-align:left;"><code>USAGE</code></td></tr><tr><td style="text-align:left;">Schemas</td><td style="text-align:left;"><code>CREATE</code><br><code>USAGE</code><br><code>ALL</code></td></tr></tbody></table><p>Privileges must be granted for each object individually. For example, granting <code>ALL</code> on a database does not grant full access to the objects within that database. It only grants all of the database-level privileges (<code>CONNECT</code>, <code>CREATE</code>, <code>TEMPORARY</code>) to the database itself.</p><p>Use the <code>GRANT</code> SQL command to give a specified role privileges on an object. For example:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>=# GRANT INSERT ON mytable TO jsmith;</span></span></code></pre></div><p>To revoke privileges, use the <code>REVOKE</code> command. For example:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>=# REVOKE ALL PRIVILEGES ON mytable FROM jsmith;</span></span></code></pre></div><p>You can also use the <code>DROP OWNED</code> and <code>REASSIGN OWNED</code> commands for managing objects owned by deprecated roles. (Note: only an object&#39;s owner or a superuser can drop an object or reassign ownership.) For example:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span> =# REASSIGN OWNED BY sally TO bob;</span></span>
<span class="line"><span> =# DROP OWNED BY visitor;</span></span></code></pre></div><h2 id="restricting-access-by-time" tabindex="-1"><a id="time-based-restriction"></a>Restricting Access by Time <a class="header-anchor" href="#restricting-access-by-time" aria-label="Permalink to &quot;&lt;a id=&quot;time-based-restriction&quot;&gt;&lt;/a&gt;Restricting Access by Time&quot;">​</a></h2><p>WarehousePG enables the administrator to restrict access to certain times by role. Use the <code>CREATE ROLE</code> or <code>ALTER ROLE</code> commands to specify time-based constraints.</p><p>Access can be restricted by day or by day and time. The constraints are removable without deleting and recreating the role.</p><p>Time-based constraints only apply to the role to which they are assigned. If a role is a member of another role that contains a time constraint, the time constraint is not inherited.</p><p>Time-based constraints are enforced only during login. The <code>SET ROLE</code> and <code>SET SESSION AUTHORIZATION</code> commands are not affected by any time-based constraints.</p><p>Superuser or <code>CREATEROLE</code> privileges are required to set time-based constraints for a role. No one can add time-based constraints to a superuser.</p><p>There are two ways to add time-based constraints. Use the keyword <code>DENY</code> in the <code>CREATE ROLE</code> or <code>ALTER ROLE</code> command followed by one of the following.</p><ul><li>A day, and optionally a time, when access is restricted. For example, no access on Wednesdays.</li><li>An interval—that is, a beginning and ending day and optional time—when access is restricted. For example, no access from Wednesday 10 p.m. through Thursday at 8 a.m.</li></ul><p>You can specify more than one restriction; for example, no access Wednesdays at any time and no access on Fridays between 3:00 p.m. and 5:00 p.m.</p><p>There are two ways to specify a day. Use the word <code>DAY</code> followed by either the English term for the weekday, in single quotation marks, or a number between 0 and 6, as shown in the table below.</p><table tabindex="0"><thead><tr><th style="text-align:left;">English Term</th><th style="text-align:left;">Number</th></tr></thead><tbody><tr><td style="text-align:left;">DAY &#39;Sunday&#39;</td><td style="text-align:left;">DAY 0</td></tr><tr><td style="text-align:left;">DAY &#39;Monday&#39;</td><td style="text-align:left;">DAY 1</td></tr><tr><td style="text-align:left;">DAY &#39;Tuesday&#39;</td><td style="text-align:left;">DAY 2</td></tr><tr><td style="text-align:left;">DAY &#39;Wednesday&#39;</td><td style="text-align:left;">DAY 3</td></tr><tr><td style="text-align:left;">DAY &#39;Thursday&#39;</td><td style="text-align:left;">DAY 4</td></tr><tr><td style="text-align:left;">DAY &#39;Friday&#39;</td><td style="text-align:left;">DAY 5</td></tr><tr><td style="text-align:left;">DAY &#39;Saturday&#39;</td><td style="text-align:left;">DAY 6</td></tr></tbody></table><p>A time of day is specified in either 12- or 24-hour format. The word <code>TIME</code> is followed by the specification in single quotation marks. Only hours and minutes are specified and are separated by a colon ( : ). If using a 12-hour format, add <code>AM</code> or <code>PM</code> at the end. The following examples show various time specifications.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>TIME &#39;14:00&#39;     # 24-hour time implied</span></span>
<span class="line"><span>TIME &#39;02:00 PM&#39;  # 12-hour time specified by PM </span></span>
<span class="line"><span>TIME &#39;02:00&#39;     # 24-hour time implied. This is equivalent to TIME &#39;02:00 AM&#39;.</span></span></code></pre></div><blockquote><p><strong>Important</strong> Time-based authentication is enforced with the server time. Timezones are disregarded.</p></blockquote><p>To specify an interval of time during which access is denied, use two day/time specifications with the words <code>BETWEEN</code> and <code>AND</code>, as shown. <code>DAY</code> is always required.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>BETWEEN DAY &#39;Monday&#39; AND DAY &#39;Tuesday&#39; </span></span>
<span class="line"><span></span></span>
<span class="line"><span>BETWEEN DAY &#39;Monday&#39; TIME &#39;00:00&#39; AND</span></span>
<span class="line"><span>        DAY &#39;Monday&#39; TIME &#39;01:00&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>BETWEEN DAY &#39;Monday&#39; TIME &#39;12:00 AM&#39; AND</span></span>
<span class="line"><span>        DAY &#39;Tuesday&#39; TIME &#39;02:00 AM&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>BETWEEN DAY &#39;Monday&#39; TIME &#39;00:00&#39; AND</span></span>
<span class="line"><span>        DAY &#39;Tuesday&#39; TIME &#39;02:00&#39;</span></span>
<span class="line"><span>        DAY 2 TIME &#39;02:00&#39;</span></span></code></pre></div><p>The last three statements are equivalent.</p><blockquote><p><strong>Note</strong> Intervals of days cannot wrap past Saturday.</p></blockquote><p>The following syntax is not correct:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>DENY BETWEEN DAY &#39;Saturday&#39; AND DAY &#39;Sunday&#39;</span></span></code></pre></div><p>The correct specification uses two DENY clauses, as follows:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>DENY DAY &#39;Saturday&#39;</span></span>
<span class="line"><span>DENY DAY &#39;Sunday&#39;</span></span></code></pre></div><p>The following examples demonstrate creating a role with time-based constraints and modifying a role to add time-based constraints. Only the statements needed for time-based constraints are shown. For more details on creating and altering roles see the descriptions of <code>CREATE ROLE</code> and <code>ALTER ROLE</code> in the <em>WarehousePG Reference Guide</em>.</p><h3 id="example-1-–-create-a-new-role-with-time-based-constraints" tabindex="-1"><a id="ex1"></a>Example 1 – Create a New Role with Time-based Constraints <a class="header-anchor" href="#example-1-–-create-a-new-role-with-time-based-constraints" aria-label="Permalink to &quot;&lt;a id=&quot;ex1&quot;&gt;&lt;/a&gt;Example 1 – Create a New Role with Time-based Constraints&quot;">​</a></h3><p>No access is allowed on weekends.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span> CREATE ROLE generaluser</span></span>
<span class="line"><span> DENY DAY &#39;Saturday&#39;</span></span>
<span class="line"><span> DENY DAY &#39;Sunday&#39;</span></span>
<span class="line"><span> ...</span></span></code></pre></div><h3 id="example-2-–-alter-a-role-to-add-time-based-constraints" tabindex="-1"><a id="ex2"></a>Example 2 – Alter a Role to Add Time-based Constraints <a class="header-anchor" href="#example-2-–-alter-a-role-to-add-time-based-constraints" aria-label="Permalink to &quot;&lt;a id=&quot;ex2&quot;&gt;&lt;/a&gt;Example 2 – Alter a Role to Add Time-based Constraints&quot;">​</a></h3><p>No access is allowed every night between 2:00 a.m. and 4:00 a.m.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER ROLE generaluser</span></span>
<span class="line"><span> DENY BETWEEN DAY &#39;Monday&#39; TIME &#39;02:00&#39; AND DAY &#39;Monday&#39; TIME &#39;04:00&#39;</span></span>
<span class="line"><span> DENY BETWEEN DAY &#39;Tuesday&#39; TIME &#39;02:00&#39; AND DAY &#39;Tuesday&#39; TIME &#39;04:00&#39;</span></span>
<span class="line"><span> DENY BETWEEN DAY &#39;Wednesday&#39; TIME &#39;02:00&#39; AND DAY &#39;Wednesday&#39; TIME &#39;04:00&#39;</span></span>
<span class="line"><span> DENY BETWEEN DAY &#39;Thursday&#39; TIME &#39;02:00&#39; AND DAY &#39;Thursday&#39; TIME &#39;04:00&#39;</span></span>
<span class="line"><span> DENY BETWEEN DAY &#39;Friday&#39; TIME &#39;02:00&#39; AND DAY &#39;Friday&#39; TIME &#39;04:00&#39;</span></span>
<span class="line"><span> DENY BETWEEN DAY &#39;Saturday&#39; TIME &#39;02:00&#39; AND DAY &#39;Saturday&#39; TIME &#39;04:00&#39;</span></span>
<span class="line"><span> DENY BETWEEN DAY &#39;Sunday&#39; TIME &#39;02:00&#39; AND DAY &#39;Sunday&#39; TIME &#39;04:00&#39;</span></span>
<span class="line"><span>  ...</span></span></code></pre></div><h3 id="excample-3-–-alter-a-role-to-add-time-based-constraints" tabindex="-1"><a id="ex3"></a>Excample 3 – Alter a Role to Add Time-based Constraints <a class="header-anchor" href="#excample-3-–-alter-a-role-to-add-time-based-constraints" aria-label="Permalink to &quot;&lt;a id=&quot;ex3&quot;&gt;&lt;/a&gt;Excample 3 – Alter a Role to Add Time-based Constraints&quot;">​</a></h3><p>No access is allowed Wednesdays or Fridays between 3:00 p.m. and 5:00 p.m.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER ROLE generaluser</span></span>
<span class="line"><span> DENY DAY &#39;Wednesday&#39;</span></span>
<span class="line"><span> DENY BETWEEN DAY &#39;Friday&#39; TIME &#39;15:00&#39; AND DAY &#39;Friday&#39; TIME &#39;17:00&#39;</span></span></code></pre></div><h2 id="dropping-a-time-based-restriction" tabindex="-1"><a id="drop_timebased_restriction"></a>Dropping a Time-based Restriction <a class="header-anchor" href="#dropping-a-time-based-restriction" aria-label="Permalink to &quot;&lt;a id=&quot;drop_timebased_restriction&quot;&gt;&lt;/a&gt;Dropping a Time-based Restriction&quot;">​</a></h2><p>To remove a time-based restriction, use the ALTER ROLE command. Enter the keywords DROP DENY FOR followed by a day/time specification to drop.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>DROP DENY FOR DAY &#39;Sunday&#39;</span></span></code></pre></div><p>Any constraint containing all or part of the conditions in a DROP clause is removed. For example, if an existing constraint denies access on Mondays and Tuesdays, and the DROP clause removes constraints for Mondays, the existing constraint is completely dropped. The DROP clause completely removes all constraints that overlap with the constraint in the drop clause. The overlapping constraints are completely removed even if they contain more restrictions that the restrictions mentioned in the DROP clause.</p><p>Example 1 - Remove a Time-based Restriction from a Role</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span> ALTER ROLE generaluser</span></span>
<span class="line"><span> DROP DENY FOR DAY &#39;Monday&#39;</span></span>
<span class="line"><span>    ...</span></span></code></pre></div><p>This statement would remove all constraints that overlap with a Monday constraint for the role <code>generaluser</code> in Example 2, even if there are additional constraints.</p>`,58)]))}const g=a(o,[["render",i]]);export{u as __pageData,g as default};
