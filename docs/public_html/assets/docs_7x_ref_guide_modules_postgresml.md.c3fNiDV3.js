import{_ as a,c as s,o as n,ag as t}from"./chunks/framework.Ds6Eueu6.js";const h=JSON.parse('{"title":"postgresml","description":"","frontmatter":{},"headers":[],"relativePath":"docs/7x/ref_guide/modules/postgresml.md","filePath":"docs/7x/ref_guide/modules/postgresml.md"}'),i={name:"docs/7x/ref_guide/modules/postgresml.md"};function l(p,e,o,r,d,c){return n(),s("div",null,e[0]||(e[0]=[t(`<h1 id="postgresml" tabindex="-1">postgresml <a class="header-anchor" href="#postgresml" aria-label="Permalink to &quot;postgresml&quot;">​</a></h1><p><a href="https://postgresml.org" target="_blank" rel="noreferrer">PostgresML</a> is a machine learning extension for PostgreSQL that enables you to perform training and inference on text and tabular data using SQL queries. With PostgresML, you can seamlessly integrate machine learning models into your WarehousePG and harness the power of cutting-edge algorithms to process data efficiently.</p><p>The <code>postgresml</code> module provides PostgresML functions for using tens of thousands of pre-trained open source AI/machine learning models in WarehousePG. The models are provided by the <a href="https://huggingface.co/" target="_blank" rel="noreferrer">Hugging Face AI data science platform</a>.</p><h2 id="before-registering-the-postgresml-module" tabindex="-1"><a id="prereqs"></a>Before Registering the <code>postgresml</code> Module <a class="header-anchor" href="#before-registering-the-postgresml-module" aria-label="Permalink to &quot;&lt;a id=&quot;prereqs&quot;&gt;&lt;/a&gt;Before Registering the \`postgresml\` Module&quot;">​</a></h2><p>Before registering the <code>postgresml</code> module, you must install the Data Science bundle for Python3.11, add the <code>pgml</code> library to the set of libraries the WarehousePG server loads at startup, and set the Python virtual environment:</p><ol><li><p>Install the Data Science bundle for Python 3.11.</p><p>For example:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>gppkg install DataSciencePython3.11-x.x.x-gp7-el8_x86_64.gppkg</span></span></code></pre></div><p>where x.x.x is the version string.</p></li><li><p>Add the <code>postgresml</code> library to preload when the WarehousePG server starts, using the <code>shared_preload_libraries</code> server configuration parameter and then restart the cluster.</p><p>For example:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>gpconfig -c shared_preload_libraries -v &#39;xxx, pgml&#39;</span></span></code></pre></div><p>where xxx represents any existing preloaded libraries.</p></li><li><p>Set the Python virtual environment.</p><p>At the session level:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SET pgml.venv=&#39;$GPHOME/ext/DataSciencePython3.11&#39;;</span></span></code></pre></div><p>To last beyond a session:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>gpconfig -c pgml.venv -v &#39;$GPHOME/ext/DataSciencePython3.11&#39;</span></span>
<span class="line"><span>gpstop -u</span></span></code></pre></div></li></ol><blockquote><p><strong>Note</strong> If this yields the error message, <code>[CRITICAL]:-not a valid GUC: pgml.venv</code> it means you failed to run Step 2, including restarting the cluster, beforehand.</p></blockquote><p>Proceed to the next section to register the <code>postgresml</code> module.</p><h2 id="registering-the-module" tabindex="-1"><a id="install_register"></a>Registering the Module <a class="header-anchor" href="#registering-the-module" aria-label="Permalink to &quot;&lt;a id=&quot;install_register&quot;&gt;&lt;/a&gt;Registering the Module&quot;">​</a></h2><p>The <code>postgresml</code> module is installed when you install WarehousePG. Before you can use any of the data types, functions, or operators defined in the module, you must register the <code>postgresml</code> extension in each database in which you want to use the objects:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE EXTENSION pgml;</span></span></code></pre></div><p>Refer to <a href="./../../install_guide/install_extensions.html">Installing Extensions</a> for more information.</p><h2 id="upgrading-the-module" tabindex="-1"><a id="topic_upgrading"></a>Upgrading the Module <a class="header-anchor" href="#upgrading-the-module" aria-label="Permalink to &quot;&lt;a id=&quot;topic_upgrading&quot;&gt;&lt;/a&gt;Upgrading the Module&quot;">​</a></h2><p>The <code>PostgresML</code> module is installed when you install or upgrade WarehousePG. A previous version of the extension will continue to work in existing databases after you upgrade WarehousePG. To upgrade to the most recent version of the extension, you must:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER EXTENSION pgml UPDATE TO &#39;2.7.13+greenplum.1.0.0&#39;;</span></span></code></pre></div><p>in <strong>every</strong> database in which you registered/use the extension.</p><h2 id="user-defined-functions" tabindex="-1"><a id="UDF_summary"></a>User-Defined Functions <a class="header-anchor" href="#user-defined-functions" aria-label="Permalink to &quot;&lt;a id=&quot;UDF_summary&quot;&gt;&lt;/a&gt;User-Defined Functions&quot;">​</a></h2><p>The <code>postgresml</code> extension currently supports just a subset of all of the user-defined functions provided by PostgresML. They are these three:</p><ul><li><code>pgml.load_dataset()</code>: Loads a dataset into tables in WarehousePG using the <code>INSERT</code> SQL command. Read more about loading data <a href="https://postgresml.org/docs/use-cases/natural-language-processing" target="_blank" rel="noreferrer">here</a>.</li><li><code>pgml.embed()</code> - Generates an embedding for the dataset. Read more about PostgresML embeddings <a href="https://postgresml.org/docs/use-cases/embeddings/" target="_blank" rel="noreferrer">here</a>.</li><li><code>pgml.transform()</code>: Applies a pre-trained transformer to process data. Read more about PostgresML pre-trained models <a href="https://postgresml.org/docs/use-cases/natural-language-processing" target="_blank" rel="noreferrer">here</a>.</li><li><code>pgml.train()</code>: Handles different training tasks which are configurable with the function parameters. Read more about supervised learning <a href="https://postgresml.org/docs/use-cases/supervised-learning" target="_blank" rel="noreferrer">here</a>.</li><li><code>pgml.predict()</code>: Provides online predictions using the best, automatically deployed model for a project. Read more about supervised learning <a href="https://postgresml.org/docs/use-cases/supervised-learning" target="_blank" rel="noreferrer">here</a>.</li></ul><p>VMware anticipates adding support for the additional PostgresML functions in future releases.</p><h3 id="pgml-load-dataset" tabindex="-1"><a id="pgml_load_dataset"></a>pgml.load_dataset() <a class="header-anchor" href="#pgml-load-dataset" aria-label="Permalink to &quot;&lt;a id=&quot;pgml_load_dataset&quot;&gt;&lt;/a&gt;pgml.load_dataset()&quot;">​</a></h3><h4 id="syntax" tabindex="-1">Syntax <a class="header-anchor" href="#syntax" aria-label="Permalink to &quot;Syntax&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pgml.load_dataset( </span></span>
<span class="line"><span>	source TEXT,</span></span>
<span class="line"><span>	subset TEXT,</span></span>
<span class="line"><span>	limit bigint,</span></span>
<span class="line"><span>	kwargs JSONB</span></span>
<span class="line"><span>)</span></span></code></pre></div><p>where:</p><p><code>source</code> is the name of the data source. <code>subset</code> is a subset of the data source. The default is <code>NULL</code>. <code>limit</code> is a user-defined limit on the number of imported rows. The default is <code>NULL</code>. <code>kwargs</code> is a a JSONB object containing optional arguments. The default is an empty object (<code>{}</code>).</p><h3 id="pgml-embed" tabindex="-1"><a id="pgml_embed"></a>pgml.embed() <a class="header-anchor" href="#pgml-embed" aria-label="Permalink to &quot;&lt;a id=&quot;pgml_embed&quot;&gt;&lt;/a&gt;pgml.embed()&quot;">​</a></h3><h4 id="syntax-1" tabindex="-1">Syntax <a class="header-anchor" href="#syntax-1" aria-label="Permalink to &quot;Syntax&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pgml.embed(</span></span>
<span class="line"><span>    transformer TEXT, </span></span>
<span class="line"><span>    inputs TEXT or TEXT[],</span></span>
<span class="line"><span>    kwargs JSONB</span></span>
<span class="line"><span>)</span></span></code></pre></div><p>where:</p><ul><li><code>transformer</code> is the huggingface sentence-transformer name.</li><li><code>inputs</code> are the text(s) to embed. It can be a single text string or an array of texts.</li><li><code>kwargs</code> is a JSONB object containing optional arguments.</li></ul><h3 id="pgml-transform" tabindex="-1"><a id="pgml_transform"></a>pgml.transform() <a class="header-anchor" href="#pgml-transform" aria-label="Permalink to &quot;&lt;a id=&quot;pgml_transform&quot;&gt;&lt;/a&gt;pgml.transform()&quot;">​</a></h3><h4 id="syntax-2" tabindex="-1">Syntax <a class="header-anchor" href="#syntax-2" aria-label="Permalink to &quot;Syntax&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pgml.transform(</span></span>
<span class="line"><span>    task TEXT or JSONB, </span></span>
<span class="line"><span>    call JSONB,</span></span>
<span class="line"><span>    inputs TEXT[] or BYTEA[]</span></span>
<span class="line"><span>)</span></span></code></pre></div><p>where:</p><ul><li><code>task</code> is the task name passed as either a simple text string or, for a more complex task setup, a JSONB object containing a full pipeline and initializer arguments.</li><li><code>call</code> is a JSONB object containing call arguments passed alongside the <code>inputs</code> values.</li><li><code>inputs</code> is a <code>TEXT[]</code> or <code>BYTEA[]</code> array containing inputs for inference.</li></ul><blockquote><p><strong>Note</strong> You must explicitly specify a model when calling <code>pgml.transform()</code>; default models are not yet supported.</p></blockquote><h3 id="pgml-train" tabindex="-1"><a id="pgml_train"></a>pgml.train() <a class="header-anchor" href="#pgml-train" aria-label="Permalink to &quot;&lt;a id=&quot;pgml_train&quot;&gt;&lt;/a&gt;pgml.train()&quot;">​</a></h3><h4 id="syntax-3" tabindex="-1">Syntax <a class="header-anchor" href="#syntax-3" aria-label="Permalink to &quot;Syntax&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pgml.train(</span></span>
<span class="line"><span>    project_name TEXT,</span></span>
<span class="line"><span>    task TEXT DEFAULT NULL,</span></span>
<span class="line"><span>    relation_name TEXT DEFAULT NULL,</span></span>
<span class="line"><span>    y_column_name TEXT DEFAULT NULL,</span></span>
<span class="line"><span>    algorithm TEXT DEFAULT &#39;linear&#39;,</span></span>
<span class="line"><span>    hyperparams JSONB DEFAULT &#39;{}&#39;::JSONB,</span></span>
<span class="line"><span>    search TEXT DEFAULT NULL,</span></span>
<span class="line"><span>    search_params JSONB DEFAULT &#39;{}&#39;::JSONB,</span></span>
<span class="line"><span>    search_args JSONB DEFAULT &#39;{}&#39;::JSONB,</span></span>
<span class="line"><span>    test_size REAL DEFAULT 0.25,</span></span>
<span class="line"><span>    test_sampling TEXT DEFAULT &#39;random&#39;,</span></span>
<span class="line"><span>    preprocess JSONB DEFAULT &#39;{}&#39;::JSONB</span></span>
<span class="line"><span>)</span></span></code></pre></div><p>where</p><ul><li><code>project_name</code> is an easily recognizable identifier to organize your work.</li><li><code>task</code> is the objective of the experiment: <code>regression</code>, <code>classification</code>, or <code>cluster</code>.</li><li><code>relation_name</code> is the Postgres table or view where the training data is stored or defined.</li><li><code>y_column_name</code> is the name of the label column in the training table.</li><li><code>algorithm</code> is the algorithm to train on the dataset, the available algorithms are <code>regression</code>, <code>classification</code>, and <code>clustering</code>.</li><li><code>hyperparams</code> are the hyperparameters to pass to the algorithm for training, JSON formatted.</li><li><code>search</code> indicates, if set, whether or not PostgresML performs a hyperparameter search to find the best hyperparameters for the algorithm.</li><li><code>search_params</code> are the search parameters used in the <code>hyperparameter</code> search, using the scikit-learn notation, JSON formatted.</li><li><code>search_args</code> are the configuration parameters for the <code>search</code>, JSON formatted. Currently only <code>n_iter</code> is supported for <code>random</code> search.</li><li><code>test_size</code> is the fraction of the dataset to use for the test set and algorithm validation.</li><li><code>test_sampling</code> is the algorithm used to fetch test data from the dataset: <code>random</code>, <code>first</code>, or <code>last</code>.</li><li><code>preprocess</code> are the preprocessing steps to impute NULLS, encode categoricals and scale inputs.</li></ul><p>For more information about the available algorithms, hyperparameter search, and data pre-processing, visit the official <a href="https://postgresml.org/docs/introduction/apis/sql-extensions/pgml.train/" target="_blank" rel="noreferrer">PostgresML Documentation</a>.</p><h3 id="pgml-predict" tabindex="-1"><a id="pgml_predict"></a>pgml.predict() <a class="header-anchor" href="#pgml-predict" aria-label="Permalink to &quot;&lt;a id=&quot;pgml_predict&quot;&gt;&lt;/a&gt;pgml.predict()&quot;">​</a></h3><h4 id="syntax-4" tabindex="-1">Syntax <a class="header-anchor" href="#syntax-4" aria-label="Permalink to &quot;Syntax&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>select pgml.predict (</span></span>
<span class="line"><span>    project_name TEXT,</span></span>
<span class="line"><span>    features REAL[]</span></span>
<span class="line"><span>)</span></span></code></pre></div><p>where</p><ul><li><code>project_name</code> is the project name used to train models in <a href="#pgml.train">pgml.train()</a>.</li><li><code>features</code> is an aggregate of feature vectors used to predict novel data points</li></ul><h2 id="examples" tabindex="-1"><a id="Example"></a>Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;&lt;a id=&quot;Example&quot;&gt;&lt;/a&gt;Examples&quot;">​</a></h2><p>The following example:</p><ol><li>Downloads a dataset from the internet and creates a table to contain the data.</li><li>Generates an embedding for the text.</li><li>Downloads and runs pre-trained models.</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Download the dataset from the internet and create table for it</span></span>
<span class="line"><span></span></span>
<span class="line"><span>SELECT pgml.load_dataset(&#39;tweet_eval&#39;, &#39;sentiment&#39;); </span></span>
<span class="line"><span></span></span>
<span class="line"><span># Generate an embedding for the text </span></span>
<span class="line"><span></span></span>
<span class="line"><span>SELECT pgml.embed(&#39;distilbert-base-uncased&#39;, &#39;Star Wars christmas special is on Disney&#39;)::vector AS embedding; </span></span>
<span class="line"><span>--------------------------------------------------------------------------------------------- </span></span>
<span class="line"><span></span></span>
<span class="line"><span>SELECT text, pgml.embed(&#39;distilbert-base-uncased&#39;, text) </span></span>
<span class="line"><span></span></span>
<span class="line"><span>FROM pgml.tweet_eval limit 5; </span></span>
<span class="line"><span></span></span>
<span class="line"><span>--------------------------------------------------------------------------------------------- </span></span>
<span class="line"><span></span></span>
<span class="line"><span>CREATE TABLE tweet_embeddings AS </span></span>
<span class="line"><span></span></span>
<span class="line"><span>SELECT text, pgml.embed(&#39;distilbert-base-uncased&#39;, text) AS embedding </span></span>
<span class="line"><span></span></span>
<span class="line"><span>FROM pgml.tweet_eval limit 5; </span></span>
<span class="line"><span></span></span>
<span class="line"><span># Download and run pre-trained models</span></span>
<span class="line"><span></span></span>
<span class="line"><span>SELECT pgml.transform( </span></span>
<span class="line"><span>    &#39;translation_en_to_fr&#39;, </span></span>
<span class="line"><span>    inputs =&gt; ARRAY[ </span></span>
<span class="line"><span>        &#39;Welcome to the future!&#39;, </span></span>
<span class="line"><span>        &#39;Where have you been all this time?&#39; </span></span>
<span class="line"><span>    ] </span></span>
<span class="line"><span>) AS french;</span></span></code></pre></div><p>The following example:</p><ol><li>Obtains training data.</li><li>Trains a model.</li><li>Performs a prediction.</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Obtain training data from a dataset</span></span>
<span class="line"><span></span></span>
<span class="line"><span>SELECT * FROM pgml.load_dataset(&#39;digits&#39;);</span></span>
<span class="line"><span>SELECT target, image</span></span>
<span class="line"><span>FROM pgml.digits LIMIT 5;</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Train a model using an algorithm using the default linear algorithm </span></span>
<span class="line"><span></span></span>
<span class="line"><span>SELECT * FROM pgml.train(</span></span>
<span class="line"><span>&#39;Handwritten Digit Image Classifier&#39;,</span></span>
<span class="line"><span>&#39;classification&#39;,</span></span>
<span class="line"><span>&#39;pgml.digits&#39;,</span></span>
<span class="line"><span>&#39;target&#39;</span></span>
<span class="line"><span>);</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Predict</span></span>
<span class="line"><span></span></span>
<span class="line"><span>SELECT</span></span>
<span class="line"><span>target,</span></span>
<span class="line"><span>pgml.predict(&#39;Handwritten Digit Image Classifier&#39;, image) AS prediction</span></span>
<span class="line"><span>FROM pgml.digits</span></span>
<span class="line"><span>LIMIT 10;</span></span></code></pre></div>`,54)]))}const m=a(i,[["render",l]]);export{h as __pageData,m as default};
